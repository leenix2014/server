// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roulette/common.proto

package protocols.roulette;

public final class common {
  private common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * &#64;Deprecated 下注目标
   * </pre>
   *
   * Protobuf enum {@code beton}
   */
  public enum beton
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *special bet, total 12
     * </pre>
     *
     * <code>small = 0;</code>
     */
    small(0),
    /**
     * <pre>
     * 大
     * </pre>
     *
     * <code>big = 1;</code>
     */
    big(1),
    /**
     * <pre>
     * 偶数
     * </pre>
     *
     * <code>even = 2;</code>
     */
    even(2),
    /**
     * <pre>
     * 奇数
     * </pre>
     *
     * <code>odd = 3;</code>
     */
    odd(3),
    /**
     * <pre>
     * 红
     * </pre>
     *
     * <code>red = 4;</code>
     */
    red(4),
    /**
     * <pre>
     * 黑
     * </pre>
     *
     * <code>black = 5;</code>
     */
    black(5),
    /**
     * <pre>
     * Dozen Bet，1-12
     * </pre>
     *
     * <code>dozen1 = 6;</code>
     */
    dozen1(6),
    /**
     * <pre>
     * Dozen Bet，13-24
     * </pre>
     *
     * <code>dozen2 = 7;</code>
     */
    dozen2(7),
    /**
     * <pre>
     * Dozen Bet，25-36
     * </pre>
     *
     * <code>dozen3 = 8;</code>
     */
    dozen3(8),
    /**
     * <pre>
     * Column Bet，1,4,7,...
     * </pre>
     *
     * <code>col1 = 9;</code>
     */
    col1(9),
    /**
     * <pre>
     * Column Bet，2,5,8,...
     * </pre>
     *
     * <code>col2 = 10;</code>
     */
    col2(10),
    /**
     * <pre>
     * Column Bet，3,6,9,...
     * </pre>
     *
     * <code>col3 = 11;</code>
     */
    col3(11),
    /**
     * <pre>
     *single bet, total 37
     * </pre>
     *
     * <code>s0 = 12;</code>
     */
    s0(12),
    /**
     * <pre>
     * Straight Bet,1
     * </pre>
     *
     * <code>s1 = 13;</code>
     */
    s1(13),
    /**
     * <pre>
     * Straight Bet,2
     * </pre>
     *
     * <code>s2 = 14;</code>
     */
    s2(14),
    /**
     * <pre>
     * Straight Bet,3
     * </pre>
     *
     * <code>s3 = 15;</code>
     */
    s3(15),
    /**
     * <pre>
     * Straight Bet,4
     * </pre>
     *
     * <code>s4 = 16;</code>
     */
    s4(16),
    /**
     * <pre>
     * Straight Bet,5
     * </pre>
     *
     * <code>s5 = 17;</code>
     */
    s5(17),
    /**
     * <pre>
     * Straight Bet,6
     * </pre>
     *
     * <code>s6 = 18;</code>
     */
    s6(18),
    /**
     * <pre>
     * Straight Bet,7
     * </pre>
     *
     * <code>s7 = 19;</code>
     */
    s7(19),
    /**
     * <pre>
     * Straight Bet,8
     * </pre>
     *
     * <code>s8 = 20;</code>
     */
    s8(20),
    /**
     * <pre>
     * Straight Bet,9
     * </pre>
     *
     * <code>s9 = 21;</code>
     */
    s9(21),
    /**
     * <pre>
     * Straight Bet,10
     * </pre>
     *
     * <code>s10 = 22;</code>
     */
    s10(22),
    /**
     * <pre>
     * Straight Bet,11
     * </pre>
     *
     * <code>s11 = 23;</code>
     */
    s11(23),
    /**
     * <pre>
     * Straight Bet,12
     * </pre>
     *
     * <code>s12 = 24;</code>
     */
    s12(24),
    /**
     * <pre>
     * Straight Bet,13
     * </pre>
     *
     * <code>s13 = 25;</code>
     */
    s13(25),
    /**
     * <pre>
     * Straight Bet,14
     * </pre>
     *
     * <code>s14 = 26;</code>
     */
    s14(26),
    /**
     * <pre>
     * Straight Bet,15
     * </pre>
     *
     * <code>s15 = 27;</code>
     */
    s15(27),
    /**
     * <pre>
     * Straight Bet,16
     * </pre>
     *
     * <code>s16 = 28;</code>
     */
    s16(28),
    /**
     * <pre>
     * Straight Bet,17
     * </pre>
     *
     * <code>s17 = 29;</code>
     */
    s17(29),
    /**
     * <pre>
     * Straight Bet,18
     * </pre>
     *
     * <code>s18 = 30;</code>
     */
    s18(30),
    /**
     * <pre>
     * Straight Bet,19
     * </pre>
     *
     * <code>s19 = 31;</code>
     */
    s19(31),
    /**
     * <pre>
     * Straight Bet,20
     * </pre>
     *
     * <code>s20 = 32;</code>
     */
    s20(32),
    /**
     * <pre>
     * Straight Bet,21
     * </pre>
     *
     * <code>s21 = 33;</code>
     */
    s21(33),
    /**
     * <pre>
     * Straight Bet,22
     * </pre>
     *
     * <code>s22 = 34;</code>
     */
    s22(34),
    /**
     * <pre>
     * Straight Bet,23
     * </pre>
     *
     * <code>s23 = 35;</code>
     */
    s23(35),
    /**
     * <pre>
     * Straight Bet,24
     * </pre>
     *
     * <code>s24 = 36;</code>
     */
    s24(36),
    /**
     * <pre>
     * Straight Bet,25
     * </pre>
     *
     * <code>s25 = 37;</code>
     */
    s25(37),
    /**
     * <pre>
     * Straight Bet,26
     * </pre>
     *
     * <code>s26 = 38;</code>
     */
    s26(38),
    /**
     * <pre>
     * Straight Bet,27
     * </pre>
     *
     * <code>s27 = 39;</code>
     */
    s27(39),
    /**
     * <pre>
     * Straight Bet,28
     * </pre>
     *
     * <code>s28 = 40;</code>
     */
    s28(40),
    /**
     * <pre>
     * Straight Bet,29
     * </pre>
     *
     * <code>s29 = 41;</code>
     */
    s29(41),
    /**
     * <pre>
     * Straight Bet,30
     * </pre>
     *
     * <code>s30 = 42;</code>
     */
    s30(42),
    /**
     * <pre>
     * Straight Bet,31
     * </pre>
     *
     * <code>s31 = 43;</code>
     */
    s31(43),
    /**
     * <pre>
     * Straight Bet,32
     * </pre>
     *
     * <code>s32 = 44;</code>
     */
    s32(44),
    /**
     * <pre>
     * Straight Bet,33
     * </pre>
     *
     * <code>s33 = 45;</code>
     */
    s33(45),
    /**
     * <pre>
     * Straight Bet,34
     * </pre>
     *
     * <code>s34 = 46;</code>
     */
    s34(46),
    /**
     * <pre>
     * Straight Bet,35
     * </pre>
     *
     * <code>s35 = 47;</code>
     */
    s35(47),
    /**
     * <pre>
     * Straight Bet,36
     * </pre>
     *
     * <code>s36 = 48;</code>
     */
    s36(48),
    /**
     * <pre>
     *double bet, total 60
     * </pre>
     *
     * <code>d0_1 = 49;</code>
     */
    d0_1(49),
    /**
     * <pre>
     * Split Bet, 0 2
     * </pre>
     *
     * <code>d0_2 = 50;</code>
     */
    d0_2(50),
    /**
     * <pre>
     * Split Bet, 0 3
     * </pre>
     *
     * <code>d0_3 = 51;</code>
     */
    d0_3(51),
    /**
     * <pre>
     * Split Bet, 1 2
     * </pre>
     *
     * <code>d1_2 = 52;</code>
     */
    d1_2(52),
    /**
     * <pre>
     * Split Bet, 1 4
     * </pre>
     *
     * <code>d1_4 = 53;</code>
     */
    d1_4(53),
    /**
     * <pre>
     * Split Bet, 2 3
     * </pre>
     *
     * <code>d2_3 = 54;</code>
     */
    d2_3(54),
    /**
     * <pre>
     * Split Bet, 2 5
     * </pre>
     *
     * <code>d2_5 = 55;</code>
     */
    d2_5(55),
    /**
     * <pre>
     * Split Bet, 3 6
     * </pre>
     *
     * <code>d3_6 = 56;</code>
     */
    d3_6(56),
    /**
     * <pre>
     * Split Bet, 4 5
     * </pre>
     *
     * <code>d4_5 = 57;</code>
     */
    d4_5(57),
    /**
     * <pre>
     * Split Bet, 4 7
     * </pre>
     *
     * <code>d4_7 = 58;</code>
     */
    d4_7(58),
    /**
     * <pre>
     * Split Bet, 5 6
     * </pre>
     *
     * <code>d5_6 = 59;</code>
     */
    d5_6(59),
    /**
     * <pre>
     * Split Bet, 5 8
     * </pre>
     *
     * <code>d5_8 = 60;</code>
     */
    d5_8(60),
    /**
     * <pre>
     * Split Bet, 6 9
     * </pre>
     *
     * <code>d6_9 = 61;</code>
     */
    d6_9(61),
    /**
     * <pre>
     * Split Bet, 7 8
     * </pre>
     *
     * <code>d7_8 = 62;</code>
     */
    d7_8(62),
    /**
     * <pre>
     * Split Bet, 7 10
     * </pre>
     *
     * <code>d7_10 = 63;</code>
     */
    d7_10(63),
    /**
     * <pre>
     * Split Bet, 8 9
     * </pre>
     *
     * <code>d8_9 = 64;</code>
     */
    d8_9(64),
    /**
     * <pre>
     * Split Bet, 8 11
     * </pre>
     *
     * <code>d8_11 = 65;</code>
     */
    d8_11(65),
    /**
     * <pre>
     * Split Bet, 9 12
     * </pre>
     *
     * <code>d9_12 = 66;</code>
     */
    d9_12(66),
    /**
     * <pre>
     * Split Bet, 10 11
     * </pre>
     *
     * <code>d10_11 = 67;</code>
     */
    d10_11(67),
    /**
     * <pre>
     * Split Bet, 10 13
     * </pre>
     *
     * <code>d10_13 = 68;</code>
     */
    d10_13(68),
    /**
     * <pre>
     * Split Bet, 11 12
     * </pre>
     *
     * <code>d11_12 = 69;</code>
     */
    d11_12(69),
    /**
     * <pre>
     * Split Bet, 11 14
     * </pre>
     *
     * <code>d11_14 = 70;</code>
     */
    d11_14(70),
    /**
     * <pre>
     * Split Bet, 12 15
     * </pre>
     *
     * <code>d12_15 = 71;</code>
     */
    d12_15(71),
    /**
     * <pre>
     * Split Bet, 13 14
     * </pre>
     *
     * <code>d13_14 = 72;</code>
     */
    d13_14(72),
    /**
     * <pre>
     * Split Bet, 13 16
     * </pre>
     *
     * <code>d13_16 = 73;</code>
     */
    d13_16(73),
    /**
     * <pre>
     * Split Bet, 14 15
     * </pre>
     *
     * <code>d14_15 = 74;</code>
     */
    d14_15(74),
    /**
     * <pre>
     * Split Bet, 14 17
     * </pre>
     *
     * <code>d14_17 = 75;</code>
     */
    d14_17(75),
    /**
     * <pre>
     * Split Bet, 15 18
     * </pre>
     *
     * <code>d15_18 = 76;</code>
     */
    d15_18(76),
    /**
     * <pre>
     * Split Bet, 16 17
     * </pre>
     *
     * <code>d16_17 = 77;</code>
     */
    d16_17(77),
    /**
     * <pre>
     * Split Bet, 16 19
     * </pre>
     *
     * <code>d16_19 = 78;</code>
     */
    d16_19(78),
    /**
     * <pre>
     * Split Bet, 17 18
     * </pre>
     *
     * <code>d17_18 = 79;</code>
     */
    d17_18(79),
    /**
     * <pre>
     * Split Bet, 17 20
     * </pre>
     *
     * <code>d17_20 = 80;</code>
     */
    d17_20(80),
    /**
     * <pre>
     * Split Bet, 18 21
     * </pre>
     *
     * <code>d18_21 = 81;</code>
     */
    d18_21(81),
    /**
     * <pre>
     * Split Bet, 19 20
     * </pre>
     *
     * <code>d19_20 = 82;</code>
     */
    d19_20(82),
    /**
     * <pre>
     * Split Bet, 19 22
     * </pre>
     *
     * <code>d19_22 = 83;</code>
     */
    d19_22(83),
    /**
     * <pre>
     * Split Bet, 20 21
     * </pre>
     *
     * <code>d20_21 = 84;</code>
     */
    d20_21(84),
    /**
     * <pre>
     * Split Bet, 20 23
     * </pre>
     *
     * <code>d20_23 = 85;</code>
     */
    d20_23(85),
    /**
     * <pre>
     * Split Bet, 21 24
     * </pre>
     *
     * <code>d21_24 = 86;</code>
     */
    d21_24(86),
    /**
     * <pre>
     * Split Bet, 22 23
     * </pre>
     *
     * <code>d22_23 = 87;</code>
     */
    d22_23(87),
    /**
     * <pre>
     * Split Bet, 22 25
     * </pre>
     *
     * <code>d22_25 = 88;</code>
     */
    d22_25(88),
    /**
     * <pre>
     * Split Bet, 23 24
     * </pre>
     *
     * <code>d23_24 = 89;</code>
     */
    d23_24(89),
    /**
     * <pre>
     * Split Bet, 23 26
     * </pre>
     *
     * <code>d23_26 = 90;</code>
     */
    d23_26(90),
    /**
     * <pre>
     * Split Bet, 25 27
     * </pre>
     *
     * <code>d24_27 = 91;</code>
     */
    d24_27(91),
    /**
     * <pre>
     * Split Bet, 25 26
     * </pre>
     *
     * <code>d25_26 = 92;</code>
     */
    d25_26(92),
    /**
     * <pre>
     * Split Bet, 25 28
     * </pre>
     *
     * <code>d25_28 = 93;</code>
     */
    d25_28(93),
    /**
     * <pre>
     * Split Bet, 26 27
     * </pre>
     *
     * <code>d26_27 = 94;</code>
     */
    d26_27(94),
    /**
     * <pre>
     * Split Bet, 26 29
     * </pre>
     *
     * <code>d26_29 = 95;</code>
     */
    d26_29(95),
    /**
     * <pre>
     * Split Bet, 27 30
     * </pre>
     *
     * <code>d27_30 = 96;</code>
     */
    d27_30(96),
    /**
     * <pre>
     * Split Bet, 28 29
     * </pre>
     *
     * <code>d28_29 = 97;</code>
     */
    d28_29(97),
    /**
     * <pre>
     * Split Bet, 28 31
     * </pre>
     *
     * <code>d28_31 = 98;</code>
     */
    d28_31(98),
    /**
     * <pre>
     * Split Bet, 29 30
     * </pre>
     *
     * <code>d29_30 = 99;</code>
     */
    d29_30(99),
    /**
     * <pre>
     * Split Bet, 29 32
     * </pre>
     *
     * <code>d29_32 = 100;</code>
     */
    d29_32(100),
    /**
     * <pre>
     * Split Bet, 30 33
     * </pre>
     *
     * <code>d30_33 = 101;</code>
     */
    d30_33(101),
    /**
     * <pre>
     * Split Bet, 31 32
     * </pre>
     *
     * <code>d31_32 = 102;</code>
     */
    d31_32(102),
    /**
     * <pre>
     * Split Bet, 31 34
     * </pre>
     *
     * <code>d31_34 = 103;</code>
     */
    d31_34(103),
    /**
     * <pre>
     * Split Bet, 32 33
     * </pre>
     *
     * <code>d32_33 = 104;</code>
     */
    d32_33(104),
    /**
     * <pre>
     * Split Bet, 32 35
     * </pre>
     *
     * <code>d32_35 = 105;</code>
     */
    d32_35(105),
    /**
     * <pre>
     * Split Bet, 33 36
     * </pre>
     *
     * <code>d33_36 = 106;</code>
     */
    d33_36(106),
    /**
     * <pre>
     * Split Bet, 34 35
     * </pre>
     *
     * <code>d34_35 = 154;</code>
     */
    d34_35(154),
    /**
     * <pre>
     * Split Bet, 35 36
     * </pre>
     *
     * <code>d35_36 = 155;</code>
     */
    d35_36(155),
    /**
     * <pre>
     *triple bet, total 14
     * </pre>
     *
     * <code>t0_1_2 = 107;</code>
     */
    t0_1_2(107),
    /**
     * <pre>
     * Street Bet, 0 2 3
     * </pre>
     *
     * <code>t0_2_3 = 108;</code>
     */
    t0_2_3(108),
    /**
     * <pre>
     * Street Bet, 1 2 3
     * </pre>
     *
     * <code>t1 = 109;</code>
     */
    t1(109),
    /**
     * <pre>
     * Street Bet, 4 5 6
     * </pre>
     *
     * <code>t4 = 110;</code>
     */
    t4(110),
    /**
     * <pre>
     * Street Bet, 7 8 9
     * </pre>
     *
     * <code>t7 = 111;</code>
     */
    t7(111),
    /**
     * <pre>
     * Street Bet, 10 11 12
     * </pre>
     *
     * <code>t10 = 112;</code>
     */
    t10(112),
    /**
     * <pre>
     * Street Bet, 13 14 15
     * </pre>
     *
     * <code>t13 = 113;</code>
     */
    t13(113),
    /**
     * <pre>
     * Street Bet, 16 17 18
     * </pre>
     *
     * <code>t16 = 114;</code>
     */
    t16(114),
    /**
     * <pre>
     * Street Bet, 19 20 21
     * </pre>
     *
     * <code>t19 = 115;</code>
     */
    t19(115),
    /**
     * <pre>
     * Street Bet, 22 23 24
     * </pre>
     *
     * <code>t22 = 116;</code>
     */
    t22(116),
    /**
     * <pre>
     * Street Bet, 25 26 27
     * </pre>
     *
     * <code>t25 = 117;</code>
     */
    t25(117),
    /**
     * <pre>
     * Street Bet, 28 29 30
     * </pre>
     *
     * <code>t28 = 118;</code>
     */
    t28(118),
    /**
     * <pre>
     * Street Bet, 31 32 33
     * </pre>
     *
     * <code>t31 = 119;</code>
     */
    t31(119),
    /**
     * <pre>
     * Street Bet, 34 35 36
     * </pre>
     *
     * <code>t34 = 120;</code>
     */
    t34(120),
    /**
     * <pre>
     *fourth bet, total 22
     * </pre>
     *
     * <code>f1 = 121;</code>
     */
    f1(121),
    /**
     * <pre>
     * Corner Bet, 2 3 5 6
     * </pre>
     *
     * <code>f2 = 122;</code>
     */
    f2(122),
    /**
     * <pre>
     * Corner Bet, 4 5 7 8
     * </pre>
     *
     * <code>f4 = 123;</code>
     */
    f4(123),
    /**
     * <pre>
     * Corner Bet, 5 6 8 9
     * </pre>
     *
     * <code>f5 = 124;</code>
     */
    f5(124),
    /**
     * <pre>
     * Corner Bet, 7 8 10 11
     * </pre>
     *
     * <code>f7 = 125;</code>
     */
    f7(125),
    /**
     * <pre>
     * Corner Bet, 8 9 11 12
     * </pre>
     *
     * <code>f8 = 126;</code>
     */
    f8(126),
    /**
     * <pre>
     * Corner Bet, 10 11 13 14
     * </pre>
     *
     * <code>f10 = 127;</code>
     */
    f10(127),
    /**
     * <pre>
     * Corner Bet, 11 12 14 15
     * </pre>
     *
     * <code>f11 = 128;</code>
     */
    f11(128),
    /**
     * <pre>
     * Corner Bet, 13 14 16 19
     * </pre>
     *
     * <code>f13 = 129;</code>
     */
    f13(129),
    /**
     * <pre>
     * Corner Bet, 14 15 17 18
     * </pre>
     *
     * <code>f14 = 130;</code>
     */
    f14(130),
    /**
     * <pre>
     * Corner Bet, 16 17 19 20
     * </pre>
     *
     * <code>f16 = 131;</code>
     */
    f16(131),
    /**
     * <pre>
     * Corner Bet, 17 18 20 21
     * </pre>
     *
     * <code>f17 = 132;</code>
     */
    f17(132),
    /**
     * <pre>
     * Corner Bet, 19 20 22 23
     * </pre>
     *
     * <code>f19 = 133;</code>
     */
    f19(133),
    /**
     * <pre>
     * Corner Bet, 20 21 23 24
     * </pre>
     *
     * <code>f20 = 134;</code>
     */
    f20(134),
    /**
     * <pre>
     * Corner Bet, 22 23 25 26
     * </pre>
     *
     * <code>f22 = 135;</code>
     */
    f22(135),
    /**
     * <pre>
     * Corner Bet, 23 24 26 27
     * </pre>
     *
     * <code>f23 = 136;</code>
     */
    f23(136),
    /**
     * <pre>
     * Corner Bet, 25 26 28 29
     * </pre>
     *
     * <code>f25 = 137;</code>
     */
    f25(137),
    /**
     * <pre>
     * Corner Bet, 26 27 29 30
     * </pre>
     *
     * <code>f26 = 138;</code>
     */
    f26(138),
    /**
     * <pre>
     * Corner Bet, 28 29 31 32
     * </pre>
     *
     * <code>f28 = 139;</code>
     */
    f28(139),
    /**
     * <pre>
     * Corner Bet, 29 30 32 33
     * </pre>
     *
     * <code>f29 = 140;</code>
     */
    f29(140),
    /**
     * <pre>
     * Corner Bet, 31 32 34 35
     * </pre>
     *
     * <code>f31 = 141;</code>
     */
    f31(141),
    /**
     * <pre>
     * Corner Bet, 32 33 35 36
     * </pre>
     *
     * <code>f32 = 142;</code>
     */
    f32(142),
    /**
     * <pre>
     *six bet, total 11
     * </pre>
     *
     * <code>sx1_6 = 143;</code>
     */
    sx1_6(143),
    /**
     * <pre>
     * Sixline Bet, 4-9
     * </pre>
     *
     * <code>sx4_9 = 144;</code>
     */
    sx4_9(144),
    /**
     * <pre>
     * Sixline Bet, 7-12
     * </pre>
     *
     * <code>sx7_12 = 145;</code>
     */
    sx7_12(145),
    /**
     * <pre>
     * Sixline Bet, 10-15
     * </pre>
     *
     * <code>sx10_15 = 146;</code>
     */
    sx10_15(146),
    /**
     * <pre>
     * Sixline Bet, 13-18
     * </pre>
     *
     * <code>sx13_18 = 147;</code>
     */
    sx13_18(147),
    /**
     * <pre>
     * Sixline Bet, 16-21
     * </pre>
     *
     * <code>sx16_21 = 148;</code>
     */
    sx16_21(148),
    /**
     * <pre>
     * Sixline Bet, 19-24
     * </pre>
     *
     * <code>sx19_24 = 149;</code>
     */
    sx19_24(149),
    /**
     * <pre>
     * Sixline Bet, 22-27
     * </pre>
     *
     * <code>sx22_27 = 150;</code>
     */
    sx22_27(150),
    /**
     * <pre>
     * Sixline Bet, 25-30
     * </pre>
     *
     * <code>sx25_30 = 151;</code>
     */
    sx25_30(151),
    /**
     * <pre>
     * Sixline Bet, 28-33
     * </pre>
     *
     * <code>sx28_33 = 152;</code>
     */
    sx28_33(152),
    /**
     * <pre>
     * Sixline Bet, 31-36
     * </pre>
     *
     * <code>sx31_36 = 153;</code>
     */
    sx31_36(153),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *special bet, total 12
     * </pre>
     *
     * <code>small = 0;</code>
     */
    public static final int small_VALUE = 0;
    /**
     * <pre>
     * 大
     * </pre>
     *
     * <code>big = 1;</code>
     */
    public static final int big_VALUE = 1;
    /**
     * <pre>
     * 偶数
     * </pre>
     *
     * <code>even = 2;</code>
     */
    public static final int even_VALUE = 2;
    /**
     * <pre>
     * 奇数
     * </pre>
     *
     * <code>odd = 3;</code>
     */
    public static final int odd_VALUE = 3;
    /**
     * <pre>
     * 红
     * </pre>
     *
     * <code>red = 4;</code>
     */
    public static final int red_VALUE = 4;
    /**
     * <pre>
     * 黑
     * </pre>
     *
     * <code>black = 5;</code>
     */
    public static final int black_VALUE = 5;
    /**
     * <pre>
     * Dozen Bet，1-12
     * </pre>
     *
     * <code>dozen1 = 6;</code>
     */
    public static final int dozen1_VALUE = 6;
    /**
     * <pre>
     * Dozen Bet，13-24
     * </pre>
     *
     * <code>dozen2 = 7;</code>
     */
    public static final int dozen2_VALUE = 7;
    /**
     * <pre>
     * Dozen Bet，25-36
     * </pre>
     *
     * <code>dozen3 = 8;</code>
     */
    public static final int dozen3_VALUE = 8;
    /**
     * <pre>
     * Column Bet，1,4,7,...
     * </pre>
     *
     * <code>col1 = 9;</code>
     */
    public static final int col1_VALUE = 9;
    /**
     * <pre>
     * Column Bet，2,5,8,...
     * </pre>
     *
     * <code>col2 = 10;</code>
     */
    public static final int col2_VALUE = 10;
    /**
     * <pre>
     * Column Bet，3,6,9,...
     * </pre>
     *
     * <code>col3 = 11;</code>
     */
    public static final int col3_VALUE = 11;
    /**
     * <pre>
     *single bet, total 37
     * </pre>
     *
     * <code>s0 = 12;</code>
     */
    public static final int s0_VALUE = 12;
    /**
     * <pre>
     * Straight Bet,1
     * </pre>
     *
     * <code>s1 = 13;</code>
     */
    public static final int s1_VALUE = 13;
    /**
     * <pre>
     * Straight Bet,2
     * </pre>
     *
     * <code>s2 = 14;</code>
     */
    public static final int s2_VALUE = 14;
    /**
     * <pre>
     * Straight Bet,3
     * </pre>
     *
     * <code>s3 = 15;</code>
     */
    public static final int s3_VALUE = 15;
    /**
     * <pre>
     * Straight Bet,4
     * </pre>
     *
     * <code>s4 = 16;</code>
     */
    public static final int s4_VALUE = 16;
    /**
     * <pre>
     * Straight Bet,5
     * </pre>
     *
     * <code>s5 = 17;</code>
     */
    public static final int s5_VALUE = 17;
    /**
     * <pre>
     * Straight Bet,6
     * </pre>
     *
     * <code>s6 = 18;</code>
     */
    public static final int s6_VALUE = 18;
    /**
     * <pre>
     * Straight Bet,7
     * </pre>
     *
     * <code>s7 = 19;</code>
     */
    public static final int s7_VALUE = 19;
    /**
     * <pre>
     * Straight Bet,8
     * </pre>
     *
     * <code>s8 = 20;</code>
     */
    public static final int s8_VALUE = 20;
    /**
     * <pre>
     * Straight Bet,9
     * </pre>
     *
     * <code>s9 = 21;</code>
     */
    public static final int s9_VALUE = 21;
    /**
     * <pre>
     * Straight Bet,10
     * </pre>
     *
     * <code>s10 = 22;</code>
     */
    public static final int s10_VALUE = 22;
    /**
     * <pre>
     * Straight Bet,11
     * </pre>
     *
     * <code>s11 = 23;</code>
     */
    public static final int s11_VALUE = 23;
    /**
     * <pre>
     * Straight Bet,12
     * </pre>
     *
     * <code>s12 = 24;</code>
     */
    public static final int s12_VALUE = 24;
    /**
     * <pre>
     * Straight Bet,13
     * </pre>
     *
     * <code>s13 = 25;</code>
     */
    public static final int s13_VALUE = 25;
    /**
     * <pre>
     * Straight Bet,14
     * </pre>
     *
     * <code>s14 = 26;</code>
     */
    public static final int s14_VALUE = 26;
    /**
     * <pre>
     * Straight Bet,15
     * </pre>
     *
     * <code>s15 = 27;</code>
     */
    public static final int s15_VALUE = 27;
    /**
     * <pre>
     * Straight Bet,16
     * </pre>
     *
     * <code>s16 = 28;</code>
     */
    public static final int s16_VALUE = 28;
    /**
     * <pre>
     * Straight Bet,17
     * </pre>
     *
     * <code>s17 = 29;</code>
     */
    public static final int s17_VALUE = 29;
    /**
     * <pre>
     * Straight Bet,18
     * </pre>
     *
     * <code>s18 = 30;</code>
     */
    public static final int s18_VALUE = 30;
    /**
     * <pre>
     * Straight Bet,19
     * </pre>
     *
     * <code>s19 = 31;</code>
     */
    public static final int s19_VALUE = 31;
    /**
     * <pre>
     * Straight Bet,20
     * </pre>
     *
     * <code>s20 = 32;</code>
     */
    public static final int s20_VALUE = 32;
    /**
     * <pre>
     * Straight Bet,21
     * </pre>
     *
     * <code>s21 = 33;</code>
     */
    public static final int s21_VALUE = 33;
    /**
     * <pre>
     * Straight Bet,22
     * </pre>
     *
     * <code>s22 = 34;</code>
     */
    public static final int s22_VALUE = 34;
    /**
     * <pre>
     * Straight Bet,23
     * </pre>
     *
     * <code>s23 = 35;</code>
     */
    public static final int s23_VALUE = 35;
    /**
     * <pre>
     * Straight Bet,24
     * </pre>
     *
     * <code>s24 = 36;</code>
     */
    public static final int s24_VALUE = 36;
    /**
     * <pre>
     * Straight Bet,25
     * </pre>
     *
     * <code>s25 = 37;</code>
     */
    public static final int s25_VALUE = 37;
    /**
     * <pre>
     * Straight Bet,26
     * </pre>
     *
     * <code>s26 = 38;</code>
     */
    public static final int s26_VALUE = 38;
    /**
     * <pre>
     * Straight Bet,27
     * </pre>
     *
     * <code>s27 = 39;</code>
     */
    public static final int s27_VALUE = 39;
    /**
     * <pre>
     * Straight Bet,28
     * </pre>
     *
     * <code>s28 = 40;</code>
     */
    public static final int s28_VALUE = 40;
    /**
     * <pre>
     * Straight Bet,29
     * </pre>
     *
     * <code>s29 = 41;</code>
     */
    public static final int s29_VALUE = 41;
    /**
     * <pre>
     * Straight Bet,30
     * </pre>
     *
     * <code>s30 = 42;</code>
     */
    public static final int s30_VALUE = 42;
    /**
     * <pre>
     * Straight Bet,31
     * </pre>
     *
     * <code>s31 = 43;</code>
     */
    public static final int s31_VALUE = 43;
    /**
     * <pre>
     * Straight Bet,32
     * </pre>
     *
     * <code>s32 = 44;</code>
     */
    public static final int s32_VALUE = 44;
    /**
     * <pre>
     * Straight Bet,33
     * </pre>
     *
     * <code>s33 = 45;</code>
     */
    public static final int s33_VALUE = 45;
    /**
     * <pre>
     * Straight Bet,34
     * </pre>
     *
     * <code>s34 = 46;</code>
     */
    public static final int s34_VALUE = 46;
    /**
     * <pre>
     * Straight Bet,35
     * </pre>
     *
     * <code>s35 = 47;</code>
     */
    public static final int s35_VALUE = 47;
    /**
     * <pre>
     * Straight Bet,36
     * </pre>
     *
     * <code>s36 = 48;</code>
     */
    public static final int s36_VALUE = 48;
    /**
     * <pre>
     *double bet, total 60
     * </pre>
     *
     * <code>d0_1 = 49;</code>
     */
    public static final int d0_1_VALUE = 49;
    /**
     * <pre>
     * Split Bet, 0 2
     * </pre>
     *
     * <code>d0_2 = 50;</code>
     */
    public static final int d0_2_VALUE = 50;
    /**
     * <pre>
     * Split Bet, 0 3
     * </pre>
     *
     * <code>d0_3 = 51;</code>
     */
    public static final int d0_3_VALUE = 51;
    /**
     * <pre>
     * Split Bet, 1 2
     * </pre>
     *
     * <code>d1_2 = 52;</code>
     */
    public static final int d1_2_VALUE = 52;
    /**
     * <pre>
     * Split Bet, 1 4
     * </pre>
     *
     * <code>d1_4 = 53;</code>
     */
    public static final int d1_4_VALUE = 53;
    /**
     * <pre>
     * Split Bet, 2 3
     * </pre>
     *
     * <code>d2_3 = 54;</code>
     */
    public static final int d2_3_VALUE = 54;
    /**
     * <pre>
     * Split Bet, 2 5
     * </pre>
     *
     * <code>d2_5 = 55;</code>
     */
    public static final int d2_5_VALUE = 55;
    /**
     * <pre>
     * Split Bet, 3 6
     * </pre>
     *
     * <code>d3_6 = 56;</code>
     */
    public static final int d3_6_VALUE = 56;
    /**
     * <pre>
     * Split Bet, 4 5
     * </pre>
     *
     * <code>d4_5 = 57;</code>
     */
    public static final int d4_5_VALUE = 57;
    /**
     * <pre>
     * Split Bet, 4 7
     * </pre>
     *
     * <code>d4_7 = 58;</code>
     */
    public static final int d4_7_VALUE = 58;
    /**
     * <pre>
     * Split Bet, 5 6
     * </pre>
     *
     * <code>d5_6 = 59;</code>
     */
    public static final int d5_6_VALUE = 59;
    /**
     * <pre>
     * Split Bet, 5 8
     * </pre>
     *
     * <code>d5_8 = 60;</code>
     */
    public static final int d5_8_VALUE = 60;
    /**
     * <pre>
     * Split Bet, 6 9
     * </pre>
     *
     * <code>d6_9 = 61;</code>
     */
    public static final int d6_9_VALUE = 61;
    /**
     * <pre>
     * Split Bet, 7 8
     * </pre>
     *
     * <code>d7_8 = 62;</code>
     */
    public static final int d7_8_VALUE = 62;
    /**
     * <pre>
     * Split Bet, 7 10
     * </pre>
     *
     * <code>d7_10 = 63;</code>
     */
    public static final int d7_10_VALUE = 63;
    /**
     * <pre>
     * Split Bet, 8 9
     * </pre>
     *
     * <code>d8_9 = 64;</code>
     */
    public static final int d8_9_VALUE = 64;
    /**
     * <pre>
     * Split Bet, 8 11
     * </pre>
     *
     * <code>d8_11 = 65;</code>
     */
    public static final int d8_11_VALUE = 65;
    /**
     * <pre>
     * Split Bet, 9 12
     * </pre>
     *
     * <code>d9_12 = 66;</code>
     */
    public static final int d9_12_VALUE = 66;
    /**
     * <pre>
     * Split Bet, 10 11
     * </pre>
     *
     * <code>d10_11 = 67;</code>
     */
    public static final int d10_11_VALUE = 67;
    /**
     * <pre>
     * Split Bet, 10 13
     * </pre>
     *
     * <code>d10_13 = 68;</code>
     */
    public static final int d10_13_VALUE = 68;
    /**
     * <pre>
     * Split Bet, 11 12
     * </pre>
     *
     * <code>d11_12 = 69;</code>
     */
    public static final int d11_12_VALUE = 69;
    /**
     * <pre>
     * Split Bet, 11 14
     * </pre>
     *
     * <code>d11_14 = 70;</code>
     */
    public static final int d11_14_VALUE = 70;
    /**
     * <pre>
     * Split Bet, 12 15
     * </pre>
     *
     * <code>d12_15 = 71;</code>
     */
    public static final int d12_15_VALUE = 71;
    /**
     * <pre>
     * Split Bet, 13 14
     * </pre>
     *
     * <code>d13_14 = 72;</code>
     */
    public static final int d13_14_VALUE = 72;
    /**
     * <pre>
     * Split Bet, 13 16
     * </pre>
     *
     * <code>d13_16 = 73;</code>
     */
    public static final int d13_16_VALUE = 73;
    /**
     * <pre>
     * Split Bet, 14 15
     * </pre>
     *
     * <code>d14_15 = 74;</code>
     */
    public static final int d14_15_VALUE = 74;
    /**
     * <pre>
     * Split Bet, 14 17
     * </pre>
     *
     * <code>d14_17 = 75;</code>
     */
    public static final int d14_17_VALUE = 75;
    /**
     * <pre>
     * Split Bet, 15 18
     * </pre>
     *
     * <code>d15_18 = 76;</code>
     */
    public static final int d15_18_VALUE = 76;
    /**
     * <pre>
     * Split Bet, 16 17
     * </pre>
     *
     * <code>d16_17 = 77;</code>
     */
    public static final int d16_17_VALUE = 77;
    /**
     * <pre>
     * Split Bet, 16 19
     * </pre>
     *
     * <code>d16_19 = 78;</code>
     */
    public static final int d16_19_VALUE = 78;
    /**
     * <pre>
     * Split Bet, 17 18
     * </pre>
     *
     * <code>d17_18 = 79;</code>
     */
    public static final int d17_18_VALUE = 79;
    /**
     * <pre>
     * Split Bet, 17 20
     * </pre>
     *
     * <code>d17_20 = 80;</code>
     */
    public static final int d17_20_VALUE = 80;
    /**
     * <pre>
     * Split Bet, 18 21
     * </pre>
     *
     * <code>d18_21 = 81;</code>
     */
    public static final int d18_21_VALUE = 81;
    /**
     * <pre>
     * Split Bet, 19 20
     * </pre>
     *
     * <code>d19_20 = 82;</code>
     */
    public static final int d19_20_VALUE = 82;
    /**
     * <pre>
     * Split Bet, 19 22
     * </pre>
     *
     * <code>d19_22 = 83;</code>
     */
    public static final int d19_22_VALUE = 83;
    /**
     * <pre>
     * Split Bet, 20 21
     * </pre>
     *
     * <code>d20_21 = 84;</code>
     */
    public static final int d20_21_VALUE = 84;
    /**
     * <pre>
     * Split Bet, 20 23
     * </pre>
     *
     * <code>d20_23 = 85;</code>
     */
    public static final int d20_23_VALUE = 85;
    /**
     * <pre>
     * Split Bet, 21 24
     * </pre>
     *
     * <code>d21_24 = 86;</code>
     */
    public static final int d21_24_VALUE = 86;
    /**
     * <pre>
     * Split Bet, 22 23
     * </pre>
     *
     * <code>d22_23 = 87;</code>
     */
    public static final int d22_23_VALUE = 87;
    /**
     * <pre>
     * Split Bet, 22 25
     * </pre>
     *
     * <code>d22_25 = 88;</code>
     */
    public static final int d22_25_VALUE = 88;
    /**
     * <pre>
     * Split Bet, 23 24
     * </pre>
     *
     * <code>d23_24 = 89;</code>
     */
    public static final int d23_24_VALUE = 89;
    /**
     * <pre>
     * Split Bet, 23 26
     * </pre>
     *
     * <code>d23_26 = 90;</code>
     */
    public static final int d23_26_VALUE = 90;
    /**
     * <pre>
     * Split Bet, 25 27
     * </pre>
     *
     * <code>d24_27 = 91;</code>
     */
    public static final int d24_27_VALUE = 91;
    /**
     * <pre>
     * Split Bet, 25 26
     * </pre>
     *
     * <code>d25_26 = 92;</code>
     */
    public static final int d25_26_VALUE = 92;
    /**
     * <pre>
     * Split Bet, 25 28
     * </pre>
     *
     * <code>d25_28 = 93;</code>
     */
    public static final int d25_28_VALUE = 93;
    /**
     * <pre>
     * Split Bet, 26 27
     * </pre>
     *
     * <code>d26_27 = 94;</code>
     */
    public static final int d26_27_VALUE = 94;
    /**
     * <pre>
     * Split Bet, 26 29
     * </pre>
     *
     * <code>d26_29 = 95;</code>
     */
    public static final int d26_29_VALUE = 95;
    /**
     * <pre>
     * Split Bet, 27 30
     * </pre>
     *
     * <code>d27_30 = 96;</code>
     */
    public static final int d27_30_VALUE = 96;
    /**
     * <pre>
     * Split Bet, 28 29
     * </pre>
     *
     * <code>d28_29 = 97;</code>
     */
    public static final int d28_29_VALUE = 97;
    /**
     * <pre>
     * Split Bet, 28 31
     * </pre>
     *
     * <code>d28_31 = 98;</code>
     */
    public static final int d28_31_VALUE = 98;
    /**
     * <pre>
     * Split Bet, 29 30
     * </pre>
     *
     * <code>d29_30 = 99;</code>
     */
    public static final int d29_30_VALUE = 99;
    /**
     * <pre>
     * Split Bet, 29 32
     * </pre>
     *
     * <code>d29_32 = 100;</code>
     */
    public static final int d29_32_VALUE = 100;
    /**
     * <pre>
     * Split Bet, 30 33
     * </pre>
     *
     * <code>d30_33 = 101;</code>
     */
    public static final int d30_33_VALUE = 101;
    /**
     * <pre>
     * Split Bet, 31 32
     * </pre>
     *
     * <code>d31_32 = 102;</code>
     */
    public static final int d31_32_VALUE = 102;
    /**
     * <pre>
     * Split Bet, 31 34
     * </pre>
     *
     * <code>d31_34 = 103;</code>
     */
    public static final int d31_34_VALUE = 103;
    /**
     * <pre>
     * Split Bet, 32 33
     * </pre>
     *
     * <code>d32_33 = 104;</code>
     */
    public static final int d32_33_VALUE = 104;
    /**
     * <pre>
     * Split Bet, 32 35
     * </pre>
     *
     * <code>d32_35 = 105;</code>
     */
    public static final int d32_35_VALUE = 105;
    /**
     * <pre>
     * Split Bet, 33 36
     * </pre>
     *
     * <code>d33_36 = 106;</code>
     */
    public static final int d33_36_VALUE = 106;
    /**
     * <pre>
     * Split Bet, 34 35
     * </pre>
     *
     * <code>d34_35 = 154;</code>
     */
    public static final int d34_35_VALUE = 154;
    /**
     * <pre>
     * Split Bet, 35 36
     * </pre>
     *
     * <code>d35_36 = 155;</code>
     */
    public static final int d35_36_VALUE = 155;
    /**
     * <pre>
     *triple bet, total 14
     * </pre>
     *
     * <code>t0_1_2 = 107;</code>
     */
    public static final int t0_1_2_VALUE = 107;
    /**
     * <pre>
     * Street Bet, 0 2 3
     * </pre>
     *
     * <code>t0_2_3 = 108;</code>
     */
    public static final int t0_2_3_VALUE = 108;
    /**
     * <pre>
     * Street Bet, 1 2 3
     * </pre>
     *
     * <code>t1 = 109;</code>
     */
    public static final int t1_VALUE = 109;
    /**
     * <pre>
     * Street Bet, 4 5 6
     * </pre>
     *
     * <code>t4 = 110;</code>
     */
    public static final int t4_VALUE = 110;
    /**
     * <pre>
     * Street Bet, 7 8 9
     * </pre>
     *
     * <code>t7 = 111;</code>
     */
    public static final int t7_VALUE = 111;
    /**
     * <pre>
     * Street Bet, 10 11 12
     * </pre>
     *
     * <code>t10 = 112;</code>
     */
    public static final int t10_VALUE = 112;
    /**
     * <pre>
     * Street Bet, 13 14 15
     * </pre>
     *
     * <code>t13 = 113;</code>
     */
    public static final int t13_VALUE = 113;
    /**
     * <pre>
     * Street Bet, 16 17 18
     * </pre>
     *
     * <code>t16 = 114;</code>
     */
    public static final int t16_VALUE = 114;
    /**
     * <pre>
     * Street Bet, 19 20 21
     * </pre>
     *
     * <code>t19 = 115;</code>
     */
    public static final int t19_VALUE = 115;
    /**
     * <pre>
     * Street Bet, 22 23 24
     * </pre>
     *
     * <code>t22 = 116;</code>
     */
    public static final int t22_VALUE = 116;
    /**
     * <pre>
     * Street Bet, 25 26 27
     * </pre>
     *
     * <code>t25 = 117;</code>
     */
    public static final int t25_VALUE = 117;
    /**
     * <pre>
     * Street Bet, 28 29 30
     * </pre>
     *
     * <code>t28 = 118;</code>
     */
    public static final int t28_VALUE = 118;
    /**
     * <pre>
     * Street Bet, 31 32 33
     * </pre>
     *
     * <code>t31 = 119;</code>
     */
    public static final int t31_VALUE = 119;
    /**
     * <pre>
     * Street Bet, 34 35 36
     * </pre>
     *
     * <code>t34 = 120;</code>
     */
    public static final int t34_VALUE = 120;
    /**
     * <pre>
     *fourth bet, total 22
     * </pre>
     *
     * <code>f1 = 121;</code>
     */
    public static final int f1_VALUE = 121;
    /**
     * <pre>
     * Corner Bet, 2 3 5 6
     * </pre>
     *
     * <code>f2 = 122;</code>
     */
    public static final int f2_VALUE = 122;
    /**
     * <pre>
     * Corner Bet, 4 5 7 8
     * </pre>
     *
     * <code>f4 = 123;</code>
     */
    public static final int f4_VALUE = 123;
    /**
     * <pre>
     * Corner Bet, 5 6 8 9
     * </pre>
     *
     * <code>f5 = 124;</code>
     */
    public static final int f5_VALUE = 124;
    /**
     * <pre>
     * Corner Bet, 7 8 10 11
     * </pre>
     *
     * <code>f7 = 125;</code>
     */
    public static final int f7_VALUE = 125;
    /**
     * <pre>
     * Corner Bet, 8 9 11 12
     * </pre>
     *
     * <code>f8 = 126;</code>
     */
    public static final int f8_VALUE = 126;
    /**
     * <pre>
     * Corner Bet, 10 11 13 14
     * </pre>
     *
     * <code>f10 = 127;</code>
     */
    public static final int f10_VALUE = 127;
    /**
     * <pre>
     * Corner Bet, 11 12 14 15
     * </pre>
     *
     * <code>f11 = 128;</code>
     */
    public static final int f11_VALUE = 128;
    /**
     * <pre>
     * Corner Bet, 13 14 16 19
     * </pre>
     *
     * <code>f13 = 129;</code>
     */
    public static final int f13_VALUE = 129;
    /**
     * <pre>
     * Corner Bet, 14 15 17 18
     * </pre>
     *
     * <code>f14 = 130;</code>
     */
    public static final int f14_VALUE = 130;
    /**
     * <pre>
     * Corner Bet, 16 17 19 20
     * </pre>
     *
     * <code>f16 = 131;</code>
     */
    public static final int f16_VALUE = 131;
    /**
     * <pre>
     * Corner Bet, 17 18 20 21
     * </pre>
     *
     * <code>f17 = 132;</code>
     */
    public static final int f17_VALUE = 132;
    /**
     * <pre>
     * Corner Bet, 19 20 22 23
     * </pre>
     *
     * <code>f19 = 133;</code>
     */
    public static final int f19_VALUE = 133;
    /**
     * <pre>
     * Corner Bet, 20 21 23 24
     * </pre>
     *
     * <code>f20 = 134;</code>
     */
    public static final int f20_VALUE = 134;
    /**
     * <pre>
     * Corner Bet, 22 23 25 26
     * </pre>
     *
     * <code>f22 = 135;</code>
     */
    public static final int f22_VALUE = 135;
    /**
     * <pre>
     * Corner Bet, 23 24 26 27
     * </pre>
     *
     * <code>f23 = 136;</code>
     */
    public static final int f23_VALUE = 136;
    /**
     * <pre>
     * Corner Bet, 25 26 28 29
     * </pre>
     *
     * <code>f25 = 137;</code>
     */
    public static final int f25_VALUE = 137;
    /**
     * <pre>
     * Corner Bet, 26 27 29 30
     * </pre>
     *
     * <code>f26 = 138;</code>
     */
    public static final int f26_VALUE = 138;
    /**
     * <pre>
     * Corner Bet, 28 29 31 32
     * </pre>
     *
     * <code>f28 = 139;</code>
     */
    public static final int f28_VALUE = 139;
    /**
     * <pre>
     * Corner Bet, 29 30 32 33
     * </pre>
     *
     * <code>f29 = 140;</code>
     */
    public static final int f29_VALUE = 140;
    /**
     * <pre>
     * Corner Bet, 31 32 34 35
     * </pre>
     *
     * <code>f31 = 141;</code>
     */
    public static final int f31_VALUE = 141;
    /**
     * <pre>
     * Corner Bet, 32 33 35 36
     * </pre>
     *
     * <code>f32 = 142;</code>
     */
    public static final int f32_VALUE = 142;
    /**
     * <pre>
     *six bet, total 11
     * </pre>
     *
     * <code>sx1_6 = 143;</code>
     */
    public static final int sx1_6_VALUE = 143;
    /**
     * <pre>
     * Sixline Bet, 4-9
     * </pre>
     *
     * <code>sx4_9 = 144;</code>
     */
    public static final int sx4_9_VALUE = 144;
    /**
     * <pre>
     * Sixline Bet, 7-12
     * </pre>
     *
     * <code>sx7_12 = 145;</code>
     */
    public static final int sx7_12_VALUE = 145;
    /**
     * <pre>
     * Sixline Bet, 10-15
     * </pre>
     *
     * <code>sx10_15 = 146;</code>
     */
    public static final int sx10_15_VALUE = 146;
    /**
     * <pre>
     * Sixline Bet, 13-18
     * </pre>
     *
     * <code>sx13_18 = 147;</code>
     */
    public static final int sx13_18_VALUE = 147;
    /**
     * <pre>
     * Sixline Bet, 16-21
     * </pre>
     *
     * <code>sx16_21 = 148;</code>
     */
    public static final int sx16_21_VALUE = 148;
    /**
     * <pre>
     * Sixline Bet, 19-24
     * </pre>
     *
     * <code>sx19_24 = 149;</code>
     */
    public static final int sx19_24_VALUE = 149;
    /**
     * <pre>
     * Sixline Bet, 22-27
     * </pre>
     *
     * <code>sx22_27 = 150;</code>
     */
    public static final int sx22_27_VALUE = 150;
    /**
     * <pre>
     * Sixline Bet, 25-30
     * </pre>
     *
     * <code>sx25_30 = 151;</code>
     */
    public static final int sx25_30_VALUE = 151;
    /**
     * <pre>
     * Sixline Bet, 28-33
     * </pre>
     *
     * <code>sx28_33 = 152;</code>
     */
    public static final int sx28_33_VALUE = 152;
    /**
     * <pre>
     * Sixline Bet, 31-36
     * </pre>
     *
     * <code>sx31_36 = 153;</code>
     */
    public static final int sx31_36_VALUE = 153;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static beton valueOf(int value) {
      return forNumber(value);
    }

    public static beton forNumber(int value) {
      switch (value) {
        case 0: return small;
        case 1: return big;
        case 2: return even;
        case 3: return odd;
        case 4: return red;
        case 5: return black;
        case 6: return dozen1;
        case 7: return dozen2;
        case 8: return dozen3;
        case 9: return col1;
        case 10: return col2;
        case 11: return col3;
        case 12: return s0;
        case 13: return s1;
        case 14: return s2;
        case 15: return s3;
        case 16: return s4;
        case 17: return s5;
        case 18: return s6;
        case 19: return s7;
        case 20: return s8;
        case 21: return s9;
        case 22: return s10;
        case 23: return s11;
        case 24: return s12;
        case 25: return s13;
        case 26: return s14;
        case 27: return s15;
        case 28: return s16;
        case 29: return s17;
        case 30: return s18;
        case 31: return s19;
        case 32: return s20;
        case 33: return s21;
        case 34: return s22;
        case 35: return s23;
        case 36: return s24;
        case 37: return s25;
        case 38: return s26;
        case 39: return s27;
        case 40: return s28;
        case 41: return s29;
        case 42: return s30;
        case 43: return s31;
        case 44: return s32;
        case 45: return s33;
        case 46: return s34;
        case 47: return s35;
        case 48: return s36;
        case 49: return d0_1;
        case 50: return d0_2;
        case 51: return d0_3;
        case 52: return d1_2;
        case 53: return d1_4;
        case 54: return d2_3;
        case 55: return d2_5;
        case 56: return d3_6;
        case 57: return d4_5;
        case 58: return d4_7;
        case 59: return d5_6;
        case 60: return d5_8;
        case 61: return d6_9;
        case 62: return d7_8;
        case 63: return d7_10;
        case 64: return d8_9;
        case 65: return d8_11;
        case 66: return d9_12;
        case 67: return d10_11;
        case 68: return d10_13;
        case 69: return d11_12;
        case 70: return d11_14;
        case 71: return d12_15;
        case 72: return d13_14;
        case 73: return d13_16;
        case 74: return d14_15;
        case 75: return d14_17;
        case 76: return d15_18;
        case 77: return d16_17;
        case 78: return d16_19;
        case 79: return d17_18;
        case 80: return d17_20;
        case 81: return d18_21;
        case 82: return d19_20;
        case 83: return d19_22;
        case 84: return d20_21;
        case 85: return d20_23;
        case 86: return d21_24;
        case 87: return d22_23;
        case 88: return d22_25;
        case 89: return d23_24;
        case 90: return d23_26;
        case 91: return d24_27;
        case 92: return d25_26;
        case 93: return d25_28;
        case 94: return d26_27;
        case 95: return d26_29;
        case 96: return d27_30;
        case 97: return d28_29;
        case 98: return d28_31;
        case 99: return d29_30;
        case 100: return d29_32;
        case 101: return d30_33;
        case 102: return d31_32;
        case 103: return d31_34;
        case 104: return d32_33;
        case 105: return d32_35;
        case 106: return d33_36;
        case 154: return d34_35;
        case 155: return d35_36;
        case 107: return t0_1_2;
        case 108: return t0_2_3;
        case 109: return t1;
        case 110: return t4;
        case 111: return t7;
        case 112: return t10;
        case 113: return t13;
        case 114: return t16;
        case 115: return t19;
        case 116: return t22;
        case 117: return t25;
        case 118: return t28;
        case 119: return t31;
        case 120: return t34;
        case 121: return f1;
        case 122: return f2;
        case 123: return f4;
        case 124: return f5;
        case 125: return f7;
        case 126: return f8;
        case 127: return f10;
        case 128: return f11;
        case 129: return f13;
        case 130: return f14;
        case 131: return f16;
        case 132: return f17;
        case 133: return f19;
        case 134: return f20;
        case 135: return f22;
        case 136: return f23;
        case 137: return f25;
        case 138: return f26;
        case 139: return f28;
        case 140: return f29;
        case 141: return f31;
        case 142: return f32;
        case 143: return sx1_6;
        case 144: return sx4_9;
        case 145: return sx7_12;
        case 146: return sx10_15;
        case 147: return sx13_18;
        case 148: return sx16_21;
        case 149: return sx19_24;
        case 150: return sx22_27;
        case 151: return sx25_30;
        case 152: return sx28_33;
        case 153: return sx31_36;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<beton>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        beton> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<beton>() {
            public beton findValueByNumber(int number) {
              return beton.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocols.roulette.common.getDescriptor().getEnumTypes().get(0);
    }

    private static final beton[] VALUES = values();

    public static beton valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private beton(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:beton)
  }

  public interface room_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:room_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    /**
     * <pre>
     * 37=欧式轮盘(默认) 38=美式轮盘 25=法式轮盘
     * </pre>
     *
     * <code>uint32 gameType = 2;</code>
     */
    int getGameType();

    /**
     * <pre>
     * 加入房间最少金币数
     * </pre>
     *
     * <code>uint32 minCoin = 3;</code>
     */
    int getMinCoin();

    /**
     * <pre>
     * 同一下注目标，单人单次最小下注额
     * </pre>
     *
     * <code>uint32 minBet = 4;</code>
     */
    int getMinBet();

    /**
     * <pre>
     * 同一下注目标，单人单次最大下注额
     * </pre>
     *
     * <code>uint32 maxBet = 5;</code>
     */
    int getMaxBet();

    /**
     * <pre>
     * 房间总最大下注额
     * </pre>
     *
     * <code>uint32 maxTotalBet = 6;</code>
     */
    int getMaxTotalBet();

    /**
     * <pre>
     * 抽水百分比
     * </pre>
     *
     * <code>uint32 drawPercent = 7;</code>
     */
    int getDrawPercent();

    /**
     * <pre>
     * 下注时长，以秒为单位
     * </pre>
     *
     * <code>uint32 betTime = 8;</code>
     */
    int getBetTime();

    /**
     * <pre>
     * 开奖时长，以秒为单位
     * </pre>
     *
     * <code>uint32 prizeTime = 9;</code>
     */
    int getPrizeTime();

    /**
     * <pre>
     * 声网频道号
     * </pre>
     *
     * <code>string channel = 10;</code>
     */
    java.lang.String getChannel();
    /**
     * <pre>
     * 声网频道号
     * </pre>
     *
     * <code>string channel = 10;</code>
     */
    com.google.protobuf.ByteString
        getChannelBytes();
  }
  /**
   * Protobuf type {@code room_info}
   */
  public  static final class room_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:room_info)
      room_infoOrBuilder {
    // Use room_info.newBuilder() to construct.
    private room_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private room_info() {
      roomId_ = "";
      gameType_ = 0;
      minCoin_ = 0;
      minBet_ = 0;
      maxBet_ = 0;
      maxTotalBet_ = 0;
      drawPercent_ = 0;
      betTime_ = 0;
      prizeTime_ = 0;
      channel_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private room_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              roomId_ = s;
              break;
            }
            case 16: {

              gameType_ = input.readUInt32();
              break;
            }
            case 24: {

              minCoin_ = input.readUInt32();
              break;
            }
            case 32: {

              minBet_ = input.readUInt32();
              break;
            }
            case 40: {

              maxBet_ = input.readUInt32();
              break;
            }
            case 48: {

              maxTotalBet_ = input.readUInt32();
              break;
            }
            case 56: {

              drawPercent_ = input.readUInt32();
              break;
            }
            case 64: {

              betTime_ = input.readUInt32();
              break;
            }
            case 72: {

              prizeTime_ = input.readUInt32();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              channel_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.roulette.common.internal_static_room_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.roulette.common.internal_static_room_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.roulette.common.room_info.class, protocols.roulette.common.room_info.Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private volatile java.lang.Object roomId_;
    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GAMETYPE_FIELD_NUMBER = 2;
    private int gameType_;
    /**
     * <pre>
     * 37=欧式轮盘(默认) 38=美式轮盘 25=法式轮盘
     * </pre>
     *
     * <code>uint32 gameType = 2;</code>
     */
    public int getGameType() {
      return gameType_;
    }

    public static final int MINCOIN_FIELD_NUMBER = 3;
    private int minCoin_;
    /**
     * <pre>
     * 加入房间最少金币数
     * </pre>
     *
     * <code>uint32 minCoin = 3;</code>
     */
    public int getMinCoin() {
      return minCoin_;
    }

    public static final int MINBET_FIELD_NUMBER = 4;
    private int minBet_;
    /**
     * <pre>
     * 同一下注目标，单人单次最小下注额
     * </pre>
     *
     * <code>uint32 minBet = 4;</code>
     */
    public int getMinBet() {
      return minBet_;
    }

    public static final int MAXBET_FIELD_NUMBER = 5;
    private int maxBet_;
    /**
     * <pre>
     * 同一下注目标，单人单次最大下注额
     * </pre>
     *
     * <code>uint32 maxBet = 5;</code>
     */
    public int getMaxBet() {
      return maxBet_;
    }

    public static final int MAXTOTALBET_FIELD_NUMBER = 6;
    private int maxTotalBet_;
    /**
     * <pre>
     * 房间总最大下注额
     * </pre>
     *
     * <code>uint32 maxTotalBet = 6;</code>
     */
    public int getMaxTotalBet() {
      return maxTotalBet_;
    }

    public static final int DRAWPERCENT_FIELD_NUMBER = 7;
    private int drawPercent_;
    /**
     * <pre>
     * 抽水百分比
     * </pre>
     *
     * <code>uint32 drawPercent = 7;</code>
     */
    public int getDrawPercent() {
      return drawPercent_;
    }

    public static final int BETTIME_FIELD_NUMBER = 8;
    private int betTime_;
    /**
     * <pre>
     * 下注时长，以秒为单位
     * </pre>
     *
     * <code>uint32 betTime = 8;</code>
     */
    public int getBetTime() {
      return betTime_;
    }

    public static final int PRIZETIME_FIELD_NUMBER = 9;
    private int prizeTime_;
    /**
     * <pre>
     * 开奖时长，以秒为单位
     * </pre>
     *
     * <code>uint32 prizeTime = 9;</code>
     */
    public int getPrizeTime() {
      return prizeTime_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 10;
    private volatile java.lang.Object channel_;
    /**
     * <pre>
     * 声网频道号
     * </pre>
     *
     * <code>string channel = 10;</code>
     */
    public java.lang.String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        channel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 声网频道号
     * </pre>
     *
     * <code>string channel = 10;</code>
     */
    public com.google.protobuf.ByteString
        getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRoomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, roomId_);
      }
      if (gameType_ != 0) {
        output.writeUInt32(2, gameType_);
      }
      if (minCoin_ != 0) {
        output.writeUInt32(3, minCoin_);
      }
      if (minBet_ != 0) {
        output.writeUInt32(4, minBet_);
      }
      if (maxBet_ != 0) {
        output.writeUInt32(5, maxBet_);
      }
      if (maxTotalBet_ != 0) {
        output.writeUInt32(6, maxTotalBet_);
      }
      if (drawPercent_ != 0) {
        output.writeUInt32(7, drawPercent_);
      }
      if (betTime_ != 0) {
        output.writeUInt32(8, betTime_);
      }
      if (prizeTime_ != 0) {
        output.writeUInt32(9, prizeTime_);
      }
      if (!getChannelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, channel_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRoomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, roomId_);
      }
      if (gameType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameType_);
      }
      if (minCoin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, minCoin_);
      }
      if (minBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, minBet_);
      }
      if (maxBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxBet_);
      }
      if (maxTotalBet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, maxTotalBet_);
      }
      if (drawPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, drawPercent_);
      }
      if (betTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, betTime_);
      }
      if (prizeTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, prizeTime_);
      }
      if (!getChannelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, channel_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.roulette.common.room_info)) {
        return super.equals(obj);
      }
      protocols.roulette.common.room_info other = (protocols.roulette.common.room_info) obj;

      boolean result = true;
      result = result && getRoomId()
          .equals(other.getRoomId());
      result = result && (getGameType()
          == other.getGameType());
      result = result && (getMinCoin()
          == other.getMinCoin());
      result = result && (getMinBet()
          == other.getMinBet());
      result = result && (getMaxBet()
          == other.getMaxBet());
      result = result && (getMaxTotalBet()
          == other.getMaxTotalBet());
      result = result && (getDrawPercent()
          == other.getDrawPercent());
      result = result && (getBetTime()
          == other.getBetTime());
      result = result && (getPrizeTime()
          == other.getPrizeTime());
      result = result && getChannel()
          .equals(other.getChannel());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId().hashCode();
      hash = (37 * hash) + GAMETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getGameType();
      hash = (37 * hash) + MINCOIN_FIELD_NUMBER;
      hash = (53 * hash) + getMinCoin();
      hash = (37 * hash) + MINBET_FIELD_NUMBER;
      hash = (53 * hash) + getMinBet();
      hash = (37 * hash) + MAXBET_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBet();
      hash = (37 * hash) + MAXTOTALBET_FIELD_NUMBER;
      hash = (53 * hash) + getMaxTotalBet();
      hash = (37 * hash) + DRAWPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getDrawPercent();
      hash = (37 * hash) + BETTIME_FIELD_NUMBER;
      hash = (53 * hash) + getBetTime();
      hash = (37 * hash) + PRIZETIME_FIELD_NUMBER;
      hash = (53 * hash) + getPrizeTime();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.roulette.common.room_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.room_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.room_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.room_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.room_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.room_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.room_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.room_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.room_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.room_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.roulette.common.room_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code room_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:room_info)
        protocols.roulette.common.room_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.roulette.common.internal_static_room_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.roulette.common.internal_static_room_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.roulette.common.room_info.class, protocols.roulette.common.room_info.Builder.class);
      }

      // Construct using protocols.roulette.common.room_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = "";

        gameType_ = 0;

        minCoin_ = 0;

        minBet_ = 0;

        maxBet_ = 0;

        maxTotalBet_ = 0;

        drawPercent_ = 0;

        betTime_ = 0;

        prizeTime_ = 0;

        channel_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.roulette.common.internal_static_room_info_descriptor;
      }

      public protocols.roulette.common.room_info getDefaultInstanceForType() {
        return protocols.roulette.common.room_info.getDefaultInstance();
      }

      public protocols.roulette.common.room_info build() {
        protocols.roulette.common.room_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.roulette.common.room_info buildPartial() {
        protocols.roulette.common.room_info result = new protocols.roulette.common.room_info(this);
        result.roomId_ = roomId_;
        result.gameType_ = gameType_;
        result.minCoin_ = minCoin_;
        result.minBet_ = minBet_;
        result.maxBet_ = maxBet_;
        result.maxTotalBet_ = maxTotalBet_;
        result.drawPercent_ = drawPercent_;
        result.betTime_ = betTime_;
        result.prizeTime_ = prizeTime_;
        result.channel_ = channel_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.roulette.common.room_info) {
          return mergeFrom((protocols.roulette.common.room_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.roulette.common.room_info other) {
        if (other == protocols.roulette.common.room_info.getDefaultInstance()) return this;
        if (!other.getRoomId().isEmpty()) {
          roomId_ = other.roomId_;
          onChanged();
        }
        if (other.getGameType() != 0) {
          setGameType(other.getGameType());
        }
        if (other.getMinCoin() != 0) {
          setMinCoin(other.getMinCoin());
        }
        if (other.getMinBet() != 0) {
          setMinBet(other.getMinBet());
        }
        if (other.getMaxBet() != 0) {
          setMaxBet(other.getMaxBet());
        }
        if (other.getMaxTotalBet() != 0) {
          setMaxTotalBet(other.getMaxTotalBet());
        }
        if (other.getDrawPercent() != 0) {
          setDrawPercent(other.getDrawPercent());
        }
        if (other.getBetTime() != 0) {
          setBetTime(other.getBetTime());
        }
        if (other.getPrizeTime() != 0) {
          setPrizeTime(other.getPrizeTime());
        }
        if (!other.getChannel().isEmpty()) {
          channel_ = other.channel_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.roulette.common.room_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.roulette.common.room_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object roomId_ = "";
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomId_ = value;
        onChanged();
        return this;
      }

      private int gameType_ ;
      /**
       * <pre>
       * 37=欧式轮盘(默认) 38=美式轮盘 25=法式轮盘
       * </pre>
       *
       * <code>uint32 gameType = 2;</code>
       */
      public int getGameType() {
        return gameType_;
      }
      /**
       * <pre>
       * 37=欧式轮盘(默认) 38=美式轮盘 25=法式轮盘
       * </pre>
       *
       * <code>uint32 gameType = 2;</code>
       */
      public Builder setGameType(int value) {
        
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 37=欧式轮盘(默认) 38=美式轮盘 25=法式轮盘
       * </pre>
       *
       * <code>uint32 gameType = 2;</code>
       */
      public Builder clearGameType() {
        
        gameType_ = 0;
        onChanged();
        return this;
      }

      private int minCoin_ ;
      /**
       * <pre>
       * 加入房间最少金币数
       * </pre>
       *
       * <code>uint32 minCoin = 3;</code>
       */
      public int getMinCoin() {
        return minCoin_;
      }
      /**
       * <pre>
       * 加入房间最少金币数
       * </pre>
       *
       * <code>uint32 minCoin = 3;</code>
       */
      public Builder setMinCoin(int value) {
        
        minCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 加入房间最少金币数
       * </pre>
       *
       * <code>uint32 minCoin = 3;</code>
       */
      public Builder clearMinCoin() {
        
        minCoin_ = 0;
        onChanged();
        return this;
      }

      private int minBet_ ;
      /**
       * <pre>
       * 同一下注目标，单人单次最小下注额
       * </pre>
       *
       * <code>uint32 minBet = 4;</code>
       */
      public int getMinBet() {
        return minBet_;
      }
      /**
       * <pre>
       * 同一下注目标，单人单次最小下注额
       * </pre>
       *
       * <code>uint32 minBet = 4;</code>
       */
      public Builder setMinBet(int value) {
        
        minBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 同一下注目标，单人单次最小下注额
       * </pre>
       *
       * <code>uint32 minBet = 4;</code>
       */
      public Builder clearMinBet() {
        
        minBet_ = 0;
        onChanged();
        return this;
      }

      private int maxBet_ ;
      /**
       * <pre>
       * 同一下注目标，单人单次最大下注额
       * </pre>
       *
       * <code>uint32 maxBet = 5;</code>
       */
      public int getMaxBet() {
        return maxBet_;
      }
      /**
       * <pre>
       * 同一下注目标，单人单次最大下注额
       * </pre>
       *
       * <code>uint32 maxBet = 5;</code>
       */
      public Builder setMaxBet(int value) {
        
        maxBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 同一下注目标，单人单次最大下注额
       * </pre>
       *
       * <code>uint32 maxBet = 5;</code>
       */
      public Builder clearMaxBet() {
        
        maxBet_ = 0;
        onChanged();
        return this;
      }

      private int maxTotalBet_ ;
      /**
       * <pre>
       * 房间总最大下注额
       * </pre>
       *
       * <code>uint32 maxTotalBet = 6;</code>
       */
      public int getMaxTotalBet() {
        return maxTotalBet_;
      }
      /**
       * <pre>
       * 房间总最大下注额
       * </pre>
       *
       * <code>uint32 maxTotalBet = 6;</code>
       */
      public Builder setMaxTotalBet(int value) {
        
        maxTotalBet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间总最大下注额
       * </pre>
       *
       * <code>uint32 maxTotalBet = 6;</code>
       */
      public Builder clearMaxTotalBet() {
        
        maxTotalBet_ = 0;
        onChanged();
        return this;
      }

      private int drawPercent_ ;
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public int getDrawPercent() {
        return drawPercent_;
      }
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public Builder setDrawPercent(int value) {
        
        drawPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public Builder clearDrawPercent() {
        
        drawPercent_ = 0;
        onChanged();
        return this;
      }

      private int betTime_ ;
      /**
       * <pre>
       * 下注时长，以秒为单位
       * </pre>
       *
       * <code>uint32 betTime = 8;</code>
       */
      public int getBetTime() {
        return betTime_;
      }
      /**
       * <pre>
       * 下注时长，以秒为单位
       * </pre>
       *
       * <code>uint32 betTime = 8;</code>
       */
      public Builder setBetTime(int value) {
        
        betTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 下注时长，以秒为单位
       * </pre>
       *
       * <code>uint32 betTime = 8;</code>
       */
      public Builder clearBetTime() {
        
        betTime_ = 0;
        onChanged();
        return this;
      }

      private int prizeTime_ ;
      /**
       * <pre>
       * 开奖时长，以秒为单位
       * </pre>
       *
       * <code>uint32 prizeTime = 9;</code>
       */
      public int getPrizeTime() {
        return prizeTime_;
      }
      /**
       * <pre>
       * 开奖时长，以秒为单位
       * </pre>
       *
       * <code>uint32 prizeTime = 9;</code>
       */
      public Builder setPrizeTime(int value) {
        
        prizeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 开奖时长，以秒为单位
       * </pre>
       *
       * <code>uint32 prizeTime = 9;</code>
       */
      public Builder clearPrizeTime() {
        
        prizeTime_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object channel_ = "";
      /**
       * <pre>
       * 声网频道号
       * </pre>
       *
       * <code>string channel = 10;</code>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 声网频道号
       * </pre>
       *
       * <code>string channel = 10;</code>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 声网频道号
       * </pre>
       *
       * <code>string channel = 10;</code>
       */
      public Builder setChannel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 声网频道号
       * </pre>
       *
       * <code>string channel = 10;</code>
       */
      public Builder clearChannel() {
        
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 声网频道号
       * </pre>
       *
       * <code>string channel = 10;</code>
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        channel_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:room_info)
    }

    // @@protoc_insertion_point(class_scope:room_info)
    private static final protocols.roulette.common.room_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.roulette.common.room_info();
    }

    public static protocols.roulette.common.room_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<room_info>
        PARSER = new com.google.protobuf.AbstractParser<room_info>() {
      public room_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new room_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<room_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<room_info> getParserForType() {
      return PARSER;
    }

    public protocols.roulette.common.room_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface user_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:user_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 用户id
     * </pre>
     *
     * <code>uint32 userId = 1;</code>
     */
    int getUserId();

    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    java.lang.String getUserName();
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>uint32 avatar = 3;</code>
     */
    int getAvatar();

    /**
     * <pre>
     * 金币数
     * </pre>
     *
     * <code>uint32 coin = 4;</code>
     */
    int getCoin();

    /**
     * <pre>
     * 是否已被禁言
     * </pre>
     *
     * <code>bool silent = 5;</code>
     */
    boolean getSilent();
  }
  /**
   * Protobuf type {@code user_info}
   */
  public  static final class user_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:user_info)
      user_infoOrBuilder {
    // Use user_info.newBuilder() to construct.
    private user_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private user_info() {
      userId_ = 0;
      userName_ = "";
      avatar_ = 0;
      coin_ = 0;
      silent_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private user_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              userId_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              userName_ = s;
              break;
            }
            case 24: {

              avatar_ = input.readUInt32();
              break;
            }
            case 32: {

              coin_ = input.readUInt32();
              break;
            }
            case 40: {

              silent_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.roulette.common.internal_static_user_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.roulette.common.internal_static_user_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.roulette.common.user_info.class, protocols.roulette.common.user_info.Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <pre>
     * 用户id
     * </pre>
     *
     * <code>uint32 userId = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object userName_;
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVATAR_FIELD_NUMBER = 3;
    private int avatar_;
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>uint32 avatar = 3;</code>
     */
    public int getAvatar() {
      return avatar_;
    }

    public static final int COIN_FIELD_NUMBER = 4;
    private int coin_;
    /**
     * <pre>
     * 金币数
     * </pre>
     *
     * <code>uint32 coin = 4;</code>
     */
    public int getCoin() {
      return coin_;
    }

    public static final int SILENT_FIELD_NUMBER = 5;
    private boolean silent_;
    /**
     * <pre>
     * 是否已被禁言
     * </pre>
     *
     * <code>bool silent = 5;</code>
     */
    public boolean getSilent() {
      return silent_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userId_ != 0) {
        output.writeUInt32(1, userId_);
      }
      if (!getUserNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userName_);
      }
      if (avatar_ != 0) {
        output.writeUInt32(3, avatar_);
      }
      if (coin_ != 0) {
        output.writeUInt32(4, coin_);
      }
      if (silent_ != false) {
        output.writeBool(5, silent_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, userId_);
      }
      if (!getUserNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userName_);
      }
      if (avatar_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, avatar_);
      }
      if (coin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, coin_);
      }
      if (silent_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, silent_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.roulette.common.user_info)) {
        return super.equals(obj);
      }
      protocols.roulette.common.user_info other = (protocols.roulette.common.user_info) obj;

      boolean result = true;
      result = result && (getUserId()
          == other.getUserId());
      result = result && getUserName()
          .equals(other.getUserName());
      result = result && (getAvatar()
          == other.getAvatar());
      result = result && (getCoin()
          == other.getCoin());
      result = result && (getSilent()
          == other.getSilent());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId();
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUserName().hashCode();
      hash = (37 * hash) + AVATAR_FIELD_NUMBER;
      hash = (53 * hash) + getAvatar();
      hash = (37 * hash) + COIN_FIELD_NUMBER;
      hash = (53 * hash) + getCoin();
      hash = (37 * hash) + SILENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSilent());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.roulette.common.user_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.user_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.user_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.user_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.user_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.user_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.user_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.user_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.user_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.user_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.roulette.common.user_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code user_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:user_info)
        protocols.roulette.common.user_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.roulette.common.internal_static_user_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.roulette.common.internal_static_user_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.roulette.common.user_info.class, protocols.roulette.common.user_info.Builder.class);
      }

      // Construct using protocols.roulette.common.user_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = 0;

        userName_ = "";

        avatar_ = 0;

        coin_ = 0;

        silent_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.roulette.common.internal_static_user_info_descriptor;
      }

      public protocols.roulette.common.user_info getDefaultInstanceForType() {
        return protocols.roulette.common.user_info.getDefaultInstance();
      }

      public protocols.roulette.common.user_info build() {
        protocols.roulette.common.user_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.roulette.common.user_info buildPartial() {
        protocols.roulette.common.user_info result = new protocols.roulette.common.user_info(this);
        result.userId_ = userId_;
        result.userName_ = userName_;
        result.avatar_ = avatar_;
        result.coin_ = coin_;
        result.silent_ = silent_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.roulette.common.user_info) {
          return mergeFrom((protocols.roulette.common.user_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.roulette.common.user_info other) {
        if (other == protocols.roulette.common.user_info.getDefaultInstance()) return this;
        if (other.getUserId() != 0) {
          setUserId(other.getUserId());
        }
        if (!other.getUserName().isEmpty()) {
          userName_ = other.userName_;
          onChanged();
        }
        if (other.getAvatar() != 0) {
          setAvatar(other.getAvatar());
        }
        if (other.getCoin() != 0) {
          setCoin(other.getCoin());
        }
        if (other.getSilent() != false) {
          setSilent(other.getSilent());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.roulette.common.user_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.roulette.common.user_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int userId_ ;
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public Builder setUserId(int value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object userName_ = "";
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder clearUserName() {
        
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userName_ = value;
        onChanged();
        return this;
      }

      private int avatar_ ;
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public int getAvatar() {
        return avatar_;
      }
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public Builder setAvatar(int value) {
        
        avatar_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public Builder clearAvatar() {
        
        avatar_ = 0;
        onChanged();
        return this;
      }

      private int coin_ ;
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public Builder setCoin(int value) {
        
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public Builder clearCoin() {
        
        coin_ = 0;
        onChanged();
        return this;
      }

      private boolean silent_ ;
      /**
       * <pre>
       * 是否已被禁言
       * </pre>
       *
       * <code>bool silent = 5;</code>
       */
      public boolean getSilent() {
        return silent_;
      }
      /**
       * <pre>
       * 是否已被禁言
       * </pre>
       *
       * <code>bool silent = 5;</code>
       */
      public Builder setSilent(boolean value) {
        
        silent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否已被禁言
       * </pre>
       *
       * <code>bool silent = 5;</code>
       */
      public Builder clearSilent() {
        
        silent_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:user_info)
    }

    // @@protoc_insertion_point(class_scope:user_info)
    private static final protocols.roulette.common.user_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.roulette.common.user_info();
    }

    public static protocols.roulette.common.user_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<user_info>
        PARSER = new com.google.protobuf.AbstractParser<user_info>() {
      public user_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new user_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<user_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<user_info> getParserForType() {
      return PARSER;
    }

    public protocols.roulette.common.user_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface betOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
     * </pre>
     *
     * <code>string target = 1;</code>
     */
    java.lang.String getTarget();
    /**
     * <pre>
     *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
     * </pre>
     *
     * <code>string target = 1;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();

    /**
     * <pre>
     * 下注或获奖金币数
     * </pre>
     *
     * <code>uint32 coins = 2;</code>
     */
    int getCoins();
  }
  /**
   * Protobuf type {@code bet}
   */
  public  static final class bet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:bet)
      betOrBuilder {
    // Use bet.newBuilder() to construct.
    private bet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private bet() {
      target_ = "";
      coins_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private bet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              target_ = s;
              break;
            }
            case 16: {

              coins_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.roulette.common.internal_static_bet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.roulette.common.internal_static_bet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.roulette.common.bet.class, protocols.roulette.common.bet.Builder.class);
    }

    public static final int TARGET_FIELD_NUMBER = 1;
    private volatile java.lang.Object target_;
    /**
     * <pre>
     *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
     * </pre>
     *
     * <code>string target = 1;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
     * </pre>
     *
     * <code>string target = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COINS_FIELD_NUMBER = 2;
    private int coins_;
    /**
     * <pre>
     * 下注或获奖金币数
     * </pre>
     *
     * <code>uint32 coins = 2;</code>
     */
    public int getCoins() {
      return coins_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTargetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, target_);
      }
      if (coins_ != 0) {
        output.writeUInt32(2, coins_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTargetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, target_);
      }
      if (coins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, coins_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.roulette.common.bet)) {
        return super.equals(obj);
      }
      protocols.roulette.common.bet other = (protocols.roulette.common.bet) obj;

      boolean result = true;
      result = result && getTarget()
          .equals(other.getTarget());
      result = result && (getCoins()
          == other.getCoins());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getTarget().hashCode();
      hash = (37 * hash) + COINS_FIELD_NUMBER;
      hash = (53 * hash) + getCoins();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.roulette.common.bet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.bet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.bet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.roulette.common.bet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.roulette.common.bet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.bet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.bet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.bet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.roulette.common.bet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.roulette.common.bet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.roulette.common.bet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bet)
        protocols.roulette.common.betOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.roulette.common.internal_static_bet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.roulette.common.internal_static_bet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.roulette.common.bet.class, protocols.roulette.common.bet.Builder.class);
      }

      // Construct using protocols.roulette.common.bet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        target_ = "";

        coins_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.roulette.common.internal_static_bet_descriptor;
      }

      public protocols.roulette.common.bet getDefaultInstanceForType() {
        return protocols.roulette.common.bet.getDefaultInstance();
      }

      public protocols.roulette.common.bet build() {
        protocols.roulette.common.bet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.roulette.common.bet buildPartial() {
        protocols.roulette.common.bet result = new protocols.roulette.common.bet(this);
        result.target_ = target_;
        result.coins_ = coins_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.roulette.common.bet) {
          return mergeFrom((protocols.roulette.common.bet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.roulette.common.bet other) {
        if (other == protocols.roulette.common.bet.getDefaultInstance()) return this;
        if (!other.getTarget().isEmpty()) {
          target_ = other.target_;
          onChanged();
        }
        if (other.getCoins() != 0) {
          setCoins(other.getCoins());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.roulette.common.bet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.roulette.common.bet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object target_ = "";
      /**
       * <pre>
       *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
       * </pre>
       *
       * <code>string target = 1;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
       * </pre>
       *
       * <code>string target = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
       * </pre>
       *
       * <code>string target = 1;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
       * </pre>
       *
       * <code>string target = 1;</code>
       */
      public Builder clearTarget() {
        
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *beton  target              = 1; // 下注目标或获奖目标，为了后续可拓展，改用string
       * </pre>
       *
       * <code>string target = 1;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        target_ = value;
        onChanged();
        return this;
      }

      private int coins_ ;
      /**
       * <pre>
       * 下注或获奖金币数
       * </pre>
       *
       * <code>uint32 coins = 2;</code>
       */
      public int getCoins() {
        return coins_;
      }
      /**
       * <pre>
       * 下注或获奖金币数
       * </pre>
       *
       * <code>uint32 coins = 2;</code>
       */
      public Builder setCoins(int value) {
        
        coins_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 下注或获奖金币数
       * </pre>
       *
       * <code>uint32 coins = 2;</code>
       */
      public Builder clearCoins() {
        
        coins_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bet)
    }

    // @@protoc_insertion_point(class_scope:bet)
    private static final protocols.roulette.common.bet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.roulette.common.bet();
    }

    public static protocols.roulette.common.bet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<bet>
        PARSER = new com.google.protobuf.AbstractParser<bet>() {
      public bet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new bet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<bet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<bet> getParserForType() {
      return PARSER;
    }

    public protocols.roulette.common.bet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_room_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_room_info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_user_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_user_info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_bet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025roulette/common.proto\"\275\001\n\troom_info\022\016\n" +
      "\006roomId\030\001 \001(\t\022\020\n\010gameType\030\002 \001(\r\022\017\n\007minCo" +
      "in\030\003 \001(\r\022\016\n\006minBet\030\004 \001(\r\022\016\n\006maxBet\030\005 \001(\r" +
      "\022\023\n\013maxTotalBet\030\006 \001(\r\022\023\n\013drawPercent\030\007 \001" +
      "(\r\022\017\n\007betTime\030\010 \001(\r\022\021\n\tprizeTime\030\t \001(\r\022\017" +
      "\n\007channel\030\n \001(\t\"[\n\tuser_info\022\016\n\006userId\030\001" +
      " \001(\r\022\020\n\010userName\030\002 \001(\t\022\016\n\006avatar\030\003 \001(\r\022\014" +
      "\n\004coin\030\004 \001(\r\022\016\n\006silent\030\005 \001(\010\"$\n\003bet\022\016\n\006t" +
      "arget\030\001 \001(\t\022\r\n\005coins\030\002 \001(\r*\335\014\n\005beton\022\t\n\005" +
      "small\020\000\022\007\n\003big\020\001\022\010\n\004even\020\002\022\007\n\003odd\020\003\022\007\n\003r",
      "ed\020\004\022\t\n\005black\020\005\022\n\n\006dozen1\020\006\022\n\n\006dozen2\020\007\022" +
      "\n\n\006dozen3\020\010\022\010\n\004col1\020\t\022\010\n\004col2\020\n\022\010\n\004col3\020" +
      "\013\022\006\n\002s0\020\014\022\006\n\002s1\020\r\022\006\n\002s2\020\016\022\006\n\002s3\020\017\022\006\n\002s4\020" +
      "\020\022\006\n\002s5\020\021\022\006\n\002s6\020\022\022\006\n\002s7\020\023\022\006\n\002s8\020\024\022\006\n\002s9\020" +
      "\025\022\007\n\003s10\020\026\022\007\n\003s11\020\027\022\007\n\003s12\020\030\022\007\n\003s13\020\031\022\007\n" +
      "\003s14\020\032\022\007\n\003s15\020\033\022\007\n\003s16\020\034\022\007\n\003s17\020\035\022\007\n\003s18" +
      "\020\036\022\007\n\003s19\020\037\022\007\n\003s20\020 \022\007\n\003s21\020!\022\007\n\003s22\020\"\022\007" +
      "\n\003s23\020#\022\007\n\003s24\020$\022\007\n\003s25\020%\022\007\n\003s26\020&\022\007\n\003s2" +
      "7\020\'\022\007\n\003s28\020(\022\007\n\003s29\020)\022\007\n\003s30\020*\022\007\n\003s31\020+\022" +
      "\007\n\003s32\020,\022\007\n\003s33\020-\022\007\n\003s34\020.\022\007\n\003s35\020/\022\007\n\003s",
      "36\0200\022\010\n\004d0_1\0201\022\010\n\004d0_2\0202\022\010\n\004d0_3\0203\022\010\n\004d1" +
      "_2\0204\022\010\n\004d1_4\0205\022\010\n\004d2_3\0206\022\010\n\004d2_5\0207\022\010\n\004d3" +
      "_6\0208\022\010\n\004d4_5\0209\022\010\n\004d4_7\020:\022\010\n\004d5_6\020;\022\010\n\004d5" +
      "_8\020<\022\010\n\004d6_9\020=\022\010\n\004d7_8\020>\022\t\n\005d7_10\020?\022\010\n\004d" +
      "8_9\020@\022\t\n\005d8_11\020A\022\t\n\005d9_12\020B\022\n\n\006d10_11\020C\022" +
      "\n\n\006d10_13\020D\022\n\n\006d11_12\020E\022\n\n\006d11_14\020F\022\n\n\006d" +
      "12_15\020G\022\n\n\006d13_14\020H\022\n\n\006d13_16\020I\022\n\n\006d14_1" +
      "5\020J\022\n\n\006d14_17\020K\022\n\n\006d15_18\020L\022\n\n\006d16_17\020M\022" +
      "\n\n\006d16_19\020N\022\n\n\006d17_18\020O\022\n\n\006d17_20\020P\022\n\n\006d" +
      "18_21\020Q\022\n\n\006d19_20\020R\022\n\n\006d19_22\020S\022\n\n\006d20_2",
      "1\020T\022\n\n\006d20_23\020U\022\n\n\006d21_24\020V\022\n\n\006d22_23\020W\022" +
      "\n\n\006d22_25\020X\022\n\n\006d23_24\020Y\022\n\n\006d23_26\020Z\022\n\n\006d" +
      "24_27\020[\022\n\n\006d25_26\020\\\022\n\n\006d25_28\020]\022\n\n\006d26_2" +
      "7\020^\022\n\n\006d26_29\020_\022\n\n\006d27_30\020`\022\n\n\006d28_29\020a\022" +
      "\n\n\006d28_31\020b\022\n\n\006d29_30\020c\022\n\n\006d29_32\020d\022\n\n\006d" +
      "30_33\020e\022\n\n\006d31_32\020f\022\n\n\006d31_34\020g\022\n\n\006d32_3" +
      "3\020h\022\n\n\006d32_35\020i\022\n\n\006d33_36\020j\022\013\n\006d34_35\020\232\001" +
      "\022\013\n\006d35_36\020\233\001\022\n\n\006t0_1_2\020k\022\n\n\006t0_2_3\020l\022\006\n" +
      "\002t1\020m\022\006\n\002t4\020n\022\006\n\002t7\020o\022\007\n\003t10\020p\022\007\n\003t13\020q\022" +
      "\007\n\003t16\020r\022\007\n\003t19\020s\022\007\n\003t22\020t\022\007\n\003t25\020u\022\007\n\003t",
      "28\020v\022\007\n\003t31\020w\022\007\n\003t34\020x\022\006\n\002f1\020y\022\006\n\002f2\020z\022\006" +
      "\n\002f4\020{\022\006\n\002f5\020|\022\006\n\002f7\020}\022\006\n\002f8\020~\022\007\n\003f10\020\177\022" +
      "\010\n\003f11\020\200\001\022\010\n\003f13\020\201\001\022\010\n\003f14\020\202\001\022\010\n\003f16\020\203\001\022" +
      "\010\n\003f17\020\204\001\022\010\n\003f19\020\205\001\022\010\n\003f20\020\206\001\022\010\n\003f22\020\207\001\022" +
      "\010\n\003f23\020\210\001\022\010\n\003f25\020\211\001\022\010\n\003f26\020\212\001\022\010\n\003f28\020\213\001\022" +
      "\010\n\003f29\020\214\001\022\010\n\003f31\020\215\001\022\010\n\003f32\020\216\001\022\n\n\005sx1_6\020\217" +
      "\001\022\n\n\005sx4_9\020\220\001\022\013\n\006sx7_12\020\221\001\022\014\n\007sx10_15\020\222\001" +
      "\022\014\n\007sx13_18\020\223\001\022\014\n\007sx16_21\020\224\001\022\014\n\007sx19_24\020" +
      "\225\001\022\014\n\007sx22_27\020\226\001\022\014\n\007sx25_30\020\227\001\022\014\n\007sx28_3" +
      "3\020\230\001\022\014\n\007sx31_36\020\231\001B\034\n\022protocols.roulette",
      "B\006commonb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_room_info_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_room_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_room_info_descriptor,
        new java.lang.String[] { "RoomId", "GameType", "MinCoin", "MinBet", "MaxBet", "MaxTotalBet", "DrawPercent", "BetTime", "PrizeTime", "Channel", });
    internal_static_user_info_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_user_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_user_info_descriptor,
        new java.lang.String[] { "UserId", "UserName", "Avatar", "Coin", "Silent", });
    internal_static_bet_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_bet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_bet_descriptor,
        new java.lang.String[] { "Target", "Coins", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
