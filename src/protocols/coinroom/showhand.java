// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coinroom/showhand.proto

package protocols.coinroom;

public final class showhand {
  private showhand() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    java.util.List<java.lang.Integer> getHandList();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    int getHandCount();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    int getHand(int index);
  }
  /**
   * <pre>
   * 请求 CMD 0x2F
   * </pre>
   *
   * Protobuf type {@code request}
   */
  public  static final class request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:request)
      requestOrBuilder {
    // Use request.newBuilder() to construct.
    private request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private request() {
      hand_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              hand_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                hand_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.showhand.internal_static_request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.showhand.internal_static_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.showhand.request.class, protocols.coinroom.showhand.request.Builder.class);
    }

    public static final int HAND_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> hand_;
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getHandList() {
      return hand_;
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    public int getHandCount() {
      return hand_.size();
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 1;</code>
     */
    public int getHand(int index) {
      return hand_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hand_.size(); i++) {
        output.writeUInt32(1, hand_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < hand_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hand_.get(i));
        }
        size += dataSize;
        size += 1 * getHandList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.showhand.request)) {
        return super.equals(obj);
      }
      protocols.coinroom.showhand.request other = (protocols.coinroom.showhand.request) obj;

      boolean result = true;
      result = result && getHandList()
          .equals(other.getHandList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHandCount() > 0) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHandList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.showhand.request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.showhand.request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 请求 CMD 0x2F
     * </pre>
     *
     * Protobuf type {@code request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:request)
        protocols.coinroom.showhand.requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.showhand.internal_static_request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.showhand.internal_static_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.showhand.request.class, protocols.coinroom.showhand.request.Builder.class);
      }

      // Construct using protocols.coinroom.showhand.request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.showhand.internal_static_request_descriptor;
      }

      public protocols.coinroom.showhand.request getDefaultInstanceForType() {
        return protocols.coinroom.showhand.request.getDefaultInstance();
      }

      public protocols.coinroom.showhand.request build() {
        protocols.coinroom.showhand.request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.showhand.request buildPartial() {
        protocols.coinroom.showhand.request result = new protocols.coinroom.showhand.request(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hand_ = hand_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.showhand.request) {
          return mergeFrom((protocols.coinroom.showhand.request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.showhand.request other) {
        if (other == protocols.coinroom.showhand.request.getDefaultInstance()) return this;
        if (!other.hand_.isEmpty()) {
          if (hand_.isEmpty()) {
            hand_ = other.hand_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandIsMutable();
            hand_.addAll(other.hand_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.showhand.request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.showhand.request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> hand_ = java.util.Collections.emptyList();
      private void ensureHandIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hand_ = new java.util.ArrayList<java.lang.Integer>(hand_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getHandList() {
        return java.util.Collections.unmodifiableList(hand_);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public int getHandCount() {
        return hand_.size();
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public int getHand(int index) {
        return hand_.get(index);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public Builder setHand(
          int index, int value) {
        ensureHandIsMutable();
        hand_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public Builder addHand(int value) {
        ensureHandIsMutable();
        hand_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public Builder addAllHand(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hand_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 1;</code>
       */
      public Builder clearHand() {
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:request)
    }

    // @@protoc_insertion_point(class_scope:request)
    private static final protocols.coinroom.showhand.request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.showhand.request();
    }

    public static protocols.coinroom.showhand.request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<request>
        PARSER = new com.google.protobuf.AbstractParser<request>() {
      public request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<request> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.showhand.request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface responseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    boolean hasError();
    /**
     * <pre>
     * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    int getError();

    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 2;</code>
     */
    boolean hasCardType();
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 2;</code>
     */
    int getCardType();

    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    java.util.List<java.lang.Integer> getHandList();
    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    int getHandCount();
    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    int getHand(int index);

    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    boolean hasErrDesc();
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    java.lang.String getErrDesc();
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    com.google.protobuf.ByteString
        getErrDescBytes();
  }
  /**
   * <pre>
   * 返回 CMD 0x2F
   * </pre>
   *
   * Protobuf type {@code response}
   */
  public  static final class response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:response)
      responseOrBuilder {
    // Use response.newBuilder() to construct.
    private response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private response() {
      error_ = 0;
      cardType_ = 0;
      hand_ = java.util.Collections.emptyList();
      errDesc_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              error_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardType_ = input.readUInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              hand_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                hand_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              errDesc_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.showhand.internal_static_response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.showhand.internal_static_response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.showhand.response.class, protocols.coinroom.showhand.response.Builder.class);
    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private int error_;
    /**
     * <pre>
     * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    public int getError() {
      return error_;
    }

    public static final int CARDTYPE_FIELD_NUMBER = 2;
    private int cardType_;
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 2;</code>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 2;</code>
     */
    public int getCardType() {
      return cardType_;
    }

    public static final int HAND_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> hand_;
    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getHandList() {
      return hand_;
    }
    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    public int getHandCount() {
      return hand_.size();
    }
    /**
     * <pre>
     * 已摊牌手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 3;</code>
     */
    public int getHand(int index) {
      return hand_.get(index);
    }

    public static final int ERRDESC_FIELD_NUMBER = 4;
    private volatile java.lang.Object errDesc_;
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    public boolean hasErrDesc() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    public java.lang.String getErrDesc() {
      java.lang.Object ref = errDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 4;</code>
     */
    public com.google.protobuf.ByteString
        getErrDescBytes() {
      java.lang.Object ref = errDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasError()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, cardType_);
      }
      for (int i = 0; i < hand_.size(); i++) {
        output.writeUInt32(3, hand_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, errDesc_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, cardType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hand_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hand_.get(i));
        }
        size += dataSize;
        size += 1 * getHandList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, errDesc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.showhand.response)) {
        return super.equals(obj);
      }
      protocols.coinroom.showhand.response other = (protocols.coinroom.showhand.response) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && (getError()
            == other.getError());
      }
      result = result && (hasCardType() == other.hasCardType());
      if (hasCardType()) {
        result = result && (getCardType()
            == other.getCardType());
      }
      result = result && getHandList()
          .equals(other.getHandList());
      result = result && (hasErrDesc() == other.hasErrDesc());
      if (hasErrDesc()) {
        result = result && getErrDesc()
            .equals(other.getErrDesc());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError();
      }
      if (hasCardType()) {
        hash = (37 * hash) + CARDTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCardType();
      }
      if (getHandCount() > 0) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHandList().hashCode();
      }
      if (hasErrDesc()) {
        hash = (37 * hash) + ERRDESC_FIELD_NUMBER;
        hash = (53 * hash) + getErrDesc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.showhand.response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.showhand.response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 返回 CMD 0x2F
     * </pre>
     *
     * Protobuf type {@code response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:response)
        protocols.coinroom.showhand.responseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.showhand.internal_static_response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.showhand.internal_static_response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.showhand.response.class, protocols.coinroom.showhand.response.Builder.class);
      }

      // Construct using protocols.coinroom.showhand.response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        error_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        errDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.showhand.internal_static_response_descriptor;
      }

      public protocols.coinroom.showhand.response getDefaultInstanceForType() {
        return protocols.coinroom.showhand.response.getDefaultInstance();
      }

      public protocols.coinroom.showhand.response build() {
        protocols.coinroom.showhand.response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.showhand.response buildPartial() {
        protocols.coinroom.showhand.response result = new protocols.coinroom.showhand.response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardType_ = cardType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.hand_ = hand_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errDesc_ = errDesc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.showhand.response) {
          return mergeFrom((protocols.coinroom.showhand.response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.showhand.response other) {
        if (other == protocols.coinroom.showhand.response.getDefaultInstance()) return this;
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (!other.hand_.isEmpty()) {
          if (hand_.isEmpty()) {
            hand_ = other.hand_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHandIsMutable();
            hand_.addAll(other.hand_);
          }
          onChanged();
        }
        if (other.hasErrDesc()) {
          bitField0_ |= 0x00000008;
          errDesc_ = other.errDesc_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasError()) {
          return false;
        }
        if (!hasCardType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.showhand.response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.showhand.response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int error_ ;
      /**
       * <pre>
       * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public int getError() {
        return error_;
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public Builder setError(int value) {
        bitField0_ |= 0x00000001;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=客户端的牌与服务器端的牌不一致 其他=错误
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = 0;
        onChanged();
        return this;
      }

      private int cardType_ ;
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 2;</code>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 2;</code>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 2;</code>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000002;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 2;</code>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> hand_ = java.util.Collections.emptyList();
      private void ensureHandIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          hand_ = new java.util.ArrayList<java.lang.Integer>(hand_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getHandList() {
        return java.util.Collections.unmodifiableList(hand_);
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public int getHandCount() {
        return hand_.size();
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public int getHand(int index) {
        return hand_.get(index);
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public Builder setHand(
          int index, int value) {
        ensureHandIsMutable();
        hand_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public Builder addHand(int value) {
        ensureHandIsMutable();
        hand_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public Builder addAllHand(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hand_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 已摊牌手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 3;</code>
       */
      public Builder clearHand() {
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.lang.Object errDesc_ = "";
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public boolean hasErrDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public java.lang.String getErrDesc() {
        java.lang.Object ref = errDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            errDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public com.google.protobuf.ByteString
          getErrDescBytes() {
        java.lang.Object ref = errDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public Builder setErrDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        errDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public Builder clearErrDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        errDesc_ = getDefaultInstance().getErrDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 4;</code>
       */
      public Builder setErrDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        errDesc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:response)
    }

    // @@protoc_insertion_point(class_scope:response)
    private static final protocols.coinroom.showhand.response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.showhand.response();
    }

    public static protocols.coinroom.showhand.response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<response>
        PARSER = new com.google.protobuf.AbstractParser<response>() {
      public response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<response> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.showhand.response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface showhand_notifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:showhand_notify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    boolean hasSeatId();
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    java.util.List<java.lang.Integer> getHandList();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    int getHandCount();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    int getHand(int index);

    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 3;</code>
     */
    boolean hasCardType();
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 3;</code>
     */
    int getCardType();
  }
  /**
   * <pre>
   * 摊牌通知观众和其他玩家 CMD 0x37
   * </pre>
   *
   * Protobuf type {@code showhand_notify}
   */
  public  static final class showhand_notify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:showhand_notify)
      showhand_notifyOrBuilder {
    // Use showhand_notify.newBuilder() to construct.
    private showhand_notify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private showhand_notify() {
      seatId_ = 0;
      hand_ = java.util.Collections.emptyList();
      cardType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private showhand_notify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatId_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              hand_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                hand_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              cardType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.showhand.internal_static_showhand_notify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.showhand.internal_static_showhand_notify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.showhand.showhand_notify.class, protocols.coinroom.showhand.showhand_notify.Builder.class);
    }

    private int bitField0_;
    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public boolean hasSeatId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int HAND_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> hand_;
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getHandList() {
      return hand_;
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public int getHandCount() {
      return hand_.size();
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public int getHand(int index) {
      return hand_.get(index);
    }

    public static final int CARDTYPE_FIELD_NUMBER = 3;
    private int cardType_;
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 3;</code>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 牌型
     * </pre>
     *
     * <code>required uint32 cardType = 3;</code>
     */
    public int getCardType() {
      return cardType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeatId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, seatId_);
      }
      for (int i = 0; i < hand_.size(); i++) {
        output.writeUInt32(2, hand_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, cardType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seatId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hand_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hand_.get(i));
        }
        size += dataSize;
        size += 1 * getHandList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cardType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.showhand.showhand_notify)) {
        return super.equals(obj);
      }
      protocols.coinroom.showhand.showhand_notify other = (protocols.coinroom.showhand.showhand_notify) obj;

      boolean result = true;
      result = result && (hasSeatId() == other.hasSeatId());
      if (hasSeatId()) {
        result = result && (getSeatId()
            == other.getSeatId());
      }
      result = result && getHandList()
          .equals(other.getHandList());
      result = result && (hasCardType() == other.hasCardType());
      if (hasCardType()) {
        result = result && (getCardType()
            == other.getCardType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeatId()) {
        hash = (37 * hash) + SEATID_FIELD_NUMBER;
        hash = (53 * hash) + getSeatId();
      }
      if (getHandCount() > 0) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHandList().hashCode();
      }
      if (hasCardType()) {
        hash = (37 * hash) + CARDTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCardType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.showhand_notify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.showhand_notify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.showhand.showhand_notify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.showhand.showhand_notify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 摊牌通知观众和其他玩家 CMD 0x37
     * </pre>
     *
     * Protobuf type {@code showhand_notify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:showhand_notify)
        protocols.coinroom.showhand.showhand_notifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.showhand.internal_static_showhand_notify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.showhand.internal_static_showhand_notify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.showhand.showhand_notify.class, protocols.coinroom.showhand.showhand_notify.Builder.class);
      }

      // Construct using protocols.coinroom.showhand.showhand_notify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        seatId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.showhand.internal_static_showhand_notify_descriptor;
      }

      public protocols.coinroom.showhand.showhand_notify getDefaultInstanceForType() {
        return protocols.coinroom.showhand.showhand_notify.getDefaultInstance();
      }

      public protocols.coinroom.showhand.showhand_notify build() {
        protocols.coinroom.showhand.showhand_notify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.showhand.showhand_notify buildPartial() {
        protocols.coinroom.showhand.showhand_notify result = new protocols.coinroom.showhand.showhand_notify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatId_ = seatId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.hand_ = hand_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardType_ = cardType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.showhand.showhand_notify) {
          return mergeFrom((protocols.coinroom.showhand.showhand_notify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.showhand.showhand_notify other) {
        if (other == protocols.coinroom.showhand.showhand_notify.getDefaultInstance()) return this;
        if (other.hasSeatId()) {
          setSeatId(other.getSeatId());
        }
        if (!other.hand_.isEmpty()) {
          if (hand_.isEmpty()) {
            hand_ = other.hand_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandIsMutable();
            hand_.addAll(other.hand_);
          }
          onChanged();
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeatId()) {
          return false;
        }
        if (!hasCardType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.showhand.showhand_notify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.showhand.showhand_notify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seatId_ ;
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public boolean hasSeatId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        bitField0_ |= 0x00000001;
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> hand_ = java.util.Collections.emptyList();
      private void ensureHandIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = new java.util.ArrayList<java.lang.Integer>(hand_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHandList() {
        return java.util.Collections.unmodifiableList(hand_);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public int getHandCount() {
        return hand_.size();
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public int getHand(int index) {
        return hand_.get(index);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder setHand(
          int index, int value) {
        ensureHandIsMutable();
        hand_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder addHand(int value) {
        ensureHandIsMutable();
        hand_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder addAllHand(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hand_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder clearHand() {
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int cardType_ ;
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 3;</code>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 3;</code>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 3;</code>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000004;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 牌型
       * </pre>
       *
       * <code>required uint32 cardType = 3;</code>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:showhand_notify)
    }

    // @@protoc_insertion_point(class_scope:showhand_notify)
    private static final protocols.coinroom.showhand.showhand_notify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.showhand.showhand_notify();
    }

    public static protocols.coinroom.showhand.showhand_notify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<showhand_notify>
        PARSER = new com.google.protobuf.AbstractParser<showhand_notify>() {
      public showhand_notify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new showhand_notify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<showhand_notify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<showhand_notify> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.showhand.showhand_notify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_showhand_notify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_showhand_notify_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027coinroom/showhand.proto\"\027\n\007request\022\014\n\004" +
      "hand\030\001 \003(\r\"J\n\010response\022\r\n\005error\030\001 \002(\021\022\020\n" +
      "\010cardType\030\002 \002(\r\022\014\n\004hand\030\003 \003(\r\022\017\n\007errDesc" +
      "\030\004 \001(\t\"A\n\017showhand_notify\022\016\n\006seatId\030\001 \002(" +
      "\r\022\014\n\004hand\030\002 \003(\r\022\020\n\010cardType\030\003 \002(\rB\036\n\022pro" +
      "tocols.coinroomB\010showhand"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_request_descriptor,
        new java.lang.String[] { "Hand", });
    internal_static_response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_response_descriptor,
        new java.lang.String[] { "Error", "CardType", "Hand", "ErrDesc", });
    internal_static_showhand_notify_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_showhand_notify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_showhand_notify_descriptor,
        new java.lang.String[] { "SeatId", "Hand", "CardType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
