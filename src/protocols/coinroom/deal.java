// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coinroom/deal.proto

package protocols.coinroom;

public final class deal {
  private deal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface responseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 座位ID
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    boolean hasSeatId();
    /**
     * <pre>
     * 座位ID
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    java.util.List<java.lang.Integer> getHandList();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    int getHandCount();
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    int getHand(int index);
  }
  /**
   * <pre>
   * 返回 CMD 0x2E
   * </pre>
   *
   * Protobuf type {@code response}
   */
  public  static final class response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:response)
      responseOrBuilder {
    // Use response.newBuilder() to construct.
    private response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private response() {
      seatId_ = 0;
      hand_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatId_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              hand_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                hand_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.deal.internal_static_response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.deal.internal_static_response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.deal.response.class, protocols.coinroom.deal.response.Builder.class);
    }

    private int bitField0_;
    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     * 座位ID
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public boolean hasSeatId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 座位ID
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int HAND_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> hand_;
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getHandList() {
      return hand_;
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public int getHandCount() {
      return hand_.size();
    }
    /**
     * <pre>
     * 手牌
     * </pre>
     *
     * <code>repeated uint32 hand = 2;</code>
     */
    public int getHand(int index) {
      return hand_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeatId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, seatId_);
      }
      for (int i = 0; i < hand_.size(); i++) {
        output.writeUInt32(2, hand_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seatId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hand_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hand_.get(i));
        }
        size += dataSize;
        size += 1 * getHandList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.deal.response)) {
        return super.equals(obj);
      }
      protocols.coinroom.deal.response other = (protocols.coinroom.deal.response) obj;

      boolean result = true;
      result = result && (hasSeatId() == other.hasSeatId());
      if (hasSeatId()) {
        result = result && (getSeatId()
            == other.getSeatId());
      }
      result = result && getHandList()
          .equals(other.getHandList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeatId()) {
        hash = (37 * hash) + SEATID_FIELD_NUMBER;
        hash = (53 * hash) + getSeatId();
      }
      if (getHandCount() > 0) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHandList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.deal.response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.deal.response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.deal.response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.deal.response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.deal.response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.deal.response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.deal.response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.deal.response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.deal.response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.deal.response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.deal.response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 返回 CMD 0x2E
     * </pre>
     *
     * Protobuf type {@code response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:response)
        protocols.coinroom.deal.responseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.deal.internal_static_response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.deal.internal_static_response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.deal.response.class, protocols.coinroom.deal.response.Builder.class);
      }

      // Construct using protocols.coinroom.deal.response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        seatId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.deal.internal_static_response_descriptor;
      }

      public protocols.coinroom.deal.response getDefaultInstanceForType() {
        return protocols.coinroom.deal.response.getDefaultInstance();
      }

      public protocols.coinroom.deal.response build() {
        protocols.coinroom.deal.response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.deal.response buildPartial() {
        protocols.coinroom.deal.response result = new protocols.coinroom.deal.response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatId_ = seatId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.hand_ = hand_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.deal.response) {
          return mergeFrom((protocols.coinroom.deal.response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.deal.response other) {
        if (other == protocols.coinroom.deal.response.getDefaultInstance()) return this;
        if (other.hasSeatId()) {
          setSeatId(other.getSeatId());
        }
        if (!other.hand_.isEmpty()) {
          if (hand_.isEmpty()) {
            hand_ = other.hand_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHandIsMutable();
            hand_.addAll(other.hand_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeatId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.deal.response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.deal.response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seatId_ ;
      /**
       * <pre>
       * 座位ID
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public boolean hasSeatId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 座位ID
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       * 座位ID
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        bitField0_ |= 0x00000001;
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 座位ID
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> hand_ = java.util.Collections.emptyList();
      private void ensureHandIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          hand_ = new java.util.ArrayList<java.lang.Integer>(hand_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHandList() {
        return java.util.Collections.unmodifiableList(hand_);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public int getHandCount() {
        return hand_.size();
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public int getHand(int index) {
        return hand_.get(index);
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder setHand(
          int index, int value) {
        ensureHandIsMutable();
        hand_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder addHand(int value) {
        ensureHandIsMutable();
        hand_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder addAllHand(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hand_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌
       * </pre>
       *
       * <code>repeated uint32 hand = 2;</code>
       */
      public Builder clearHand() {
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:response)
    }

    // @@protoc_insertion_point(class_scope:response)
    private static final protocols.coinroom.deal.response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.deal.response();
    }

    public static protocols.coinroom.deal.response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<response>
        PARSER = new com.google.protobuf.AbstractParser<response>() {
      public response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<response> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.deal.response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023coinroom/deal.proto\"(\n\010response\022\016\n\006sea" +
      "tId\030\001 \002(\r\022\014\n\004hand\030\002 \003(\rB\032\n\022protocols.coi" +
      "nroomB\004deal"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_response_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_response_descriptor,
        new java.lang.String[] { "SeatId", "Hand", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
