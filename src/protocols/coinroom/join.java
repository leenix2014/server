// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coinroom/join.proto

package protocols.coinroom;

public final class join {
  private join() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface requestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 用户选择的房间id
     * </pre>
     *
     * <code>required uint32 roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <pre>
     * 用户选择的房间id
     * </pre>
     *
     * <code>required uint32 roomId = 1;</code>
     */
    int getRoomId();

    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    boolean hasPwd();
    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    java.lang.String getPwd();
    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    com.google.protobuf.ByteString
        getPwdBytes();
  }
  /**
   * <pre>
   * 用户点击列表项加入 CMD 0x21
   * </pre>
   *
   * Protobuf type {@code request}
   */
  public  static final class request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:request)
      requestOrBuilder {
    // Use request.newBuilder() to construct.
    private request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private request() {
      roomId_ = 0;
      pwd_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              pwd_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.request.class, protocols.coinroom.join.request.Builder.class);
    }

    private int bitField0_;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <pre>
     * 用户选择的房间id
     * </pre>
     *
     * <code>required uint32 roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 用户选择的房间id
     * </pre>
     *
     * <code>required uint32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    public static final int PWD_FIELD_NUMBER = 2;
    private volatile java.lang.Object pwd_;
    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    public boolean hasPwd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    public java.lang.String getPwd() {
      java.lang.Object ref = pwd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pwd_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * 加密房间对应的密码(md5加密)
     * </pre>
     *
     * <code>optional string pwd = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPwdBytes() {
      java.lang.Object ref = pwd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pwd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roomId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pwd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.request)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.request other = (protocols.coinroom.join.request) obj;

      boolean result = true;
      result = result && (hasRoomId() == other.hasRoomId());
      if (hasRoomId()) {
        result = result && (getRoomId()
            == other.getRoomId());
      }
      result = result && (hasPwd() == other.hasPwd());
      if (hasPwd()) {
        result = result && getPwd()
            .equals(other.getPwd());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRoomId()) {
        hash = (37 * hash) + ROOMID_FIELD_NUMBER;
        hash = (53 * hash) + getRoomId();
      }
      if (hasPwd()) {
        hash = (37 * hash) + PWD_FIELD_NUMBER;
        hash = (53 * hash) + getPwd().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 用户点击列表项加入 CMD 0x21
     * </pre>
     *
     * Protobuf type {@code request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:request)
        protocols.coinroom.join.requestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.request.class, protocols.coinroom.join.request.Builder.class);
      }

      // Construct using protocols.coinroom.join.request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pwd_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_request_descriptor;
      }

      public protocols.coinroom.join.request getDefaultInstanceForType() {
        return protocols.coinroom.join.request.getDefaultInstance();
      }

      public protocols.coinroom.join.request build() {
        protocols.coinroom.join.request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.request buildPartial() {
        protocols.coinroom.join.request result = new protocols.coinroom.join.request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pwd_ = pwd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.request) {
          return mergeFrom((protocols.coinroom.join.request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.request other) {
        if (other == protocols.coinroom.join.request.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasPwd()) {
          bitField0_ |= 0x00000002;
          pwd_ = other.pwd_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomId_ ;
      /**
       * <pre>
       * 用户选择的房间id
       * </pre>
       *
       * <code>required uint32 roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 用户选择的房间id
       * </pre>
       *
       * <code>required uint32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       * 用户选择的房间id
       * </pre>
       *
       * <code>required uint32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户选择的房间id
       * </pre>
       *
       * <code>required uint32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object pwd_ = "";
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public boolean hasPwd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public java.lang.String getPwd() {
        java.lang.Object ref = pwd_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pwd_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPwdBytes() {
        java.lang.Object ref = pwd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pwd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public Builder setPwd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pwd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public Builder clearPwd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pwd_ = getDefaultInstance().getPwd();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 加密房间对应的密码(md5加密)
       * </pre>
       *
       * <code>optional string pwd = 2;</code>
       */
      public Builder setPwdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pwd_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:request)
    }

    // @@protoc_insertion_point(class_scope:request)
    private static final protocols.coinroom.join.request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.request();
    }

    public static protocols.coinroom.join.request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<request>
        PARSER = new com.google.protobuf.AbstractParser<request>() {
      public request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<request> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface quickjoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:quickjoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>optional .room_type mode = 1;</code>
     */
    boolean hasMode();
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>optional .room_type mode = 1;</code>
     */
    protocols.coinroom.common.room_type getMode();

    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>optional .room_grade grade = 2;</code>
     */
    boolean hasGrade();
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>optional .room_grade grade = 2;</code>
     */
    protocols.coinroom.common.room_grade getGrade();
  }
  /**
   * <pre>
   * 快速加入游戏 CMD 0x22
   * </pre>
   *
   * Protobuf type {@code quickjoin}
   */
  public  static final class quickjoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:quickjoin)
      quickjoinOrBuilder {
    // Use quickjoin.newBuilder() to construct.
    private quickjoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private quickjoin() {
      mode_ = 0;
      grade_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private quickjoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.room_type value = protocols.coinroom.common.room_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mode_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.room_grade value = protocols.coinroom.common.room_grade.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                grade_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_quickjoin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_quickjoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.quickjoin.class, protocols.coinroom.join.quickjoin.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>optional .room_type mode = 1;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>optional .room_type mode = 1;</code>
     */
    public protocols.coinroom.common.room_type getMode() {
      protocols.coinroom.common.room_type result = protocols.coinroom.common.room_type.valueOf(mode_);
      return result == null ? protocols.coinroom.common.room_type.dealer_none : result;
    }

    public static final int GRADE_FIELD_NUMBER = 2;
    private int grade_;
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>optional .room_grade grade = 2;</code>
     */
    public boolean hasGrade() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>optional .room_grade grade = 2;</code>
     */
    public protocols.coinroom.common.room_grade getGrade() {
      protocols.coinroom.common.room_grade result = protocols.coinroom.common.room_grade.valueOf(grade_);
      return result == null ? protocols.coinroom.common.room_grade.primary : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, grade_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, grade_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.quickjoin)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.quickjoin other = (protocols.coinroom.join.quickjoin) obj;

      boolean result = true;
      result = result && (hasMode() == other.hasMode());
      if (hasMode()) {
        result = result && mode_ == other.mode_;
      }
      result = result && (hasGrade() == other.hasGrade());
      if (hasGrade()) {
        result = result && grade_ == other.grade_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMode()) {
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + mode_;
      }
      if (hasGrade()) {
        hash = (37 * hash) + GRADE_FIELD_NUMBER;
        hash = (53 * hash) + grade_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.quickjoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.quickjoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.quickjoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.quickjoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.quickjoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 快速加入游戏 CMD 0x22
     * </pre>
     *
     * Protobuf type {@code quickjoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:quickjoin)
        protocols.coinroom.join.quickjoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_quickjoin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_quickjoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.quickjoin.class, protocols.coinroom.join.quickjoin.Builder.class);
      }

      // Construct using protocols.coinroom.join.quickjoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        grade_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_quickjoin_descriptor;
      }

      public protocols.coinroom.join.quickjoin getDefaultInstanceForType() {
        return protocols.coinroom.join.quickjoin.getDefaultInstance();
      }

      public protocols.coinroom.join.quickjoin build() {
        protocols.coinroom.join.quickjoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.quickjoin buildPartial() {
        protocols.coinroom.join.quickjoin result = new protocols.coinroom.join.quickjoin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.grade_ = grade_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.quickjoin) {
          return mergeFrom((protocols.coinroom.join.quickjoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.quickjoin other) {
        if (other == protocols.coinroom.join.quickjoin.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasGrade()) {
          setGrade(other.getGrade());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.quickjoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.quickjoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ = 0;
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>optional .room_type mode = 1;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>optional .room_type mode = 1;</code>
       */
      public protocols.coinroom.common.room_type getMode() {
        protocols.coinroom.common.room_type result = protocols.coinroom.common.room_type.valueOf(mode_);
        return result == null ? protocols.coinroom.common.room_type.dealer_none : result;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>optional .room_type mode = 1;</code>
       */
      public Builder setMode(protocols.coinroom.common.room_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>optional .room_type mode = 1;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int grade_ = 0;
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>optional .room_grade grade = 2;</code>
       */
      public boolean hasGrade() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>optional .room_grade grade = 2;</code>
       */
      public protocols.coinroom.common.room_grade getGrade() {
        protocols.coinroom.common.room_grade result = protocols.coinroom.common.room_grade.valueOf(grade_);
        return result == null ? protocols.coinroom.common.room_grade.primary : result;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>optional .room_grade grade = 2;</code>
       */
      public Builder setGrade(protocols.coinroom.common.room_grade value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        grade_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>optional .room_grade grade = 2;</code>
       */
      public Builder clearGrade() {
        bitField0_ = (bitField0_ & ~0x00000002);
        grade_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:quickjoin)
    }

    // @@protoc_insertion_point(class_scope:quickjoin)
    private static final protocols.coinroom.join.quickjoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.quickjoin();
    }

    public static protocols.coinroom.join.quickjoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<quickjoin>
        PARSER = new com.google.protobuf.AbstractParser<quickjoin>() {
      public quickjoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new quickjoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<quickjoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<quickjoin> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.quickjoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface responseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    boolean hasError();
    /**
     * <pre>
     * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    int getError();

    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    boolean hasRoom();
    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    protocols.coinroom.join.room_t getRoom();
    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    protocols.coinroom.join.room_tOrBuilder getRoomOrBuilder();

    /**
     * <pre>
     * 用户座位号
     * </pre>
     *
     * <code>required uint32 selfSeatId = 3;</code>
     */
    boolean hasSelfSeatId();
    /**
     * <pre>
     * 用户座位号
     * </pre>
     *
     * <code>required uint32 selfSeatId = 3;</code>
     */
    int getSelfSeatId();

    /**
     * <pre>
     * 用户成功加入的角色
     * </pre>
     *
     * <code>required .user_role selfRole = 4;</code>
     */
    boolean hasSelfRole();
    /**
     * <pre>
     * 用户成功加入的角色
     * </pre>
     *
     * <code>required .user_role selfRole = 4;</code>
     */
    protocols.coinroom.common.user_role getSelfRole();

    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    java.util.List<protocols.coinroom.join.player_info> 
        getPlayerList();
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    protocols.coinroom.join.player_info getPlayer(int index);
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    int getPlayerCount();
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    java.util.List<? extends protocols.coinroom.join.player_infoOrBuilder> 
        getPlayerOrBuilderList();
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    protocols.coinroom.join.player_infoOrBuilder getPlayerOrBuilder(
        int index);

    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    boolean hasErrDesc();
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    java.lang.String getErrDesc();
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    com.google.protobuf.ByteString
        getErrDescBytes();
  }
  /**
   * <pre>
   * request和quickjoin的响应(单用户响应) CMD 0x21
   * </pre>
   *
   * Protobuf type {@code response}
   */
  public  static final class response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:response)
      responseOrBuilder {
    // Use response.newBuilder() to construct.
    private response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private response() {
      error_ = 0;
      selfSeatId_ = 0;
      selfRole_ = 0;
      player_ = java.util.Collections.emptyList();
      errDesc_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              error_ = input.readSInt32();
              break;
            }
            case 18: {
              protocols.coinroom.join.room_t.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = room_.toBuilder();
              }
              room_ = input.readMessage(protocols.coinroom.join.room_t.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(room_);
                room_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              selfSeatId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.user_role value = protocols.coinroom.common.user_role.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                selfRole_ = rawValue;
              }
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                player_ = new java.util.ArrayList<protocols.coinroom.join.player_info>();
                mutable_bitField0_ |= 0x00000010;
              }
              player_.add(
                  input.readMessage(protocols.coinroom.join.player_info.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              errDesc_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          player_ = java.util.Collections.unmodifiableList(player_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.response.class, protocols.coinroom.join.response.Builder.class);
    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private int error_;
    /**
     * <pre>
     * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
     * </pre>
     *
     * <code>required sint32 error = 1;</code>
     */
    public int getError() {
      return error_;
    }

    public static final int ROOM_FIELD_NUMBER = 2;
    private protocols.coinroom.join.room_t room_;
    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    public boolean hasRoom() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    public protocols.coinroom.join.room_t getRoom() {
      return room_ == null ? protocols.coinroom.join.room_t.getDefaultInstance() : room_;
    }
    /**
     * <pre>
     * 加入的房间信息
     * </pre>
     *
     * <code>required .room_t room = 2;</code>
     */
    public protocols.coinroom.join.room_tOrBuilder getRoomOrBuilder() {
      return room_ == null ? protocols.coinroom.join.room_t.getDefaultInstance() : room_;
    }

    public static final int SELFSEATID_FIELD_NUMBER = 3;
    private int selfSeatId_;
    /**
     * <pre>
     * 用户座位号
     * </pre>
     *
     * <code>required uint32 selfSeatId = 3;</code>
     */
    public boolean hasSelfSeatId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 用户座位号
     * </pre>
     *
     * <code>required uint32 selfSeatId = 3;</code>
     */
    public int getSelfSeatId() {
      return selfSeatId_;
    }

    public static final int SELFROLE_FIELD_NUMBER = 4;
    private int selfRole_;
    /**
     * <pre>
     * 用户成功加入的角色
     * </pre>
     *
     * <code>required .user_role selfRole = 4;</code>
     */
    public boolean hasSelfRole() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 用户成功加入的角色
     * </pre>
     *
     * <code>required .user_role selfRole = 4;</code>
     */
    public protocols.coinroom.common.user_role getSelfRole() {
      protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(selfRole_);
      return result == null ? protocols.coinroom.common.user_role.player : result;
    }

    public static final int PLAYER_FIELD_NUMBER = 5;
    private java.util.List<protocols.coinroom.join.player_info> player_;
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    public java.util.List<protocols.coinroom.join.player_info> getPlayerList() {
      return player_;
    }
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    public java.util.List<? extends protocols.coinroom.join.player_infoOrBuilder> 
        getPlayerOrBuilderList() {
      return player_;
    }
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    public int getPlayerCount() {
      return player_.size();
    }
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    public protocols.coinroom.join.player_info getPlayer(int index) {
      return player_.get(index);
    }
    /**
     * <pre>
     * 玩家的头像等信息(包括自己)
     * </pre>
     *
     * <code>repeated .player_info player = 5;</code>
     */
    public protocols.coinroom.join.player_infoOrBuilder getPlayerOrBuilder(
        int index) {
      return player_.get(index);
    }

    public static final int ERRDESC_FIELD_NUMBER = 6;
    private volatile java.lang.Object errDesc_;
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    public boolean hasErrDesc() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    public java.lang.String getErrDesc() {
      java.lang.Object ref = errDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          errDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * 错误描述
     * </pre>
     *
     * <code>optional string errDesc = 6;</code>
     */
    public com.google.protobuf.ByteString
        getErrDescBytes() {
      java.lang.Object ref = errDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        errDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasError()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSelfSeatId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSelfRole()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRoom().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerCount(); i++) {
        if (!getPlayer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getRoom());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, selfSeatId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, selfRole_);
      }
      for (int i = 0; i < player_.size(); i++) {
        output.writeMessage(5, player_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, errDesc_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRoom());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, selfSeatId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, selfRole_);
      }
      for (int i = 0; i < player_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, player_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, errDesc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.response)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.response other = (protocols.coinroom.join.response) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && (getError()
            == other.getError());
      }
      result = result && (hasRoom() == other.hasRoom());
      if (hasRoom()) {
        result = result && getRoom()
            .equals(other.getRoom());
      }
      result = result && (hasSelfSeatId() == other.hasSelfSeatId());
      if (hasSelfSeatId()) {
        result = result && (getSelfSeatId()
            == other.getSelfSeatId());
      }
      result = result && (hasSelfRole() == other.hasSelfRole());
      if (hasSelfRole()) {
        result = result && selfRole_ == other.selfRole_;
      }
      result = result && getPlayerList()
          .equals(other.getPlayerList());
      result = result && (hasErrDesc() == other.hasErrDesc());
      if (hasErrDesc()) {
        result = result && getErrDesc()
            .equals(other.getErrDesc());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError();
      }
      if (hasRoom()) {
        hash = (37 * hash) + ROOM_FIELD_NUMBER;
        hash = (53 * hash) + getRoom().hashCode();
      }
      if (hasSelfSeatId()) {
        hash = (37 * hash) + SELFSEATID_FIELD_NUMBER;
        hash = (53 * hash) + getSelfSeatId();
      }
      if (hasSelfRole()) {
        hash = (37 * hash) + SELFROLE_FIELD_NUMBER;
        hash = (53 * hash) + selfRole_;
      }
      if (getPlayerCount() > 0) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerList().hashCode();
      }
      if (hasErrDesc()) {
        hash = (37 * hash) + ERRDESC_FIELD_NUMBER;
        hash = (53 * hash) + getErrDesc().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * request和quickjoin的响应(单用户响应) CMD 0x21
     * </pre>
     *
     * Protobuf type {@code response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:response)
        protocols.coinroom.join.responseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.response.class, protocols.coinroom.join.response.Builder.class);
      }

      // Construct using protocols.coinroom.join.response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRoomFieldBuilder();
          getPlayerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        error_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomBuilder_ == null) {
          room_ = null;
        } else {
          roomBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        selfSeatId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        selfRole_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playerBuilder_ == null) {
          player_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playerBuilder_.clear();
        }
        errDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_response_descriptor;
      }

      public protocols.coinroom.join.response getDefaultInstanceForType() {
        return protocols.coinroom.join.response.getDefaultInstance();
      }

      public protocols.coinroom.join.response build() {
        protocols.coinroom.join.response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.response buildPartial() {
        protocols.coinroom.join.response result = new protocols.coinroom.join.response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (roomBuilder_ == null) {
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.selfSeatId_ = selfSeatId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.selfRole_ = selfRole_;
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            player_ = java.util.Collections.unmodifiableList(player_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.errDesc_ = errDesc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.response) {
          return mergeFrom((protocols.coinroom.join.response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.response other) {
        if (other == protocols.coinroom.join.response.getDefaultInstance()) return this;
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasRoom()) {
          mergeRoom(other.getRoom());
        }
        if (other.hasSelfSeatId()) {
          setSelfSeatId(other.getSelfSeatId());
        }
        if (other.hasSelfRole()) {
          setSelfRole(other.getSelfRole());
        }
        if (playerBuilder_ == null) {
          if (!other.player_.isEmpty()) {
            if (player_.isEmpty()) {
              player_ = other.player_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayerIsMutable();
              player_.addAll(other.player_);
            }
            onChanged();
          }
        } else {
          if (!other.player_.isEmpty()) {
            if (playerBuilder_.isEmpty()) {
              playerBuilder_.dispose();
              playerBuilder_ = null;
              player_ = other.player_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPlayerFieldBuilder() : null;
            } else {
              playerBuilder_.addAllMessages(other.player_);
            }
          }
        }
        if (other.hasErrDesc()) {
          bitField0_ |= 0x00000020;
          errDesc_ = other.errDesc_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasError()) {
          return false;
        }
        if (!hasRoom()) {
          return false;
        }
        if (!hasSelfSeatId()) {
          return false;
        }
        if (!hasSelfRole()) {
          return false;
        }
        if (!getRoom().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getPlayerCount(); i++) {
          if (!getPlayer(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int error_ ;
      /**
       * <pre>
       * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public int getError() {
        return error_;
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public Builder setError(int value) {
        bitField0_ |= 0x00000001;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误代码，0=成功 1=房间号不存在(join) 2=金币太少 3=已有游戏进行中，直接加入原游戏房间 4=没有合适的房间(quickjoin) 5=密码不正确
       * </pre>
       *
       * <code>required sint32 error = 1;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = 0;
        onChanged();
        return this;
      }

      private protocols.coinroom.join.room_t room_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.join.room_t, protocols.coinroom.join.room_t.Builder, protocols.coinroom.join.room_tOrBuilder> roomBuilder_;
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public boolean hasRoom() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public protocols.coinroom.join.room_t getRoom() {
        if (roomBuilder_ == null) {
          return room_ == null ? protocols.coinroom.join.room_t.getDefaultInstance() : room_;
        } else {
          return roomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public Builder setRoom(protocols.coinroom.join.room_t value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          room_ = value;
          onChanged();
        } else {
          roomBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public Builder setRoom(
          protocols.coinroom.join.room_t.Builder builderForValue) {
        if (roomBuilder_ == null) {
          room_ = builderForValue.build();
          onChanged();
        } else {
          roomBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public Builder mergeRoom(protocols.coinroom.join.room_t value) {
        if (roomBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              room_ != null &&
              room_ != protocols.coinroom.join.room_t.getDefaultInstance()) {
            room_ =
              protocols.coinroom.join.room_t.newBuilder(room_).mergeFrom(value).buildPartial();
          } else {
            room_ = value;
          }
          onChanged();
        } else {
          roomBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = null;
          onChanged();
        } else {
          roomBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public protocols.coinroom.join.room_t.Builder getRoomBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      public protocols.coinroom.join.room_tOrBuilder getRoomOrBuilder() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilder();
        } else {
          return room_ == null ?
              protocols.coinroom.join.room_t.getDefaultInstance() : room_;
        }
      }
      /**
       * <pre>
       * 加入的房间信息
       * </pre>
       *
       * <code>required .room_t room = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.join.room_t, protocols.coinroom.join.room_t.Builder, protocols.coinroom.join.room_tOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocols.coinroom.join.room_t, protocols.coinroom.join.room_t.Builder, protocols.coinroom.join.room_tOrBuilder>(
                  getRoom(),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }

      private int selfSeatId_ ;
      /**
       * <pre>
       * 用户座位号
       * </pre>
       *
       * <code>required uint32 selfSeatId = 3;</code>
       */
      public boolean hasSelfSeatId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 用户座位号
       * </pre>
       *
       * <code>required uint32 selfSeatId = 3;</code>
       */
      public int getSelfSeatId() {
        return selfSeatId_;
      }
      /**
       * <pre>
       * 用户座位号
       * </pre>
       *
       * <code>required uint32 selfSeatId = 3;</code>
       */
      public Builder setSelfSeatId(int value) {
        bitField0_ |= 0x00000004;
        selfSeatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户座位号
       * </pre>
       *
       * <code>required uint32 selfSeatId = 3;</code>
       */
      public Builder clearSelfSeatId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        selfSeatId_ = 0;
        onChanged();
        return this;
      }

      private int selfRole_ = 0;
      /**
       * <pre>
       * 用户成功加入的角色
       * </pre>
       *
       * <code>required .user_role selfRole = 4;</code>
       */
      public boolean hasSelfRole() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 用户成功加入的角色
       * </pre>
       *
       * <code>required .user_role selfRole = 4;</code>
       */
      public protocols.coinroom.common.user_role getSelfRole() {
        protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(selfRole_);
        return result == null ? protocols.coinroom.common.user_role.player : result;
      }
      /**
       * <pre>
       * 用户成功加入的角色
       * </pre>
       *
       * <code>required .user_role selfRole = 4;</code>
       */
      public Builder setSelfRole(protocols.coinroom.common.user_role value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        selfRole_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户成功加入的角色
       * </pre>
       *
       * <code>required .user_role selfRole = 4;</code>
       */
      public Builder clearSelfRole() {
        bitField0_ = (bitField0_ & ~0x00000008);
        selfRole_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocols.coinroom.join.player_info> player_ =
        java.util.Collections.emptyList();
      private void ensurePlayerIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          player_ = new java.util.ArrayList<protocols.coinroom.join.player_info>(player_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocols.coinroom.join.player_info, protocols.coinroom.join.player_info.Builder, protocols.coinroom.join.player_infoOrBuilder> playerBuilder_;

      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public java.util.List<protocols.coinroom.join.player_info> getPlayerList() {
        if (playerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(player_);
        } else {
          return playerBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public int getPlayerCount() {
        if (playerBuilder_ == null) {
          return player_.size();
        } else {
          return playerBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public protocols.coinroom.join.player_info getPlayer(int index) {
        if (playerBuilder_ == null) {
          return player_.get(index);
        } else {
          return playerBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder setPlayer(
          int index, protocols.coinroom.join.player_info value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.set(index, value);
          onChanged();
        } else {
          playerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder setPlayer(
          int index, protocols.coinroom.join.player_info.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder addPlayer(protocols.coinroom.join.player_info value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.add(value);
          onChanged();
        } else {
          playerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder addPlayer(
          int index, protocols.coinroom.join.player_info value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerIsMutable();
          player_.add(index, value);
          onChanged();
        } else {
          playerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder addPlayer(
          protocols.coinroom.join.player_info.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.add(builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder addPlayer(
          int index, protocols.coinroom.join.player_info.Builder builderForValue) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder addAllPlayer(
          java.lang.Iterable<? extends protocols.coinroom.join.player_info> values) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, player_);
          onChanged();
        } else {
          playerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public Builder removePlayer(int index) {
        if (playerBuilder_ == null) {
          ensurePlayerIsMutable();
          player_.remove(index);
          onChanged();
        } else {
          playerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public protocols.coinroom.join.player_info.Builder getPlayerBuilder(
          int index) {
        return getPlayerFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public protocols.coinroom.join.player_infoOrBuilder getPlayerOrBuilder(
          int index) {
        if (playerBuilder_ == null) {
          return player_.get(index);  } else {
          return playerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public java.util.List<? extends protocols.coinroom.join.player_infoOrBuilder> 
           getPlayerOrBuilderList() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(player_);
        }
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public protocols.coinroom.join.player_info.Builder addPlayerBuilder() {
        return getPlayerFieldBuilder().addBuilder(
            protocols.coinroom.join.player_info.getDefaultInstance());
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public protocols.coinroom.join.player_info.Builder addPlayerBuilder(
          int index) {
        return getPlayerFieldBuilder().addBuilder(
            index, protocols.coinroom.join.player_info.getDefaultInstance());
      }
      /**
       * <pre>
       * 玩家的头像等信息(包括自己)
       * </pre>
       *
       * <code>repeated .player_info player = 5;</code>
       */
      public java.util.List<protocols.coinroom.join.player_info.Builder> 
           getPlayerBuilderList() {
        return getPlayerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocols.coinroom.join.player_info, protocols.coinroom.join.player_info.Builder, protocols.coinroom.join.player_infoOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocols.coinroom.join.player_info, protocols.coinroom.join.player_info.Builder, protocols.coinroom.join.player_infoOrBuilder>(
                  player_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private java.lang.Object errDesc_ = "";
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public boolean hasErrDesc() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public java.lang.String getErrDesc() {
        java.lang.Object ref = errDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            errDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public com.google.protobuf.ByteString
          getErrDescBytes() {
        java.lang.Object ref = errDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          errDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public Builder setErrDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        errDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public Builder clearErrDesc() {
        bitField0_ = (bitField0_ & ~0x00000020);
        errDesc_ = getDefaultInstance().getErrDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 错误描述
       * </pre>
       *
       * <code>optional string errDesc = 6;</code>
       */
      public Builder setErrDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        errDesc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:response)
    }

    // @@protoc_insertion_point(class_scope:response)
    private static final protocols.coinroom.join.response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.response();
    }

    public static protocols.coinroom.join.response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<response>
        PARSER = new com.google.protobuf.AbstractParser<response>() {
      public response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<response> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface join_notifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:join_notify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    boolean hasJoinUser();
    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    protocols.coinroom.common.user_info getJoinUser();
    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    protocols.coinroom.common.user_infoOrBuilder getJoinUserOrBuilder();

    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 2;</code>
     */
    boolean hasRole();
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 2;</code>
     */
    protocols.coinroom.common.user_role getRole();

    /**
     * <pre>
     * 如果是player则有座位号，audience为0
     * </pre>
     *
     * <code>optional uint32 seatId = 3;</code>
     */
    boolean hasSeatId();
    /**
     * <pre>
     * 如果是player则有座位号，audience为0
     * </pre>
     *
     * <code>optional uint32 seatId = 3;</code>
     */
    int getSeatId();
  }
  /**
   * <pre>
   * 房间内广播 CMD 0x23
   * </pre>
   *
   * Protobuf type {@code join_notify}
   */
  public  static final class join_notify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:join_notify)
      join_notifyOrBuilder {
    // Use join_notify.newBuilder() to construct.
    private join_notify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private join_notify() {
      role_ = 0;
      seatId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private join_notify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocols.coinroom.common.user_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = joinUser_.toBuilder();
              }
              joinUser_ = input.readMessage(protocols.coinroom.common.user_info.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(joinUser_);
                joinUser_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.user_role value = protocols.coinroom.common.user_role.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                role_ = rawValue;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seatId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_join_notify_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_join_notify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.join_notify.class, protocols.coinroom.join.join_notify.Builder.class);
    }

    private int bitField0_;
    public static final int JOINUSER_FIELD_NUMBER = 1;
    private protocols.coinroom.common.user_info joinUser_;
    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    public boolean hasJoinUser() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    public protocols.coinroom.common.user_info getJoinUser() {
      return joinUser_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : joinUser_;
    }
    /**
     * <pre>
     * 加入者信息
     * </pre>
     *
     * <code>required .user_info joinUser = 1;</code>
     */
    public protocols.coinroom.common.user_infoOrBuilder getJoinUserOrBuilder() {
      return joinUser_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : joinUser_;
    }

    public static final int ROLE_FIELD_NUMBER = 2;
    private int role_;
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 2;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 2;</code>
     */
    public protocols.coinroom.common.user_role getRole() {
      protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(role_);
      return result == null ? protocols.coinroom.common.user_role.player : result;
    }

    public static final int SEATID_FIELD_NUMBER = 3;
    private int seatId_;
    /**
     * <pre>
     * 如果是player则有座位号，audience为0
     * </pre>
     *
     * <code>optional uint32 seatId = 3;</code>
     */
    public boolean hasSeatId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 如果是player则有座位号，audience为0
     * </pre>
     *
     * <code>optional uint32 seatId = 3;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasJoinUser()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRole()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getJoinUser());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, role_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, seatId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getJoinUser());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, role_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, seatId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.join_notify)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.join_notify other = (protocols.coinroom.join.join_notify) obj;

      boolean result = true;
      result = result && (hasJoinUser() == other.hasJoinUser());
      if (hasJoinUser()) {
        result = result && getJoinUser()
            .equals(other.getJoinUser());
      }
      result = result && (hasRole() == other.hasRole());
      if (hasRole()) {
        result = result && role_ == other.role_;
      }
      result = result && (hasSeatId() == other.hasSeatId());
      if (hasSeatId()) {
        result = result && (getSeatId()
            == other.getSeatId());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasJoinUser()) {
        hash = (37 * hash) + JOINUSER_FIELD_NUMBER;
        hash = (53 * hash) + getJoinUser().hashCode();
      }
      if (hasRole()) {
        hash = (37 * hash) + ROLE_FIELD_NUMBER;
        hash = (53 * hash) + role_;
      }
      if (hasSeatId()) {
        hash = (37 * hash) + SEATID_FIELD_NUMBER;
        hash = (53 * hash) + getSeatId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.join_notify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.join_notify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.join_notify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.join_notify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.join_notify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.join_notify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.join_notify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.join_notify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.join_notify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.join_notify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.join_notify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 房间内广播 CMD 0x23
     * </pre>
     *
     * Protobuf type {@code join_notify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:join_notify)
        protocols.coinroom.join.join_notifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_join_notify_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_join_notify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.join_notify.class, protocols.coinroom.join.join_notify.Builder.class);
      }

      // Construct using protocols.coinroom.join.join_notify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getJoinUserFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (joinUserBuilder_ == null) {
          joinUser_ = null;
        } else {
          joinUserBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        seatId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_join_notify_descriptor;
      }

      public protocols.coinroom.join.join_notify getDefaultInstanceForType() {
        return protocols.coinroom.join.join_notify.getDefaultInstance();
      }

      public protocols.coinroom.join.join_notify build() {
        protocols.coinroom.join.join_notify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.join_notify buildPartial() {
        protocols.coinroom.join.join_notify result = new protocols.coinroom.join.join_notify(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (joinUserBuilder_ == null) {
          result.joinUser_ = joinUser_;
        } else {
          result.joinUser_ = joinUserBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.role_ = role_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seatId_ = seatId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.join_notify) {
          return mergeFrom((protocols.coinroom.join.join_notify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.join_notify other) {
        if (other == protocols.coinroom.join.join_notify.getDefaultInstance()) return this;
        if (other.hasJoinUser()) {
          mergeJoinUser(other.getJoinUser());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (other.hasSeatId()) {
          setSeatId(other.getSeatId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJoinUser()) {
          return false;
        }
        if (!hasRole()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.join_notify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.join_notify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocols.coinroom.common.user_info joinUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder> joinUserBuilder_;
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public boolean hasJoinUser() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public protocols.coinroom.common.user_info getJoinUser() {
        if (joinUserBuilder_ == null) {
          return joinUser_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : joinUser_;
        } else {
          return joinUserBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public Builder setJoinUser(protocols.coinroom.common.user_info value) {
        if (joinUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          joinUser_ = value;
          onChanged();
        } else {
          joinUserBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public Builder setJoinUser(
          protocols.coinroom.common.user_info.Builder builderForValue) {
        if (joinUserBuilder_ == null) {
          joinUser_ = builderForValue.build();
          onChanged();
        } else {
          joinUserBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public Builder mergeJoinUser(protocols.coinroom.common.user_info value) {
        if (joinUserBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              joinUser_ != null &&
              joinUser_ != protocols.coinroom.common.user_info.getDefaultInstance()) {
            joinUser_ =
              protocols.coinroom.common.user_info.newBuilder(joinUser_).mergeFrom(value).buildPartial();
          } else {
            joinUser_ = value;
          }
          onChanged();
        } else {
          joinUserBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public Builder clearJoinUser() {
        if (joinUserBuilder_ == null) {
          joinUser_ = null;
          onChanged();
        } else {
          joinUserBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public protocols.coinroom.common.user_info.Builder getJoinUserBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getJoinUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      public protocols.coinroom.common.user_infoOrBuilder getJoinUserOrBuilder() {
        if (joinUserBuilder_ != null) {
          return joinUserBuilder_.getMessageOrBuilder();
        } else {
          return joinUser_ == null ?
              protocols.coinroom.common.user_info.getDefaultInstance() : joinUser_;
        }
      }
      /**
       * <pre>
       * 加入者信息
       * </pre>
       *
       * <code>required .user_info joinUser = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder> 
          getJoinUserFieldBuilder() {
        if (joinUserBuilder_ == null) {
          joinUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder>(
                  getJoinUser(),
                  getParentForChildren(),
                  isClean());
          joinUser_ = null;
        }
        return joinUserBuilder_;
      }

      private int role_ = 0;
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 2;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 2;</code>
       */
      public protocols.coinroom.common.user_role getRole() {
        protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(role_);
        return result == null ? protocols.coinroom.common.user_role.player : result;
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 2;</code>
       */
      public Builder setRole(protocols.coinroom.common.user_role value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 2;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        onChanged();
        return this;
      }

      private int seatId_ ;
      /**
       * <pre>
       * 如果是player则有座位号，audience为0
       * </pre>
       *
       * <code>optional uint32 seatId = 3;</code>
       */
      public boolean hasSeatId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 如果是player则有座位号，audience为0
       * </pre>
       *
       * <code>optional uint32 seatId = 3;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       * 如果是player则有座位号，audience为0
       * </pre>
       *
       * <code>optional uint32 seatId = 3;</code>
       */
      public Builder setSeatId(int value) {
        bitField0_ |= 0x00000004;
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 如果是player则有座位号，audience为0
       * </pre>
       *
       * <code>optional uint32 seatId = 3;</code>
       */
      public Builder clearSeatId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seatId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:join_notify)
    }

    // @@protoc_insertion_point(class_scope:join_notify)
    private static final protocols.coinroom.join.join_notify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.join_notify();
    }

    public static protocols.coinroom.join.join_notify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<join_notify>
        PARSER = new com.google.protobuf.AbstractParser<join_notify>() {
      public join_notify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new join_notify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<join_notify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<join_notify> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.join_notify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface room_tOrBuilder extends
      // @@protoc_insertion_point(interface_extends:room_t)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    protocols.coinroom.common.room_info getConfig();
    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    protocols.coinroom.common.room_infoOrBuilder getConfigOrBuilder();

    /**
     * <pre>
     * 房间当前阶段
     * </pre>
     *
     * <code>required .room_stage stage = 2;</code>
     */
    boolean hasStage();
    /**
     * <pre>
     * 房间当前阶段
     * </pre>
     *
     * <code>required .room_stage stage = 2;</code>
     */
    protocols.coinroom.common.room_stage getStage();

    /**
     * <pre>
     * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
     * </pre>
     *
     * <code>required sint32 countDown = 3;</code>
     */
    boolean hasCountDown();
    /**
     * <pre>
     * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
     * </pre>
     *
     * <code>required sint32 countDown = 3;</code>
     */
    int getCountDown();
  }
  /**
   * Protobuf type {@code room_t}
   */
  public  static final class room_t extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:room_t)
      room_tOrBuilder {
    // Use room_t.newBuilder() to construct.
    private room_t(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private room_t() {
      stage_ = 0;
      countDown_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private room_t(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocols.coinroom.common.room_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(protocols.coinroom.common.room_info.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.room_stage value = protocols.coinroom.common.room_stage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                stage_ = rawValue;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              countDown_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_room_t_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_room_t_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.room_t.class, protocols.coinroom.join.room_t.Builder.class);
    }

    private int bitField0_;
    public static final int CONFIG_FIELD_NUMBER = 1;
    private protocols.coinroom.common.room_info config_;
    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    public protocols.coinroom.common.room_info getConfig() {
      return config_ == null ? protocols.coinroom.common.room_info.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * 房间信息
     * </pre>
     *
     * <code>required .room_info config = 1;</code>
     */
    public protocols.coinroom.common.room_infoOrBuilder getConfigOrBuilder() {
      return config_ == null ? protocols.coinroom.common.room_info.getDefaultInstance() : config_;
    }

    public static final int STAGE_FIELD_NUMBER = 2;
    private int stage_;
    /**
     * <pre>
     * 房间当前阶段
     * </pre>
     *
     * <code>required .room_stage stage = 2;</code>
     */
    public boolean hasStage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 房间当前阶段
     * </pre>
     *
     * <code>required .room_stage stage = 2;</code>
     */
    public protocols.coinroom.common.room_stage getStage() {
      protocols.coinroom.common.room_stage result = protocols.coinroom.common.room_stage.valueOf(stage_);
      return result == null ? protocols.coinroom.common.room_stage.init : result;
    }

    public static final int COUNTDOWN_FIELD_NUMBER = 3;
    private int countDown_;
    /**
     * <pre>
     * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
     * </pre>
     *
     * <code>required sint32 countDown = 3;</code>
     */
    public boolean hasCountDown() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
     * </pre>
     *
     * <code>required sint32 countDown = 3;</code>
     */
    public int getCountDown() {
      return countDown_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountDown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getConfig());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, stage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, countDown_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, stage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, countDown_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.room_t)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.room_t other = (protocols.coinroom.join.room_t) obj;

      boolean result = true;
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && (hasStage() == other.hasStage());
      if (hasStage()) {
        result = result && stage_ == other.stage_;
      }
      result = result && (hasCountDown() == other.hasCountDown());
      if (hasCountDown()) {
        result = result && (getCountDown()
            == other.getCountDown());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      if (hasStage()) {
        hash = (37 * hash) + STAGE_FIELD_NUMBER;
        hash = (53 * hash) + stage_;
      }
      if (hasCountDown()) {
        hash = (37 * hash) + COUNTDOWN_FIELD_NUMBER;
        hash = (53 * hash) + getCountDown();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.room_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.room_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.room_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.room_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.room_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.room_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.room_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.room_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.room_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.room_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.room_t prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code room_t}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:room_t)
        protocols.coinroom.join.room_tOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_room_t_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_room_t_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.room_t.class, protocols.coinroom.join.room_t.Builder.class);
      }

      // Construct using protocols.coinroom.join.room_t.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        stage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        countDown_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_room_t_descriptor;
      }

      public protocols.coinroom.join.room_t getDefaultInstanceForType() {
        return protocols.coinroom.join.room_t.getDefaultInstance();
      }

      public protocols.coinroom.join.room_t build() {
        protocols.coinroom.join.room_t result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.room_t buildPartial() {
        protocols.coinroom.join.room_t result = new protocols.coinroom.join.room_t(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stage_ = stage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.countDown_ = countDown_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.room_t) {
          return mergeFrom((protocols.coinroom.join.room_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.room_t other) {
        if (other == protocols.coinroom.join.room_t.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasStage()) {
          setStage(other.getStage());
        }
        if (other.hasCountDown()) {
          setCountDown(other.getCountDown());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasConfig()) {
          return false;
        }
        if (!hasStage()) {
          return false;
        }
        if (!hasCountDown()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.room_t parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.room_t) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocols.coinroom.common.room_info config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.room_info, protocols.coinroom.common.room_info.Builder, protocols.coinroom.common.room_infoOrBuilder> configBuilder_;
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public protocols.coinroom.common.room_info getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? protocols.coinroom.common.room_info.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public Builder setConfig(protocols.coinroom.common.room_info value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public Builder setConfig(
          protocols.coinroom.common.room_info.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public Builder mergeConfig(protocols.coinroom.common.room_info value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              config_ != null &&
              config_ != protocols.coinroom.common.room_info.getDefaultInstance()) {
            config_ =
              protocols.coinroom.common.room_info.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          configBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public protocols.coinroom.common.room_info.Builder getConfigBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      public protocols.coinroom.common.room_infoOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              protocols.coinroom.common.room_info.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * 房间信息
       * </pre>
       *
       * <code>required .room_info config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.room_info, protocols.coinroom.common.room_info.Builder, protocols.coinroom.common.room_infoOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocols.coinroom.common.room_info, protocols.coinroom.common.room_info.Builder, protocols.coinroom.common.room_infoOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private int stage_ = 0;
      /**
       * <pre>
       * 房间当前阶段
       * </pre>
       *
       * <code>required .room_stage stage = 2;</code>
       */
      public boolean hasStage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 房间当前阶段
       * </pre>
       *
       * <code>required .room_stage stage = 2;</code>
       */
      public protocols.coinroom.common.room_stage getStage() {
        protocols.coinroom.common.room_stage result = protocols.coinroom.common.room_stage.valueOf(stage_);
        return result == null ? protocols.coinroom.common.room_stage.init : result;
      }
      /**
       * <pre>
       * 房间当前阶段
       * </pre>
       *
       * <code>required .room_stage stage = 2;</code>
       */
      public Builder setStage(protocols.coinroom.common.room_stage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        stage_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间当前阶段
       * </pre>
       *
       * <code>required .room_stage stage = 2;</code>
       */
      public Builder clearStage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stage_ = 0;
        onChanged();
        return this;
      }

      private int countDown_ ;
      /**
       * <pre>
       * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
       * </pre>
       *
       * <code>required sint32 countDown = 3;</code>
       */
      public boolean hasCountDown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
       * </pre>
       *
       * <code>required sint32 countDown = 3;</code>
       */
      public int getCountDown() {
        return countDown_;
      }
      /**
       * <pre>
       * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
       * </pre>
       *
       * <code>required sint32 countDown = 3;</code>
       */
      public Builder setCountDown(int value) {
        bitField0_ |= 0x00000004;
        countDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 各阶段倒计时剩余时间，毫秒为单位，-1代表无穷，只有init stage是-1
       * </pre>
       *
       * <code>required sint32 countDown = 3;</code>
       */
      public Builder clearCountDown() {
        bitField0_ = (bitField0_ & ~0x00000004);
        countDown_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:room_t)
    }

    // @@protoc_insertion_point(class_scope:room_t)
    private static final protocols.coinroom.join.room_t DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.room_t();
    }

    public static protocols.coinroom.join.room_t getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<room_t>
        PARSER = new com.google.protobuf.AbstractParser<room_t>() {
      public room_t parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new room_t(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<room_t> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<room_t> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.room_t getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface player_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:player_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    boolean hasSeatId();
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    int getSeatId();

    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    boolean hasPlayer();
    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    protocols.coinroom.common.user_info getPlayer();
    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    protocols.coinroom.common.user_infoOrBuilder getPlayerOrBuilder();

    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 3;</code>
     */
    boolean hasRole();
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 3;</code>
     */
    protocols.coinroom.common.user_role getRole();

    /**
     * <pre>
     * 抢庄倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 grab = 4;</code>
     */
    boolean hasGrab();
    /**
     * <pre>
     * 抢庄倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 grab = 4;</code>
     */
    int getGrab();

    /**
     * <pre>
     * 下注倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 bet = 5;</code>
     */
    boolean hasBet();
    /**
     * <pre>
     * 下注倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 bet = 5;</code>
     */
    int getBet();

    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    java.util.List<java.lang.Integer> getHandList();
    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    int getHandCount();
    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    int getHand(int index);

    /**
     * <pre>
     * 手牌牌型(断线重连)
     * </pre>
     *
     * <code>optional uint32 cardType = 7;</code>
     */
    boolean hasCardType();
    /**
     * <pre>
     * 手牌牌型(断线重连)
     * </pre>
     *
     * <code>optional uint32 cardType = 7;</code>
     */
    int getCardType();

    /**
     * <pre>
     * 单局分数(断线重连)
     * </pre>
     *
     * <code>optional sint32 score = 8;</code>
     */
    boolean hasScore();
    /**
     * <pre>
     * 单局分数(断线重连)
     * </pre>
     *
     * <code>optional sint32 score = 8;</code>
     */
    int getScore();

    /**
     * <pre>
     * 单局抽水(断线重连)
     * </pre>
     *
     * <code>optional uint32 draw = 9;</code>
     */
    boolean hasDraw();
    /**
     * <pre>
     * 单局抽水(断线重连)
     * </pre>
     *
     * <code>optional uint32 draw = 9;</code>
     */
    int getDraw();
  }
  /**
   * Protobuf type {@code player_info}
   */
  public  static final class player_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:player_info)
      player_infoOrBuilder {
    // Use player_info.newBuilder() to construct.
    private player_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private player_info() {
      seatId_ = 0;
      role_ = 0;
      grab_ = 0;
      bet_ = 0;
      hand_ = java.util.Collections.emptyList();
      cardType_ = 0;
      score_ = 0;
      draw_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private player_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatId_ = input.readUInt32();
              break;
            }
            case 18: {
              protocols.coinroom.common.user_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(protocols.coinroom.common.user_info.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              protocols.coinroom.common.user_role value = protocols.coinroom.common.user_role.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                role_ = rawValue;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              grab_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bet_ = input.readUInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              hand_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                hand_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                hand_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              cardType_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              score_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              draw_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.join.internal_static_player_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.join.internal_static_player_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.join.player_info.class, protocols.coinroom.join.player_info.Builder.class);
    }

    private int bitField0_;
    public static final int SEATID_FIELD_NUMBER = 1;
    private int seatId_;
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public boolean hasSeatId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 座位号
     * </pre>
     *
     * <code>required uint32 seatId = 1;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int PLAYER_FIELD_NUMBER = 2;
    private protocols.coinroom.common.user_info player_;
    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    public protocols.coinroom.common.user_info getPlayer() {
      return player_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : player_;
    }
    /**
     * <pre>
     * 玩家信息
     * </pre>
     *
     * <code>required .user_info player = 2;</code>
     */
    public protocols.coinroom.common.user_infoOrBuilder getPlayerOrBuilder() {
      return player_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : player_;
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 3;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 用户角色
     * </pre>
     *
     * <code>required .user_role role = 3;</code>
     */
    public protocols.coinroom.common.user_role getRole() {
      protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(role_);
      return result == null ? protocols.coinroom.common.user_role.player : result;
    }

    public static final int GRAB_FIELD_NUMBER = 4;
    private int grab_;
    /**
     * <pre>
     * 抢庄倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 grab = 4;</code>
     */
    public boolean hasGrab() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 抢庄倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 grab = 4;</code>
     */
    public int getGrab() {
      return grab_;
    }

    public static final int BET_FIELD_NUMBER = 5;
    private int bet_;
    /**
     * <pre>
     * 下注倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 bet = 5;</code>
     */
    public boolean hasBet() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 下注倍数(断线重连)
     * </pre>
     *
     * <code>optional uint32 bet = 5;</code>
     */
    public int getBet() {
      return bet_;
    }

    public static final int HAND_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> hand_;
    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getHandList() {
      return hand_;
    }
    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    public int getHandCount() {
      return hand_.size();
    }
    /**
     * <pre>
     * 玩家已摊牌手牌(断线重连)
     * </pre>
     *
     * <code>repeated uint32 hand = 6;</code>
     */
    public int getHand(int index) {
      return hand_.get(index);
    }

    public static final int CARDTYPE_FIELD_NUMBER = 7;
    private int cardType_;
    /**
     * <pre>
     * 手牌牌型(断线重连)
     * </pre>
     *
     * <code>optional uint32 cardType = 7;</code>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 手牌牌型(断线重连)
     * </pre>
     *
     * <code>optional uint32 cardType = 7;</code>
     */
    public int getCardType() {
      return cardType_;
    }

    public static final int SCORE_FIELD_NUMBER = 8;
    private int score_;
    /**
     * <pre>
     * 单局分数(断线重连)
     * </pre>
     *
     * <code>optional sint32 score = 8;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 单局分数(断线重连)
     * </pre>
     *
     * <code>optional sint32 score = 8;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int DRAW_FIELD_NUMBER = 9;
    private int draw_;
    /**
     * <pre>
     * 单局抽水(断线重连)
     * </pre>
     *
     * <code>optional uint32 draw = 9;</code>
     */
    public boolean hasDraw() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 单局抽水(断线重连)
     * </pre>
     *
     * <code>optional uint32 draw = 9;</code>
     */
    public int getDraw() {
      return draw_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeatId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRole()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, seatId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getPlayer());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, grab_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, bet_);
      }
      for (int i = 0; i < hand_.size(); i++) {
        output.writeUInt32(6, hand_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, cardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, draw_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, seatId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPlayer());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, role_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, grab_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, bet_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hand_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(hand_.get(i));
        }
        size += dataSize;
        size += 1 * getHandList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, cardType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, draw_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.join.player_info)) {
        return super.equals(obj);
      }
      protocols.coinroom.join.player_info other = (protocols.coinroom.join.player_info) obj;

      boolean result = true;
      result = result && (hasSeatId() == other.hasSeatId());
      if (hasSeatId()) {
        result = result && (getSeatId()
            == other.getSeatId());
      }
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && getPlayer()
            .equals(other.getPlayer());
      }
      result = result && (hasRole() == other.hasRole());
      if (hasRole()) {
        result = result && role_ == other.role_;
      }
      result = result && (hasGrab() == other.hasGrab());
      if (hasGrab()) {
        result = result && (getGrab()
            == other.getGrab());
      }
      result = result && (hasBet() == other.hasBet());
      if (hasBet()) {
        result = result && (getBet()
            == other.getBet());
      }
      result = result && getHandList()
          .equals(other.getHandList());
      result = result && (hasCardType() == other.hasCardType());
      if (hasCardType()) {
        result = result && (getCardType()
            == other.getCardType());
      }
      result = result && (hasScore() == other.hasScore());
      if (hasScore()) {
        result = result && (getScore()
            == other.getScore());
      }
      result = result && (hasDraw() == other.hasDraw());
      if (hasDraw()) {
        result = result && (getDraw()
            == other.getDraw());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSeatId()) {
        hash = (37 * hash) + SEATID_FIELD_NUMBER;
        hash = (53 * hash) + getSeatId();
      }
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      if (hasRole()) {
        hash = (37 * hash) + ROLE_FIELD_NUMBER;
        hash = (53 * hash) + role_;
      }
      if (hasGrab()) {
        hash = (37 * hash) + GRAB_FIELD_NUMBER;
        hash = (53 * hash) + getGrab();
      }
      if (hasBet()) {
        hash = (37 * hash) + BET_FIELD_NUMBER;
        hash = (53 * hash) + getBet();
      }
      if (getHandCount() > 0) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHandList().hashCode();
      }
      if (hasCardType()) {
        hash = (37 * hash) + CARDTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getCardType();
      }
      if (hasScore()) {
        hash = (37 * hash) + SCORE_FIELD_NUMBER;
        hash = (53 * hash) + getScore();
      }
      if (hasDraw()) {
        hash = (37 * hash) + DRAW_FIELD_NUMBER;
        hash = (53 * hash) + getDraw();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.join.player_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.player_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.player_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.join.player_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.join.player_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.player_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.player_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.player_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.join.player_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.join.player_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.join.player_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code player_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:player_info)
        protocols.coinroom.join.player_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.join.internal_static_player_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.join.internal_static_player_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.join.player_info.class, protocols.coinroom.join.player_info.Builder.class);
      }

      // Construct using protocols.coinroom.join.player_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlayerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        seatId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerBuilder_ == null) {
          player_ = null;
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        grab_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        draw_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.join.internal_static_player_info_descriptor;
      }

      public protocols.coinroom.join.player_info getDefaultInstanceForType() {
        return protocols.coinroom.join.player_info.getDefaultInstance();
      }

      public protocols.coinroom.join.player_info build() {
        protocols.coinroom.join.player_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.join.player_info buildPartial() {
        protocols.coinroom.join.player_info result = new protocols.coinroom.join.player_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatId_ = seatId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.role_ = role_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.grab_ = grab_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bet_ = bet_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          hand_ = java.util.Collections.unmodifiableList(hand_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.hand_ = hand_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.draw_ = draw_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.join.player_info) {
          return mergeFrom((protocols.coinroom.join.player_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.join.player_info other) {
        if (other == protocols.coinroom.join.player_info.getDefaultInstance()) return this;
        if (other.hasSeatId()) {
          setSeatId(other.getSeatId());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (other.hasGrab()) {
          setGrab(other.getGrab());
        }
        if (other.hasBet()) {
          setBet(other.getBet());
        }
        if (!other.hand_.isEmpty()) {
          if (hand_.isEmpty()) {
            hand_ = other.hand_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHandIsMutable();
            hand_.addAll(other.hand_);
          }
          onChanged();
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasDraw()) {
          setDraw(other.getDraw());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeatId()) {
          return false;
        }
        if (!hasPlayer()) {
          return false;
        }
        if (!hasRole()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.join.player_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.join.player_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seatId_ ;
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public boolean hasSeatId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder setSeatId(int value) {
        bitField0_ |= 0x00000001;
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 座位号
       * </pre>
       *
       * <code>required uint32 seatId = 1;</code>
       */
      public Builder clearSeatId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatId_ = 0;
        onChanged();
        return this;
      }

      private protocols.coinroom.common.user_info player_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder> playerBuilder_;
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public protocols.coinroom.common.user_info getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? protocols.coinroom.common.user_info.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public Builder setPlayer(protocols.coinroom.common.user_info value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public Builder setPlayer(
          protocols.coinroom.common.user_info.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public Builder mergePlayer(protocols.coinroom.common.user_info value) {
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              player_ != null &&
              player_ != protocols.coinroom.common.user_info.getDefaultInstance()) {
            player_ =
              protocols.coinroom.common.user_info.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = null;
          onChanged();
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public protocols.coinroom.common.user_info.Builder getPlayerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      public protocols.coinroom.common.user_infoOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              protocols.coinroom.common.user_info.getDefaultInstance() : player_;
        }
      }
      /**
       * <pre>
       * 玩家信息
       * </pre>
       *
       * <code>required .user_info player = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocols.coinroom.common.user_info, protocols.coinroom.common.user_info.Builder, protocols.coinroom.common.user_infoOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private int role_ = 0;
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 3;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 3;</code>
       */
      public protocols.coinroom.common.user_role getRole() {
        protocols.coinroom.common.user_role result = protocols.coinroom.common.user_role.valueOf(role_);
        return result == null ? protocols.coinroom.common.user_role.player : result;
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 3;</code>
       */
      public Builder setRole(protocols.coinroom.common.user_role value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户角色
       * </pre>
       *
       * <code>required .user_role role = 3;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        role_ = 0;
        onChanged();
        return this;
      }

      private int grab_ ;
      /**
       * <pre>
       * 抢庄倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 grab = 4;</code>
       */
      public boolean hasGrab() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 抢庄倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 grab = 4;</code>
       */
      public int getGrab() {
        return grab_;
      }
      /**
       * <pre>
       * 抢庄倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 grab = 4;</code>
       */
      public Builder setGrab(int value) {
        bitField0_ |= 0x00000008;
        grab_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 抢庄倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 grab = 4;</code>
       */
      public Builder clearGrab() {
        bitField0_ = (bitField0_ & ~0x00000008);
        grab_ = 0;
        onChanged();
        return this;
      }

      private int bet_ ;
      /**
       * <pre>
       * 下注倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 bet = 5;</code>
       */
      public boolean hasBet() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * 下注倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 bet = 5;</code>
       */
      public int getBet() {
        return bet_;
      }
      /**
       * <pre>
       * 下注倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 bet = 5;</code>
       */
      public Builder setBet(int value) {
        bitField0_ |= 0x00000010;
        bet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 下注倍数(断线重连)
       * </pre>
       *
       * <code>optional uint32 bet = 5;</code>
       */
      public Builder clearBet() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bet_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> hand_ = java.util.Collections.emptyList();
      private void ensureHandIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          hand_ = new java.util.ArrayList<java.lang.Integer>(hand_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getHandList() {
        return java.util.Collections.unmodifiableList(hand_);
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public int getHandCount() {
        return hand_.size();
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public int getHand(int index) {
        return hand_.get(index);
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public Builder setHand(
          int index, int value) {
        ensureHandIsMutable();
        hand_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public Builder addHand(int value) {
        ensureHandIsMutable();
        hand_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public Builder addAllHand(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hand_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家已摊牌手牌(断线重连)
       * </pre>
       *
       * <code>repeated uint32 hand = 6;</code>
       */
      public Builder clearHand() {
        hand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int cardType_ ;
      /**
       * <pre>
       * 手牌牌型(断线重连)
       * </pre>
       *
       * <code>optional uint32 cardType = 7;</code>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * 手牌牌型(断线重连)
       * </pre>
       *
       * <code>optional uint32 cardType = 7;</code>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <pre>
       * 手牌牌型(断线重连)
       * </pre>
       *
       * <code>optional uint32 cardType = 7;</code>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000040;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 手牌牌型(断线重连)
       * </pre>
       *
       * <code>optional uint32 cardType = 7;</code>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cardType_ = 0;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <pre>
       * 单局分数(断线重连)
       * </pre>
       *
       * <code>optional sint32 score = 8;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * 单局分数(断线重连)
       * </pre>
       *
       * <code>optional sint32 score = 8;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <pre>
       * 单局分数(断线重连)
       * </pre>
       *
       * <code>optional sint32 score = 8;</code>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000080;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 单局分数(断线重连)
       * </pre>
       *
       * <code>optional sint32 score = 8;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000080);
        score_ = 0;
        onChanged();
        return this;
      }

      private int draw_ ;
      /**
       * <pre>
       * 单局抽水(断线重连)
       * </pre>
       *
       * <code>optional uint32 draw = 9;</code>
       */
      public boolean hasDraw() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * 单局抽水(断线重连)
       * </pre>
       *
       * <code>optional uint32 draw = 9;</code>
       */
      public int getDraw() {
        return draw_;
      }
      /**
       * <pre>
       * 单局抽水(断线重连)
       * </pre>
       *
       * <code>optional uint32 draw = 9;</code>
       */
      public Builder setDraw(int value) {
        bitField0_ |= 0x00000100;
        draw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 单局抽水(断线重连)
       * </pre>
       *
       * <code>optional uint32 draw = 9;</code>
       */
      public Builder clearDraw() {
        bitField0_ = (bitField0_ & ~0x00000100);
        draw_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:player_info)
    }

    // @@protoc_insertion_point(class_scope:player_info)
    private static final protocols.coinroom.join.player_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.join.player_info();
    }

    public static protocols.coinroom.join.player_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<player_info>
        PARSER = new com.google.protobuf.AbstractParser<player_info>() {
      public player_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new player_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<player_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<player_info> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.join.player_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_quickjoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_quickjoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_join_notify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_join_notify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_room_t_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_room_t_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_player_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_player_info_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023coinroom/join.proto\032\025coinroom/common.p" +
      "roto\"&\n\007request\022\016\n\006roomId\030\001 \002(\r\022\013\n\003pwd\030\002" +
      " \001(\t\"A\n\tquickjoin\022\030\n\004mode\030\001 \001(\0162\n.room_t" +
      "ype\022\032\n\005grade\030\002 \001(\0162\013.room_grade\"\221\001\n\010resp" +
      "onse\022\r\n\005error\030\001 \002(\021\022\025\n\004room\030\002 \002(\0132\007.room" +
      "_t\022\022\n\nselfSeatId\030\003 \002(\r\022\034\n\010selfRole\030\004 \002(\016" +
      "2\n.user_role\022\034\n\006player\030\005 \003(\0132\014.player_in" +
      "fo\022\017\n\007errDesc\030\006 \001(\t\"U\n\013join_notify\022\034\n\010jo" +
      "inUser\030\001 \002(\0132\n.user_info\022\030\n\004role\030\002 \002(\0162\n" +
      ".user_role\022\016\n\006seatId\030\003 \001(\r\"S\n\006room_t\022\032\n\006",
      "config\030\001 \002(\0132\n.room_info\022\032\n\005stage\030\002 \002(\0162" +
      "\013.room_stage\022\021\n\tcountDown\030\003 \002(\021\"\253\001\n\013play" +
      "er_info\022\016\n\006seatId\030\001 \002(\r\022\032\n\006player\030\002 \002(\0132" +
      "\n.user_info\022\030\n\004role\030\003 \002(\0162\n.user_role\022\014\n" +
      "\004grab\030\004 \001(\r\022\013\n\003bet\030\005 \001(\r\022\014\n\004hand\030\006 \003(\r\022\020" +
      "\n\010cardType\030\007 \001(\r\022\r\n\005score\030\010 \001(\021\022\014\n\004draw\030" +
      "\t \001(\rB\032\n\022protocols.coinroomB\004join"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocols.coinroom.common.getDescriptor(),
        }, assigner);
    internal_static_request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_request_descriptor,
        new java.lang.String[] { "RoomId", "Pwd", });
    internal_static_quickjoin_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_quickjoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_quickjoin_descriptor,
        new java.lang.String[] { "Mode", "Grade", });
    internal_static_response_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_response_descriptor,
        new java.lang.String[] { "Error", "Room", "SelfSeatId", "SelfRole", "Player", "ErrDesc", });
    internal_static_join_notify_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_join_notify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_join_notify_descriptor,
        new java.lang.String[] { "JoinUser", "Role", "SeatId", });
    internal_static_room_t_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_room_t_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_room_t_descriptor,
        new java.lang.String[] { "Config", "Stage", "CountDown", });
    internal_static_player_info_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_player_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_player_info_descriptor,
        new java.lang.String[] { "SeatId", "Player", "Role", "Grab", "Bet", "Hand", "CardType", "Score", "Draw", });
    protocols.coinroom.common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
