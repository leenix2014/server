// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coinroom/common.proto

package protocols.coinroom;

public final class common {
  private common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code room_type}
   */
  public enum room_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 无庄模式
     * </pre>
     *
     * <code>dealer_none = 0;</code>
     */
    dealer_none(0),
    /**
     * <pre>
     * 抢庄模式
     * </pre>
     *
     * <code>dealer_grab = 1;</code>
     */
    dealer_grab(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 无庄模式
     * </pre>
     *
     * <code>dealer_none = 0;</code>
     */
    public static final int dealer_none_VALUE = 0;
    /**
     * <pre>
     * 抢庄模式
     * </pre>
     *
     * <code>dealer_grab = 1;</code>
     */
    public static final int dealer_grab_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static room_type valueOf(int value) {
      return forNumber(value);
    }

    public static room_type forNumber(int value) {
      switch (value) {
        case 0: return dealer_none;
        case 1: return dealer_grab;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<room_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        room_type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<room_type>() {
            public room_type findValueByNumber(int number) {
              return room_type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocols.coinroom.common.getDescriptor().getEnumTypes().get(0);
    }

    private static final room_type[] VALUES = values();

    public static room_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private room_type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:room_type)
  }

  /**
   * Protobuf enum {@code room_grade}
   */
  public enum room_grade
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 初级场
     * </pre>
     *
     * <code>primary = 0;</code>
     */
    primary(0),
    /**
     * <pre>
     * 中级场
     * </pre>
     *
     * <code>junior = 1;</code>
     */
    junior(1),
    /**
     * <pre>
     * 高级场
     * </pre>
     *
     * <code>senior = 2;</code>
     */
    senior(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 初级场
     * </pre>
     *
     * <code>primary = 0;</code>
     */
    public static final int primary_VALUE = 0;
    /**
     * <pre>
     * 中级场
     * </pre>
     *
     * <code>junior = 1;</code>
     */
    public static final int junior_VALUE = 1;
    /**
     * <pre>
     * 高级场
     * </pre>
     *
     * <code>senior = 2;</code>
     */
    public static final int senior_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static room_grade valueOf(int value) {
      return forNumber(value);
    }

    public static room_grade forNumber(int value) {
      switch (value) {
        case 0: return primary;
        case 1: return junior;
        case 2: return senior;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<room_grade>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        room_grade> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<room_grade>() {
            public room_grade findValueByNumber(int number) {
              return room_grade.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocols.coinroom.common.getDescriptor().getEnumTypes().get(1);
    }

    private static final room_grade[] VALUES = values();

    public static room_grade valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private room_grade(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:room_grade)
  }

  /**
   * Protobuf enum {@code room_stage}
   */
  public enum room_stage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 小于等于一个玩家时，等待阶段，无倒计时
     * </pre>
     *
     * <code>init = 0;</code>
     */
    init(0),
    /**
     * <pre>
     * 准备倒计时阶段，结束时开始抢庄或发牌
     * </pre>
     *
     * <code>ready_ing = 1;</code>
     */
    ready_ing(1),
    /**
     * <pre>
     * 游戏开始，播放开始动画
     * </pre>
     *
     * <code>start_ing = 2;</code>
     */
    start_ing(2),
    /**
     * <pre>
     * 抢庄倒计时阶段，结束时开始下注
     * </pre>
     *
     * <code>grab_ing = 3;</code>
     */
    grab_ing(3),
    /**
     * <pre>
     * 确认庄家倒计时，客户端可添加动画
     * </pre>
     *
     * <code>confirm_banker_ing = 4;</code>
     */
    confirm_banker_ing(4),
    /**
     * <pre>
     * 下注倒计时阶段，结束时开始发牌，然后进入摊牌倒计时
     * </pre>
     *
     * <code>bet_ing = 5;</code>
     */
    bet_ing(5),
    /**
     * <pre>
     * 摊牌倒计时阶段，结束时开始返回结果，然后进入回顾倒计时
     * </pre>
     *
     * <code>showhand_ing = 6;</code>
     */
    showhand_ing(6),
    /**
     * <pre>
     * 回顾倒计时阶段，结束时开始准备倒计时，如小于等于一个玩家，返回init阶段
     * </pre>
     *
     * <code>over_ing = 7;</code>
     */
    over_ing(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 小于等于一个玩家时，等待阶段，无倒计时
     * </pre>
     *
     * <code>init = 0;</code>
     */
    public static final int init_VALUE = 0;
    /**
     * <pre>
     * 准备倒计时阶段，结束时开始抢庄或发牌
     * </pre>
     *
     * <code>ready_ing = 1;</code>
     */
    public static final int ready_ing_VALUE = 1;
    /**
     * <pre>
     * 游戏开始，播放开始动画
     * </pre>
     *
     * <code>start_ing = 2;</code>
     */
    public static final int start_ing_VALUE = 2;
    /**
     * <pre>
     * 抢庄倒计时阶段，结束时开始下注
     * </pre>
     *
     * <code>grab_ing = 3;</code>
     */
    public static final int grab_ing_VALUE = 3;
    /**
     * <pre>
     * 确认庄家倒计时，客户端可添加动画
     * </pre>
     *
     * <code>confirm_banker_ing = 4;</code>
     */
    public static final int confirm_banker_ing_VALUE = 4;
    /**
     * <pre>
     * 下注倒计时阶段，结束时开始发牌，然后进入摊牌倒计时
     * </pre>
     *
     * <code>bet_ing = 5;</code>
     */
    public static final int bet_ing_VALUE = 5;
    /**
     * <pre>
     * 摊牌倒计时阶段，结束时开始返回结果，然后进入回顾倒计时
     * </pre>
     *
     * <code>showhand_ing = 6;</code>
     */
    public static final int showhand_ing_VALUE = 6;
    /**
     * <pre>
     * 回顾倒计时阶段，结束时开始准备倒计时，如小于等于一个玩家，返回init阶段
     * </pre>
     *
     * <code>over_ing = 7;</code>
     */
    public static final int over_ing_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static room_stage valueOf(int value) {
      return forNumber(value);
    }

    public static room_stage forNumber(int value) {
      switch (value) {
        case 0: return init;
        case 1: return ready_ing;
        case 2: return start_ing;
        case 3: return grab_ing;
        case 4: return confirm_banker_ing;
        case 5: return bet_ing;
        case 6: return showhand_ing;
        case 7: return over_ing;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<room_stage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        room_stage> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<room_stage>() {
            public room_stage findValueByNumber(int number) {
              return room_stage.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocols.coinroom.common.getDescriptor().getEnumTypes().get(2);
    }

    private static final room_stage[] VALUES = values();

    public static room_stage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private room_stage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:room_stage)
  }

  /**
   * Protobuf enum {@code user_role}
   */
  public enum user_role
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 玩家
     * </pre>
     *
     * <code>player = 0;</code>
     */
    player(0),
    /**
     * <pre>
     * 坐着等待开始的玩家
     * </pre>
     *
     * <code>sitdowner = 1;</code>
     */
    sitdowner(1),
    /**
     * <pre>
     * 观众
     * </pre>
     *
     * <code>audience = 2;</code>
     */
    audience(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 玩家
     * </pre>
     *
     * <code>player = 0;</code>
     */
    public static final int player_VALUE = 0;
    /**
     * <pre>
     * 坐着等待开始的玩家
     * </pre>
     *
     * <code>sitdowner = 1;</code>
     */
    public static final int sitdowner_VALUE = 1;
    /**
     * <pre>
     * 观众
     * </pre>
     *
     * <code>audience = 2;</code>
     */
    public static final int audience_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static user_role valueOf(int value) {
      return forNumber(value);
    }

    public static user_role forNumber(int value) {
      switch (value) {
        case 0: return player;
        case 1: return sitdowner;
        case 2: return audience;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<user_role>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        user_role> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<user_role>() {
            public user_role findValueByNumber(int number) {
              return user_role.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocols.coinroom.common.getDescriptor().getEnumTypes().get(3);
    }

    private static final user_role[] VALUES = values();

    public static user_role valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private user_role(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:user_role)
  }

  public interface room_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:room_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>uint32 roomId = 1;</code>
     */
    int getRoomId();

    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>.room_type mode = 2;</code>
     */
    int getModeValue();
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>.room_type mode = 2;</code>
     */
    protocols.coinroom.common.room_type getMode();

    /**
     * <pre>
     * 房间底分
     * </pre>
     *
     * <code>uint32 base_score = 3;</code>
     */
    int getBaseScore();

    /**
     * <pre>
     * 房间最小金币数
     * </pre>
     *
     * <code>uint32 minCoin = 4;</code>
     */
    int getMinCoin();

    /**
     * <pre>
     * 房间座位数
     * </pre>
     *
     * <code>uint32 maxSeat = 5;</code>
     */
    int getMaxSeat();

    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>.room_grade grade = 6;</code>
     */
    int getGradeValue();
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>.room_grade grade = 6;</code>
     */
    protocols.coinroom.common.room_grade getGrade();

    /**
     * <pre>
     * 抽水百分比
     * </pre>
     *
     * <code>uint32 drawPercent = 7;</code>
     */
    int getDrawPercent();

    /**
     * <pre>
     * 是否加密房
     * </pre>
     *
     * <code>bool encrypted = 8;</code>
     */
    boolean getEncrypted();
  }
  /**
   * Protobuf type {@code room_info}
   */
  public  static final class room_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:room_info)
      room_infoOrBuilder {
    // Use room_info.newBuilder() to construct.
    private room_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private room_info() {
      roomId_ = 0;
      mode_ = 0;
      baseScore_ = 0;
      minCoin_ = 0;
      maxSeat_ = 0;
      grade_ = 0;
      drawPercent_ = 0;
      encrypted_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private room_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              roomId_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            case 24: {

              baseScore_ = input.readUInt32();
              break;
            }
            case 32: {

              minCoin_ = input.readUInt32();
              break;
            }
            case 40: {

              maxSeat_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              grade_ = rawValue;
              break;
            }
            case 56: {

              drawPercent_ = input.readUInt32();
              break;
            }
            case 64: {

              encrypted_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.common.internal_static_room_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.common.internal_static_room_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.common.room_info.class, protocols.coinroom.common.room_info.Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private int roomId_;
    /**
     * <pre>
     * 房间号
     * </pre>
     *
     * <code>uint32 roomId = 1;</code>
     */
    public int getRoomId() {
      return roomId_;
    }

    public static final int MODE_FIELD_NUMBER = 2;
    private int mode_;
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>.room_type mode = 2;</code>
     */
    public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * 无庄模式还是抢庄模式
     * </pre>
     *
     * <code>.room_type mode = 2;</code>
     */
    public protocols.coinroom.common.room_type getMode() {
      protocols.coinroom.common.room_type result = protocols.coinroom.common.room_type.valueOf(mode_);
      return result == null ? protocols.coinroom.common.room_type.UNRECOGNIZED : result;
    }

    public static final int BASE_SCORE_FIELD_NUMBER = 3;
    private int baseScore_;
    /**
     * <pre>
     * 房间底分
     * </pre>
     *
     * <code>uint32 base_score = 3;</code>
     */
    public int getBaseScore() {
      return baseScore_;
    }

    public static final int MINCOIN_FIELD_NUMBER = 4;
    private int minCoin_;
    /**
     * <pre>
     * 房间最小金币数
     * </pre>
     *
     * <code>uint32 minCoin = 4;</code>
     */
    public int getMinCoin() {
      return minCoin_;
    }

    public static final int MAXSEAT_FIELD_NUMBER = 5;
    private int maxSeat_;
    /**
     * <pre>
     * 房间座位数
     * </pre>
     *
     * <code>uint32 maxSeat = 5;</code>
     */
    public int getMaxSeat() {
      return maxSeat_;
    }

    public static final int GRADE_FIELD_NUMBER = 6;
    private int grade_;
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>.room_grade grade = 6;</code>
     */
    public int getGradeValue() {
      return grade_;
    }
    /**
     * <pre>
     * 初级场、中级场、高级场
     * </pre>
     *
     * <code>.room_grade grade = 6;</code>
     */
    public protocols.coinroom.common.room_grade getGrade() {
      protocols.coinroom.common.room_grade result = protocols.coinroom.common.room_grade.valueOf(grade_);
      return result == null ? protocols.coinroom.common.room_grade.UNRECOGNIZED : result;
    }

    public static final int DRAWPERCENT_FIELD_NUMBER = 7;
    private int drawPercent_;
    /**
     * <pre>
     * 抽水百分比
     * </pre>
     *
     * <code>uint32 drawPercent = 7;</code>
     */
    public int getDrawPercent() {
      return drawPercent_;
    }

    public static final int ENCRYPTED_FIELD_NUMBER = 8;
    private boolean encrypted_;
    /**
     * <pre>
     * 是否加密房
     * </pre>
     *
     * <code>bool encrypted = 8;</code>
     */
    public boolean getEncrypted() {
      return encrypted_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (roomId_ != 0) {
        output.writeUInt32(1, roomId_);
      }
      if (mode_ != protocols.coinroom.common.room_type.dealer_none.getNumber()) {
        output.writeEnum(2, mode_);
      }
      if (baseScore_ != 0) {
        output.writeUInt32(3, baseScore_);
      }
      if (minCoin_ != 0) {
        output.writeUInt32(4, minCoin_);
      }
      if (maxSeat_ != 0) {
        output.writeUInt32(5, maxSeat_);
      }
      if (grade_ != protocols.coinroom.common.room_grade.primary.getNumber()) {
        output.writeEnum(6, grade_);
      }
      if (drawPercent_ != 0) {
        output.writeUInt32(7, drawPercent_);
      }
      if (encrypted_ != false) {
        output.writeBool(8, encrypted_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (roomId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, roomId_);
      }
      if (mode_ != protocols.coinroom.common.room_type.dealer_none.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mode_);
      }
      if (baseScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, baseScore_);
      }
      if (minCoin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, minCoin_);
      }
      if (maxSeat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxSeat_);
      }
      if (grade_ != protocols.coinroom.common.room_grade.primary.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, grade_);
      }
      if (drawPercent_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, drawPercent_);
      }
      if (encrypted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, encrypted_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.common.room_info)) {
        return super.equals(obj);
      }
      protocols.coinroom.common.room_info other = (protocols.coinroom.common.room_info) obj;

      boolean result = true;
      result = result && (getRoomId()
          == other.getRoomId());
      result = result && mode_ == other.mode_;
      result = result && (getBaseScore()
          == other.getBaseScore());
      result = result && (getMinCoin()
          == other.getMinCoin());
      result = result && (getMaxSeat()
          == other.getMaxSeat());
      result = result && grade_ == other.grade_;
      result = result && (getDrawPercent()
          == other.getDrawPercent());
      result = result && (getEncrypted()
          == other.getEncrypted());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      hash = (37 * hash) + BASE_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getBaseScore();
      hash = (37 * hash) + MINCOIN_FIELD_NUMBER;
      hash = (53 * hash) + getMinCoin();
      hash = (37 * hash) + MAXSEAT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSeat();
      hash = (37 * hash) + GRADE_FIELD_NUMBER;
      hash = (53 * hash) + grade_;
      hash = (37 * hash) + DRAWPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getDrawPercent();
      hash = (37 * hash) + ENCRYPTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEncrypted());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.common.room_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.common.room_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.common.room_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.common.room_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.common.room_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.room_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.common.room_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.room_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.common.room_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.room_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.common.room_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code room_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:room_info)
        protocols.coinroom.common.room_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.common.internal_static_room_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.common.internal_static_room_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.common.room_info.class, protocols.coinroom.common.room_info.Builder.class);
      }

      // Construct using protocols.coinroom.common.room_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = 0;

        mode_ = 0;

        baseScore_ = 0;

        minCoin_ = 0;

        maxSeat_ = 0;

        grade_ = 0;

        drawPercent_ = 0;

        encrypted_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.common.internal_static_room_info_descriptor;
      }

      public protocols.coinroom.common.room_info getDefaultInstanceForType() {
        return protocols.coinroom.common.room_info.getDefaultInstance();
      }

      public protocols.coinroom.common.room_info build() {
        protocols.coinroom.common.room_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.common.room_info buildPartial() {
        protocols.coinroom.common.room_info result = new protocols.coinroom.common.room_info(this);
        result.roomId_ = roomId_;
        result.mode_ = mode_;
        result.baseScore_ = baseScore_;
        result.minCoin_ = minCoin_;
        result.maxSeat_ = maxSeat_;
        result.grade_ = grade_;
        result.drawPercent_ = drawPercent_;
        result.encrypted_ = encrypted_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.common.room_info) {
          return mergeFrom((protocols.coinroom.common.room_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.common.room_info other) {
        if (other == protocols.coinroom.common.room_info.getDefaultInstance()) return this;
        if (other.getRoomId() != 0) {
          setRoomId(other.getRoomId());
        }
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.getBaseScore() != 0) {
          setBaseScore(other.getBaseScore());
        }
        if (other.getMinCoin() != 0) {
          setMinCoin(other.getMinCoin());
        }
        if (other.getMaxSeat() != 0) {
          setMaxSeat(other.getMaxSeat());
        }
        if (other.grade_ != 0) {
          setGradeValue(other.getGradeValue());
        }
        if (other.getDrawPercent() != 0) {
          setDrawPercent(other.getDrawPercent());
        }
        if (other.getEncrypted() != false) {
          setEncrypted(other.getEncrypted());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.common.room_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.common.room_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int roomId_ ;
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>uint32 roomId = 1;</code>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>uint32 roomId = 1;</code>
       */
      public Builder setRoomId(int value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间号
       * </pre>
       *
       * <code>uint32 roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = 0;
        onChanged();
        return this;
      }

      private int mode_ = 0;
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>.room_type mode = 2;</code>
       */
      public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>.room_type mode = 2;</code>
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>.room_type mode = 2;</code>
       */
      public protocols.coinroom.common.room_type getMode() {
        protocols.coinroom.common.room_type result = protocols.coinroom.common.room_type.valueOf(mode_);
        return result == null ? protocols.coinroom.common.room_type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>.room_type mode = 2;</code>
       */
      public Builder setMode(protocols.coinroom.common.room_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 无庄模式还是抢庄模式
       * </pre>
       *
       * <code>.room_type mode = 2;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int baseScore_ ;
      /**
       * <pre>
       * 房间底分
       * </pre>
       *
       * <code>uint32 base_score = 3;</code>
       */
      public int getBaseScore() {
        return baseScore_;
      }
      /**
       * <pre>
       * 房间底分
       * </pre>
       *
       * <code>uint32 base_score = 3;</code>
       */
      public Builder setBaseScore(int value) {
        
        baseScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间底分
       * </pre>
       *
       * <code>uint32 base_score = 3;</code>
       */
      public Builder clearBaseScore() {
        
        baseScore_ = 0;
        onChanged();
        return this;
      }

      private int minCoin_ ;
      /**
       * <pre>
       * 房间最小金币数
       * </pre>
       *
       * <code>uint32 minCoin = 4;</code>
       */
      public int getMinCoin() {
        return minCoin_;
      }
      /**
       * <pre>
       * 房间最小金币数
       * </pre>
       *
       * <code>uint32 minCoin = 4;</code>
       */
      public Builder setMinCoin(int value) {
        
        minCoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间最小金币数
       * </pre>
       *
       * <code>uint32 minCoin = 4;</code>
       */
      public Builder clearMinCoin() {
        
        minCoin_ = 0;
        onChanged();
        return this;
      }

      private int maxSeat_ ;
      /**
       * <pre>
       * 房间座位数
       * </pre>
       *
       * <code>uint32 maxSeat = 5;</code>
       */
      public int getMaxSeat() {
        return maxSeat_;
      }
      /**
       * <pre>
       * 房间座位数
       * </pre>
       *
       * <code>uint32 maxSeat = 5;</code>
       */
      public Builder setMaxSeat(int value) {
        
        maxSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 房间座位数
       * </pre>
       *
       * <code>uint32 maxSeat = 5;</code>
       */
      public Builder clearMaxSeat() {
        
        maxSeat_ = 0;
        onChanged();
        return this;
      }

      private int grade_ = 0;
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>.room_grade grade = 6;</code>
       */
      public int getGradeValue() {
        return grade_;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>.room_grade grade = 6;</code>
       */
      public Builder setGradeValue(int value) {
        grade_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>.room_grade grade = 6;</code>
       */
      public protocols.coinroom.common.room_grade getGrade() {
        protocols.coinroom.common.room_grade result = protocols.coinroom.common.room_grade.valueOf(grade_);
        return result == null ? protocols.coinroom.common.room_grade.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>.room_grade grade = 6;</code>
       */
      public Builder setGrade(protocols.coinroom.common.room_grade value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        grade_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 初级场、中级场、高级场
       * </pre>
       *
       * <code>.room_grade grade = 6;</code>
       */
      public Builder clearGrade() {
        
        grade_ = 0;
        onChanged();
        return this;
      }

      private int drawPercent_ ;
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public int getDrawPercent() {
        return drawPercent_;
      }
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public Builder setDrawPercent(int value) {
        
        drawPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 抽水百分比
       * </pre>
       *
       * <code>uint32 drawPercent = 7;</code>
       */
      public Builder clearDrawPercent() {
        
        drawPercent_ = 0;
        onChanged();
        return this;
      }

      private boolean encrypted_ ;
      /**
       * <pre>
       * 是否加密房
       * </pre>
       *
       * <code>bool encrypted = 8;</code>
       */
      public boolean getEncrypted() {
        return encrypted_;
      }
      /**
       * <pre>
       * 是否加密房
       * </pre>
       *
       * <code>bool encrypted = 8;</code>
       */
      public Builder setEncrypted(boolean value) {
        
        encrypted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否加密房
       * </pre>
       *
       * <code>bool encrypted = 8;</code>
       */
      public Builder clearEncrypted() {
        
        encrypted_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:room_info)
    }

    // @@protoc_insertion_point(class_scope:room_info)
    private static final protocols.coinroom.common.room_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.common.room_info();
    }

    public static protocols.coinroom.common.room_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<room_info>
        PARSER = new com.google.protobuf.AbstractParser<room_info>() {
      public room_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new room_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<room_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<room_info> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.common.room_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface user_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:user_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 用户id
     * </pre>
     *
     * <code>uint32 userId = 1;</code>
     */
    int getUserId();

    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    java.lang.String getUserName();
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>uint32 avatar = 3;</code>
     */
    int getAvatar();

    /**
     * <pre>
     * 金币数
     * </pre>
     *
     * <code>uint32 coin = 4;</code>
     */
    int getCoin();
  }
  /**
   * Protobuf type {@code user_info}
   */
  public  static final class user_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:user_info)
      user_infoOrBuilder {
    // Use user_info.newBuilder() to construct.
    private user_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private user_info() {
      userId_ = 0;
      userName_ = "";
      avatar_ = 0;
      coin_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private user_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              userId_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              userName_ = s;
              break;
            }
            case 24: {

              avatar_ = input.readUInt32();
              break;
            }
            case 32: {

              coin_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocols.coinroom.common.internal_static_user_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocols.coinroom.common.internal_static_user_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocols.coinroom.common.user_info.class, protocols.coinroom.common.user_info.Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <pre>
     * 用户id
     * </pre>
     *
     * <code>uint32 userId = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object userName_;
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 昵称
     * </pre>
     *
     * <code>string userName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVATAR_FIELD_NUMBER = 3;
    private int avatar_;
    /**
     * <pre>
     * 头像
     * </pre>
     *
     * <code>uint32 avatar = 3;</code>
     */
    public int getAvatar() {
      return avatar_;
    }

    public static final int COIN_FIELD_NUMBER = 4;
    private int coin_;
    /**
     * <pre>
     * 金币数
     * </pre>
     *
     * <code>uint32 coin = 4;</code>
     */
    public int getCoin() {
      return coin_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userId_ != 0) {
        output.writeUInt32(1, userId_);
      }
      if (!getUserNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userName_);
      }
      if (avatar_ != 0) {
        output.writeUInt32(3, avatar_);
      }
      if (coin_ != 0) {
        output.writeUInt32(4, coin_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, userId_);
      }
      if (!getUserNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userName_);
      }
      if (avatar_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, avatar_);
      }
      if (coin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, coin_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocols.coinroom.common.user_info)) {
        return super.equals(obj);
      }
      protocols.coinroom.common.user_info other = (protocols.coinroom.common.user_info) obj;

      boolean result = true;
      result = result && (getUserId()
          == other.getUserId());
      result = result && getUserName()
          .equals(other.getUserName());
      result = result && (getAvatar()
          == other.getAvatar());
      result = result && (getCoin()
          == other.getCoin());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId();
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUserName().hashCode();
      hash = (37 * hash) + AVATAR_FIELD_NUMBER;
      hash = (53 * hash) + getAvatar();
      hash = (37 * hash) + COIN_FIELD_NUMBER;
      hash = (53 * hash) + getCoin();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocols.coinroom.common.user_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.common.user_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.common.user_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocols.coinroom.common.user_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocols.coinroom.common.user_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.user_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.common.user_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.user_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocols.coinroom.common.user_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocols.coinroom.common.user_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocols.coinroom.common.user_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code user_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:user_info)
        protocols.coinroom.common.user_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocols.coinroom.common.internal_static_user_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocols.coinroom.common.internal_static_user_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocols.coinroom.common.user_info.class, protocols.coinroom.common.user_info.Builder.class);
      }

      // Construct using protocols.coinroom.common.user_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = 0;

        userName_ = "";

        avatar_ = 0;

        coin_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocols.coinroom.common.internal_static_user_info_descriptor;
      }

      public protocols.coinroom.common.user_info getDefaultInstanceForType() {
        return protocols.coinroom.common.user_info.getDefaultInstance();
      }

      public protocols.coinroom.common.user_info build() {
        protocols.coinroom.common.user_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocols.coinroom.common.user_info buildPartial() {
        protocols.coinroom.common.user_info result = new protocols.coinroom.common.user_info(this);
        result.userId_ = userId_;
        result.userName_ = userName_;
        result.avatar_ = avatar_;
        result.coin_ = coin_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocols.coinroom.common.user_info) {
          return mergeFrom((protocols.coinroom.common.user_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocols.coinroom.common.user_info other) {
        if (other == protocols.coinroom.common.user_info.getDefaultInstance()) return this;
        if (other.getUserId() != 0) {
          setUserId(other.getUserId());
        }
        if (!other.getUserName().isEmpty()) {
          userName_ = other.userName_;
          onChanged();
        }
        if (other.getAvatar() != 0) {
          setAvatar(other.getAvatar());
        }
        if (other.getCoin() != 0) {
          setCoin(other.getCoin());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocols.coinroom.common.user_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocols.coinroom.common.user_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int userId_ ;
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public Builder setUserId(int value) {
        
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 用户id
       * </pre>
       *
       * <code>uint32 userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object userName_ = "";
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder clearUserName() {
        
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 昵称
       * </pre>
       *
       * <code>string userName = 2;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userName_ = value;
        onChanged();
        return this;
      }

      private int avatar_ ;
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public int getAvatar() {
        return avatar_;
      }
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public Builder setAvatar(int value) {
        
        avatar_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 头像
       * </pre>
       *
       * <code>uint32 avatar = 3;</code>
       */
      public Builder clearAvatar() {
        
        avatar_ = 0;
        onChanged();
        return this;
      }

      private int coin_ ;
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public int getCoin() {
        return coin_;
      }
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public Builder setCoin(int value) {
        
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 金币数
       * </pre>
       *
       * <code>uint32 coin = 4;</code>
       */
      public Builder clearCoin() {
        
        coin_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:user_info)
    }

    // @@protoc_insertion_point(class_scope:user_info)
    private static final protocols.coinroom.common.user_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocols.coinroom.common.user_info();
    }

    public static protocols.coinroom.common.user_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<user_info>
        PARSER = new com.google.protobuf.AbstractParser<user_info>() {
      public user_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new user_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<user_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<user_info> getParserForType() {
      return PARSER;
    }

    public protocols.coinroom.common.user_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_room_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_room_info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_user_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_user_info_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025coinroom/common.proto\"\257\001\n\troom_info\022\016\n" +
      "\006roomId\030\001 \001(\r\022\030\n\004mode\030\002 \001(\0162\n.room_type\022" +
      "\022\n\nbase_score\030\003 \001(\r\022\017\n\007minCoin\030\004 \001(\r\022\017\n\007" +
      "maxSeat\030\005 \001(\r\022\032\n\005grade\030\006 \001(\0162\013.room_grad" +
      "e\022\023\n\013drawPercent\030\007 \001(\r\022\021\n\tencrypted\030\010 \001(" +
      "\010\"K\n\tuser_info\022\016\n\006userId\030\001 \001(\r\022\020\n\010userNa" +
      "me\030\002 \001(\t\022\016\n\006avatar\030\003 \001(\r\022\014\n\004coin\030\004 \001(\r*-" +
      "\n\troom_type\022\017\n\013dealer_none\020\000\022\017\n\013dealer_g" +
      "rab\020\001*1\n\nroom_grade\022\013\n\007primary\020\000\022\n\n\006juni" +
      "or\020\001\022\n\n\006senior\020\002*\207\001\n\nroom_stage\022\010\n\004init\020",
      "\000\022\r\n\tready_ing\020\001\022\r\n\tstart_ing\020\002\022\014\n\010grab_" +
      "ing\020\003\022\026\n\022confirm_banker_ing\020\004\022\013\n\007bet_ing" +
      "\020\005\022\020\n\014showhand_ing\020\006\022\014\n\010over_ing\020\007*4\n\tus" +
      "er_role\022\n\n\006player\020\000\022\r\n\tsitdowner\020\001\022\014\n\010au" +
      "dience\020\002B\034\n\022protocols.coinroomB\006commonb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_room_info_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_room_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_room_info_descriptor,
        new java.lang.String[] { "RoomId", "Mode", "BaseScore", "MinCoin", "MaxSeat", "Grade", "DrawPercent", "Encrypted", });
    internal_static_user_info_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_user_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_user_info_descriptor,
        new java.lang.String[] { "UserId", "UserName", "Avatar", "Coin", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
